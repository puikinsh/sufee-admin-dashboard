{"version":3,"file":"frame-DkQkxPBU.js","sources":["../../src/frame.html?html-proxy&index=2.js"],"sourcesContent":["\n        // Frame functionality\n        document.addEventListener('DOMContentLoaded', function() {\n            const urlInput = document.getElementById('urlInput');\n            const loadBtn = document.getElementById('loadBtn');\n            const refreshBtn = document.getElementById('refreshBtn');\n            const homeBtn = document.getElementById('homeBtn');\n            const contentFrame = document.getElementById('contentFrame');\n            const loadingIndicator = document.getElementById('loadingIndicator');\n            const statusMessage = document.getElementById('statusMessage');\n            const presetBtns = document.querySelectorAll('.preset-btn');\n            \n            let currentUrl = '/';\n            let loadTimeout;\n            \n            // Show status message\n            function showStatus(message, type = 'success') {\n                statusMessage.textContent = message;\n                statusMessage.className = `iframe-status ${type}`;\n                statusMessage.style.display = 'block';\n                \n                // Auto-hide after 3 seconds\n                setTimeout(() => {\n                    statusMessage.style.display = 'none';\n                }, 3000);\n            }\n            \n            // Show loading state\n            function showLoading() {\n                loadingIndicator.style.display = 'flex';\n                loadBtn.disabled = true;\n                loadBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Loading...';\n                \n                // Set timeout for loading\n                loadTimeout = setTimeout(() => {\n                    hideLoading();\n                    showStatus('Loading timed out. The content may not be accessible.', 'error');\n                }, 15000); // 15 second timeout\n            }\n            \n            // Hide loading state\n            function hideLoading() {\n                loadingIndicator.style.display = 'none';\n                loadBtn.disabled = false;\n                loadBtn.innerHTML = '<i class=\"fas fa-play\"></i> Load';\n                \n                if (loadTimeout) {\n                    clearTimeout(loadTimeout);\n                    loadTimeout = null;\n                }\n            }\n            \n            // Validate URL\n            function isValidUrl(string) {\n                try {\n                    new URL(string);\n                    return true;\n                } catch (_) {\n                    // Try with protocol\n                    try {\n                        if (!string.startsWith('http://') && !string.startsWith('https://') && !string.startsWith('/')) {\n                            new URL('https://' + string);\n                            return true;\n                        }\n                    } catch (_) {\n                        return false;\n                    }\n                    return false;\n                }\n            }\n            \n            // Load URL in iframe\n            function loadUrl(url) {\n                if (!url.trim()) {\n                    showStatus('Please enter a valid URL', 'error');\n                    return;\n                }\n                \n                // Normalize URL\n                let normalizedUrl = url.trim();\n                if (!normalizedUrl.startsWith('http://') && \n                    !normalizedUrl.startsWith('https://') && \n                    !normalizedUrl.startsWith('/')) {\n                    normalizedUrl = 'https://' + normalizedUrl;\n                }\n                \n                if (!isValidUrl(normalizedUrl)) {\n                    showStatus('Please enter a valid URL', 'error');\n                    return;\n                }\n                \n                showLoading();\n                currentUrl = normalizedUrl;\n                urlInput.value = normalizedUrl;\n                \n                // Update iframe src\n                contentFrame.src = normalizedUrl;\n                \n                console.log('Loading URL:', normalizedUrl);\n            }\n            \n            // Event listeners\n            loadBtn.addEventListener('click', function() {\n                loadUrl(urlInput.value);\n            });\n            \n            refreshBtn.addEventListener('click', function() {\n                if (currentUrl) {\n                    showLoading();\n                    contentFrame.src = currentUrl + (currentUrl.includes('?') ? '&' : '?') + '_t=' + Date.now();\n                    showStatus('Content refreshed');\n                }\n            });\n            \n            homeBtn.addEventListener('click', function() {\n                loadUrl('/');\n            });\n            \n            // Preset button clicks\n            presetBtns.forEach(btn => {\n                btn.addEventListener('click', function() {\n                    const url = this.getAttribute('data-url');\n                    loadUrl(url);\n                });\n            });\n            \n            // Enter key in URL input\n            urlInput.addEventListener('keydown', function(e) {\n                if (e.key === 'Enter') {\n                    e.preventDefault();\n                    loadUrl(this.value);\n                }\n            });\n            \n            // Iframe load events\n            contentFrame.addEventListener('load', function() {\n                hideLoading();\n                \n                try {\n                    // Try to access iframe content (will fail for cross-origin)\n                    const iframeDoc = this.contentDocument || this.contentWindow.document;\n                    if (iframeDoc) {\n                        const title = iframeDoc.title;\n                        if (title) {\n                            showStatus(`Loaded: ${title}`);\n                        } else {\n                            showStatus('Content loaded successfully');\n                        }\n                    } else {\n                        showStatus('Content loaded successfully');\n                    }\n                } catch (e) {\n                    // Cross-origin restriction - normal behavior\n                    showStatus('Content loaded successfully');\n                }\n            });\n            \n            contentFrame.addEventListener('error', function() {\n                hideLoading();\n                showStatus('Failed to load content. The URL may not be accessible.', 'error');\n            });\n            \n            // Handle iframe navigation attempts\n            window.addEventListener('message', function(event) {\n                // Handle messages from iframe content if needed\n                console.log('Message from iframe:', event.data);\n            });\n            \n            // Initial load indication\n            showLoading();\n            \n            // Auto-hide loading when page is ready\n            if (contentFrame.complete || contentFrame.readyState === 'complete') {\n                hideLoading();\n            }\n            \n            // Back/Forward button handling\n            window.addEventListener('popstate', function(event) {\n                if (event.state && event.state.iframeUrl) {\n                    urlInput.value = event.state.iframeUrl;\n                    loadUrl(event.state.iframeUrl);\n                }\n            });\n            \n            // Update browser history when URL changes\n            function updateHistory(url) {\n                const title = `Frame: ${url}`;\n                history.pushState({iframeUrl: url}, title, window.location.pathname + '?url=' + encodeURIComponent(url));\n            }\n            \n            // Check for URL parameter on load\n            const urlParams = new URLSearchParams(window.location.search);\n            const initialUrl = urlParams.get('url');\n            if (initialUrl) {\n                urlInput.value = initialUrl;\n                loadUrl(initialUrl);\n            }\n            \n            // Update history when loading new URLs\n            const originalLoadUrl = loadUrl;\n            loadUrl = function(url) {\n                originalLoadUrl(url);\n                if (url !== '/') {\n                    updateHistory(url);\n                }\n            };\n        });\n    "],"names":["urlInput","loadBtn","refreshBtn","homeBtn","contentFrame","loadingIndicator","statusMessage","presetBtns","currentUrl","loadTimeout","showStatus","message","type","showLoading","hideLoading","isValidUrl","string","_","loadUrl","url","normalizedUrl","btn","e","iframeDoc","title","event","updateHistory","initialUrl","originalLoadUrl"],"mappings":"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"}