{"version":3,"file":"datatable-legacy-CQCISMfn.js","sources":["../../src/scripts/components/datatable.js"],"sourcesContent":["// DataTable Component - Vanilla JS replacement for jQuery DataTables\n\nexport class DataTable {\n  constructor(table, options = {}) {\n    this.table = typeof table === 'string' ? document.querySelector(table) : table\n    this.options = {\n      sortable: true,\n      searchable: true,\n      pagination: true,\n      pageSize: 10,\n      ...options\n    }\n    \n    this.data = []\n    this.filteredData = []\n    this.currentPage = 1\n    this.sortColumn = null\n    this.sortDirection = 'asc'\n    \n    if (this.table) {\n      this.init()\n    }\n  }\n\n  init() {\n    this.extractData()\n    this.createWrapper()\n    this.createControls()\n    this.render()\n    this.setupEventListeners()\n  }\n\n  extractData() {\n    const rows = this.table.querySelectorAll('tbody tr')\n    this.data = Array.from(rows).map(row => {\n      const cells = row.querySelectorAll('td')\n      return Array.from(cells).map(cell => cell.innerHTML)\n    })\n    this.filteredData = [...this.data]\n  }\n\n  createWrapper() {\n    const wrapper = document.createElement('div')\n    wrapper.className = 'datatable-wrapper'\n    wrapper.innerHTML = `\n      <div class=\"datatable-top\">\n        ${this.options.searchable ? '<div class=\"datatable-search\"><input type=\"text\" placeholder=\"Search...\" class=\"form-control\"></div>' : ''}\n      </div>\n      <div class=\"datatable-container\"></div>\n      ${this.options.pagination ? '<div class=\"datatable-bottom\"><div class=\"datatable-info\"></div><div class=\"datatable-pagination\"></div></div>' : ''}\n    `\n    \n    this.table.parentNode.insertBefore(wrapper, this.table)\n    wrapper.querySelector('.datatable-container').appendChild(this.table)\n    this.wrapper = wrapper\n  }\n\n  createControls() {\n    if (this.options.searchable) {\n      this.searchInput = this.wrapper.querySelector('.datatable-search input')\n    }\n    \n    if (this.options.pagination) {\n      this.infoElement = this.wrapper.querySelector('.datatable-info')\n      this.paginationElement = this.wrapper.querySelector('.datatable-pagination')\n    }\n  }\n\n  setupEventListeners() {\n    // Search functionality\n    if (this.searchInput) {\n      this.searchInput.addEventListener('input', (e) => {\n        this.search(e.target.value)\n      })\n    }\n\n    // Sorting functionality\n    if (this.options.sortable) {\n      const headers = this.table.querySelectorAll('thead th')\n      headers.forEach((header, index) => {\n        header.style.cursor = 'pointer'\n        header.addEventListener('click', () => {\n          this.sort(index)\n        })\n      })\n    }\n  }\n\n  search(query) {\n    if (!query) {\n      this.filteredData = [...this.data]\n    } else {\n      this.filteredData = this.data.filter(row =>\n        row.some(cell => \n          cell.toLowerCase().includes(query.toLowerCase())\n        )\n      )\n    }\n    \n    this.currentPage = 1\n    this.render()\n  }\n\n  sort(columnIndex) {\n    if (this.sortColumn === columnIndex) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc'\n    } else {\n      this.sortColumn = columnIndex\n      this.sortDirection = 'asc'\n    }\n\n    this.filteredData.sort((a, b) => {\n      const aVal = a[columnIndex]\n      const bVal = b[columnIndex]\n      \n      // Try to parse as numbers\n      const aNum = parseFloat(aVal.replace(/[^0-9.-]/g, ''))\n      const bNum = parseFloat(bVal.replace(/[^0-9.-]/g, ''))\n      \n      let comparison = 0\n      if (!isNaN(aNum) && !isNaN(bNum)) {\n        comparison = aNum - bNum\n      } else {\n        comparison = aVal.localeCompare(bVal)\n      }\n      \n      return this.sortDirection === 'asc' ? comparison : -comparison\n    })\n\n    this.updateSortIndicators()\n    this.render()\n  }\n\n  updateSortIndicators() {\n    const headers = this.table.querySelectorAll('thead th')\n    headers.forEach((header, index) => {\n      header.classList.remove('sort-asc', 'sort-desc')\n      if (index === this.sortColumn) {\n        header.classList.add(`sort-${this.sortDirection}`)\n      }\n    })\n  }\n\n  render() {\n    this.renderTable()\n    if (this.options.pagination) {\n      this.renderPagination()\n      this.renderInfo()\n    }\n  }\n\n  renderTable() {\n    const tbody = this.table.querySelector('tbody')\n    const startIndex = (this.currentPage - 1) * this.options.pageSize\n    const endIndex = startIndex + this.options.pageSize\n    const pageData = this.options.pagination ? \n      this.filteredData.slice(startIndex, endIndex) : \n      this.filteredData\n\n    tbody.innerHTML = pageData.map(row => \n      `<tr>${row.map(cell => `<td>${cell}</td>`).join('')}</tr>`\n    ).join('')\n  }\n\n  renderPagination() {\n    const totalPages = Math.ceil(this.filteredData.length / this.options.pageSize)\n    \n    if (totalPages <= 1) {\n      this.paginationElement.innerHTML = ''\n      return\n    }\n\n    const pagination = document.createElement('nav')\n    pagination.innerHTML = `\n      <ul class=\"pagination\">\n        <li class=\"page-item ${this.currentPage === 1 ? 'disabled' : ''}\">\n          <a class=\"page-link\" href=\"#\" data-page=\"prev\">Previous</a>\n        </li>\n        ${Array.from({ length: totalPages }, (_, i) => i + 1)\n          .filter(page => this.shouldShowPage(page, totalPages))\n          .map(page => `\n            <li class=\"page-item ${page === this.currentPage ? 'active' : ''}\">\n              <a class=\"page-link\" href=\"#\" data-page=\"${page}\">${page}</a>\n            </li>\n          `).join('')}\n        <li class=\"page-item ${this.currentPage === totalPages ? 'disabled' : ''}\">\n          <a class=\"page-link\" href=\"#\" data-page=\"next\">Next</a>\n        </li>\n      </ul>\n    `\n\n    // Add event listeners to pagination links\n    pagination.addEventListener('click', (e) => {\n      e.preventDefault()\n      const page = e.target.dataset.page\n      \n      if (page === 'prev' && this.currentPage > 1) {\n        this.currentPage--\n      } else if (page === 'next' && this.currentPage < totalPages) {\n        this.currentPage++\n      } else if (!isNaN(page)) {\n        this.currentPage = parseInt(page)\n      }\n      \n      this.render()\n    })\n\n    this.paginationElement.innerHTML = ''\n    this.paginationElement.appendChild(pagination)\n  }\n\n  shouldShowPage(page, totalPages) {\n    // Show first page, last page, current page, and 2 pages around current\n    return page === 1 || \n           page === totalPages || \n           Math.abs(page - this.currentPage) <= 2\n  }\n\n  renderInfo() {\n    const start = (this.currentPage - 1) * this.options.pageSize + 1\n    const end = Math.min(start + this.options.pageSize - 1, this.filteredData.length)\n    const total = this.filteredData.length\n    \n    this.infoElement.textContent = `Showing ${start} to ${end} of ${total} entries`\n  }\n\n  // Public API methods\n  refresh() {\n    this.extractData()\n    this.filteredData = [...this.data]\n    this.currentPage = 1\n    this.render()\n  }\n\n  destroy() {\n    if (this.wrapper && this.wrapper.parentNode) {\n      this.wrapper.parentNode.insertBefore(this.table, this.wrapper)\n      this.wrapper.remove()\n    }\n  }\n}"],"names":["exports","constructor","table","options","this","document","querySelector","sortable","searchable","pagination","pageSize","data","filteredData","currentPage","sortColumn","sortDirection","init","extractData","createWrapper","createControls","render","setupEventListeners","rows","querySelectorAll","Array","from","map","row","cells","cell","innerHTML","wrapper","createElement","className","parentNode","insertBefore","appendChild","searchInput","infoElement","paginationElement","addEventListener","e","search","target","value","forEach","header","index","style","cursor","sort","query","filter","some","toLowerCase","includes","columnIndex","a","b","aVal","bVal","aNum","parseFloat","replace","bNum","comparison","isNaN","localeCompare","updateSortIndicators","classList","remove","add","renderTable","renderPagination","renderInfo","tbody","startIndex","endIndex","pageData","slice","join","totalPages","Math","ceil","length","_","i","page","shouldShowPage","preventDefault","dataset","parseInt","abs","start","end","min","total","textContent","refresh","destroy"],"mappings":"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"}