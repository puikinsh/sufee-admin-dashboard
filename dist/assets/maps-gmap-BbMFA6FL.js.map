{"version":3,"file":"maps-gmap-BbMFA6FL.js","sources":["../../src/scripts/components/gmaps.js","../../src/maps-gmap.html?html-proxy&index=1.js"],"sourcesContent":["// Google Maps component using native Google Maps JavaScript API\n// No jQuery or external dependencies required\n\nclass GoogleMapsManager {\n    constructor() {\n        this.maps = {};\n        this.markers = {};\n    }\n\n    // Initialize all maps when the API is ready\n    initialize() {\n        // Basic Map\n        this.initBasicMap();\n        \n        // Map with Markers\n        this.initMarkersMap();\n        \n        // Geometry Overlays Map\n        this.initGeometryMap();\n        \n        // Elevation Map\n        this.initElevationMap();\n        \n        // Geolocation Map\n        this.initGeolocationMap();\n        \n        // Styled Map\n        this.initStyledMap();\n        \n        // Traffic Layer Map\n        this.initTrafficMap();\n        \n        // Map Events\n        this.initEventsMap();\n    }\n\n    // Basic Map\n    initBasicMap() {\n        const element = document.getElementById('basic-map');\n        if (!element) return;\n\n        this.maps.basic = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 8,\n            mapTypeControl: false,\n            streetViewControl: false,\n            fullscreenControl: true,\n            zoomControl: true,\n            zoomControlOptions: {\n                position: google.maps.ControlPosition.LEFT_TOP\n            }\n        });\n    }\n\n    // Map with Markers\n    initMarkersMap() {\n        const element = document.getElementById('map-2');\n        if (!element) return;\n\n        this.maps.markers = new google.maps.Map(element, {\n            center: { lat: 41.850033, lng: -87.6500523 },\n            zoom: 11\n        });\n\n        // Add some example markers\n        const locations = [\n            { lat: 41.850033, lng: -87.6500523, title: 'Chicago' },\n            { lat: 41.881832, lng: -87.623177, title: 'Willis Tower' },\n            { lat: 41.878876, lng: -87.635918, title: 'Millennium Park' }\n        ];\n\n        this.markers.markers = locations.map(location => {\n            const marker = new google.maps.Marker({\n                position: { lat: location.lat, lng: location.lng },\n                map: this.maps.markers,\n                title: location.title,\n                animation: google.maps.Animation.DROP\n            });\n\n            const infoWindow = new google.maps.InfoWindow({\n                content: `<div class=\"p-2\"><h6>${location.title}</h6><p>Click for more info</p></div>`\n            });\n\n            marker.addListener('click', () => {\n                infoWindow.open(this.maps.markers, marker);\n            });\n\n            return marker;\n        });\n    }\n\n    // Geometry Overlays Map\n    initGeometryMap() {\n        const element = document.getElementById('map-3');\n        if (!element) return;\n\n        this.maps.geometry = new google.maps.Map(element, {\n            center: { lat: -12.040397656836609, lng: -77.03373871559225 },\n            zoom: 14\n        });\n\n        // Rectangle\n        const rectangle = new google.maps.Rectangle({\n            strokeColor: '#0d6efd',\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: '#0d6efd',\n            fillOpacity: 0.35,\n            map: this.maps.geometry,\n            bounds: {\n                north: -12.030397656836609,\n                south: -12.034804866577001,\n                east: -77.01154422636042,\n                west: -77.02373871559225\n            }\n        });\n\n        // Polygon\n        const triangleCoords = [\n            { lat: -12.040397656836609, lng: -77.03373871559225 },\n            { lat: -12.040248585302038, lng: -77.03993927003302 },\n            { lat: -12.050047116528843, lng: -77.02448169303511 },\n            { lat: -12.044804866577001, lng: -77.02154422636042 }\n        ];\n\n        const polygon = new google.maps.Polygon({\n            paths: triangleCoords,\n            strokeColor: '#198754',\n            strokeOpacity: 0.8,\n            strokeWeight: 3,\n            fillColor: '#198754',\n            fillOpacity: 0.35,\n            map: this.maps.geometry\n        });\n\n        // Circle\n        const circle = new google.maps.Circle({\n            strokeColor: '#6f42c1',\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: '#6f42c1',\n            fillOpacity: 0.35,\n            map: this.maps.geometry,\n            center: { lat: -12.040504866577001, lng: -77.02024422636042 },\n            radius: 350\n        });\n\n        // Fit bounds to show all shapes\n        const bounds = new google.maps.LatLngBounds();\n        bounds.extend({ lat: -12.030397656836609, lng: -77.03993927003302 });\n        bounds.extend({ lat: -12.050047116528843, lng: -77.01154422636042 });\n        this.maps.geometry.fitBounds(bounds);\n    }\n\n    // Elevation Map\n    initElevationMap() {\n        const element = document.getElementById('map-4');\n        if (!element) return;\n\n        this.maps.elevation = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 13\n        });\n\n        const elevator = new google.maps.ElevationService();\n        const locations = [\n            { lat: -12.040397656836609, lng: -77.03373871559225 },\n            { lat: -12.050047116528843, lng: -77.02448169303511 },\n            { lat: -12.044804866577001, lng: -77.02154422636042 }\n        ];\n\n        // Request elevation data\n        elevator.getElevationForLocations({\n            locations: locations\n        }, (results, status) => {\n            if (status === 'OK' && results) {\n                results.forEach((result, index) => {\n                    const marker = new google.maps.Marker({\n                        position: result.location,\n                        map: this.maps.elevation,\n                        title: `Elevation: ${result.elevation.toFixed(2)} meters`\n                    });\n\n                    const infoWindow = new google.maps.InfoWindow({\n                        content: `<div class=\"p-2\">\n                            <h6>Location ${index + 1}</h6>\n                            <p>Elevation: <strong>${result.elevation.toFixed(2)}</strong> meters</p>\n                        </div>`\n                    });\n\n                    marker.addListener('click', () => {\n                        infoWindow.open(this.maps.elevation, marker);\n                    });\n                });\n            }\n        });\n    }\n\n    // Geolocation Map\n    initGeolocationMap() {\n        const element = document.getElementById('map-5');\n        if (!element) return;\n\n        this.maps.geolocation = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 6\n        });\n\n        // Try HTML5 geolocation\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n\n                    this.maps.geolocation.setCenter(pos);\n                    this.maps.geolocation.setZoom(15);\n\n                    new google.maps.Marker({\n                        position: pos,\n                        map: this.maps.geolocation,\n                        title: 'Your Location',\n                        icon: {\n                            path: google.maps.SymbolPath.CIRCLE,\n                            scale: 10,\n                            fillColor: '#0d6efd',\n                            fillOpacity: 0.8,\n                            strokeColor: '#fff',\n                            strokeWeight: 2\n                        }\n                    });\n\n                    const infoWindow = new google.maps.InfoWindow({\n                        content: '<div class=\"p-2\"><h6>You are here!</h6></div>'\n                    });\n                    \n                    infoWindow.setPosition(pos);\n                    infoWindow.open(this.maps.geolocation);\n                },\n                () => {\n                    this.handleLocationError(true, this.maps.geolocation.getCenter());\n                }\n            );\n        } else {\n            // Browser doesn't support Geolocation\n            this.handleLocationError(false, this.maps.geolocation.getCenter());\n        }\n    }\n\n    handleLocationError(browserHasGeolocation, pos) {\n        const infoWindow = new google.maps.InfoWindow({\n            content: browserHasGeolocation\n                ? 'Error: The Geolocation service failed.'\n                : 'Error: Your browser doesn\\'t support geolocation.'\n        });\n        infoWindow.setPosition(pos);\n        infoWindow.open(this.maps.geolocation);\n    }\n\n    // Styled Map\n    initStyledMap() {\n        const element = document.getElementById('map-6');\n        if (!element) return;\n\n        // Night mode style\n        const nightStyle = [\n            { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\n            { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\n            { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\n            {\n                featureType: 'administrative.locality',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#d59563' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'geometry',\n                stylers: [{ color: '#38414e' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'geometry.stroke',\n                stylers: [{ color: '#212a37' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#9ca5b3' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'geometry',\n                stylers: [{ color: '#746855' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'geometry.stroke',\n                stylers: [{ color: '#1f2835' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#f3d19c' }]\n            },\n            {\n                featureType: 'water',\n                elementType: 'geometry',\n                stylers: [{ color: '#17263c' }]\n            }\n        ];\n\n        this.maps.styled = new google.maps.Map(element, {\n            center: { lat: 40.65, lng: -73.95 },\n            zoom: 12,\n            styles: nightStyle\n        });\n    }\n\n    // Traffic Layer Map\n    initTrafficMap() {\n        const element = document.getElementById('map-7');\n        if (!element) return;\n\n        this.maps.traffic = new google.maps.Map(element, {\n            center: { lat: 34.04924594193164, lng: -118.24104309082031 },\n            zoom: 13,\n            mapTypeId: 'roadmap'\n        });\n\n        const trafficLayer = new google.maps.TrafficLayer();\n        trafficLayer.setMap(this.maps.traffic);\n\n        const transitLayer = new google.maps.TransitLayer();\n        transitLayer.setMap(this.maps.traffic);\n    }\n\n    // Map Events\n    initEventsMap() {\n        const element = document.getElementById('map-8');\n        if (!element) return;\n\n        this.maps.events = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 16\n        });\n\n        // Click event\n        this.maps.events.addListener('click', (e) => {\n            const marker = new google.maps.Marker({\n                position: e.latLng,\n                map: this.maps.events,\n                animation: google.maps.Animation.DROP\n            });\n\n            const infoWindow = new google.maps.InfoWindow({\n                content: `<div class=\"p-2\">\n                    <h6>You clicked here!</h6>\n                    <p>Lat: ${e.latLng.lat().toFixed(6)}</p>\n                    <p>Lng: ${e.latLng.lng().toFixed(6)}</p>\n                </div>`\n            });\n\n            marker.addListener('click', () => {\n                infoWindow.open(this.maps.events, marker);\n            });\n        });\n\n        // Add instructions\n        const controlDiv = document.createElement('div');\n        controlDiv.className = 'bg-white border rounded shadow-sm m-2 p-2';\n        controlDiv.innerHTML = '<small>Click anywhere on the map to place a marker</small>';\n        this.maps.events.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);\n    }\n}\n\n// Create global instance\nwindow.googleMapsManager = new GoogleMapsManager();\n\n// Initialize when Google Maps is loaded\nwindow.initGoogleMaps = function() {\n    window.googleMapsManager.initialize();\n};\n\n// Export for module usage\nexport default GoogleMapsManager;","\n        import GoogleMapsManager from './scripts/components/gmaps.js';\n        \n        // Load Google Maps API\n        const script = document.createElement('script');\n        script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyD2jlT6C_to6X1mMvR9yRWeRvpIgTXgddM&callback=initGoogleMaps&libraries=geometry,places';\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n    "],"names":["GoogleMapsManager","element","locations","location","marker","infoWindow","triangleCoords","bounds","elevator","results","status","result","index","position","pos","browserHasGeolocation","nightStyle","e","controlDiv","script"],"mappings":"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"}