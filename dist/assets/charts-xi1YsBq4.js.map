{"version":3,"mappings":"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","names":["ChartManager","Chart","registerables","__vitePreload","n","error","canvas","ctx","chart","id"],"ignoreList":[],"sources":["../../src/scripts/components/charts.js"],"sourcesContent":["// Chart Manager Component - Handle Chart.js initialization\n\nexport class ChartManager {\n  constructor() {\n    this.charts = new Map()\n    this.init()\n  }\n\n  async init() {\n    try {\n      // Dynamically import Chart.js\n      const { Chart, registerables } = await import('chart.js')\n      Chart.register(...registerables)\n      \n      console.log('Chart Manager initialized')\n      this.initializePageCharts()\n    } catch (error) {\n      console.error('Failed to load Chart.js:', error)\n    }\n  }\n\n  initializePageCharts() {\n    // Initialize charts based on page content\n    this.initializeLineCharts()\n    this.initializeBarCharts()\n    this.initializePieCharts()\n  }\n\n  initializeLineCharts() {\n    const lineCharts = document.querySelectorAll('[data-chart=\"line\"]')\n    lineCharts.forEach(canvas => {\n      this.createLineChart(canvas)\n    })\n  }\n\n  initializeBarCharts() {\n    const barCharts = document.querySelectorAll('[data-chart=\"bar\"]')\n    barCharts.forEach(canvas => {\n      this.createBarChart(canvas)\n    })\n  }\n\n  initializePieCharts() {\n    const pieCharts = document.querySelectorAll('[data-chart=\"pie\"]')\n    pieCharts.forEach(canvas => {\n      this.createPieChart(canvas)\n    })\n  }\n\n  createLineChart(canvas) {\n    const ctx = canvas.getContext('2d')\n    \n    const chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'Dataset 1',\n          data: [65, 59, 80, 81, 56, 55, 40],\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Line Chart'\n          }\n        }\n      }\n    })\n\n    this.charts.set(canvas.id, chart)\n  }\n\n  createBarChart(canvas) {\n    const ctx = canvas.getContext('2d')\n    \n    const chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 205, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 205, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    })\n\n    this.charts.set(canvas.id, chart)\n  }\n\n  createPieChart(canvas) {\n    const ctx = canvas.getContext('2d')\n    \n    const chart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [300, 50, 100],\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ],\n          hoverBackgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    })\n\n    this.charts.set(canvas.id, chart)\n  }\n\n  // Public API methods\n  getChart(id) {\n    return this.charts.get(id)\n  }\n\n  destroyChart(id) {\n    const chart = this.charts.get(id)\n    if (chart) {\n      chart.destroy()\n      this.charts.delete(id)\n    }\n  }\n\n  destroy() {\n    // Destroy all charts\n    this.charts.forEach(chart => chart.destroy())\n    this.charts.clear()\n  }\n}"],"file":"assets/charts-xi1YsBq4.js"}