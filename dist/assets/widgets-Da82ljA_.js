const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/main-BpvFxo3n.js","assets/main-CTF9q11D.css"])))=>i.map(i=>d[i]);
import{_ as l}from"./main-BpvFxo3n.js";class d{constructor(t,e={}){this.containerId=t,this.container=document.getElementById(t),this.options={height:300,...e},this.map=null,this.markers=[],this.data=null,this.init()}async init(){if(!this.container){console.error("World map container with ID '".concat(this.containerId,"' not found"));return}try{await this.loadLeaflet(),this.generateSampleData(),this.createMap()}catch(t){console.error("Failed to initialize world map:",t),this.showFallback()}}async loadLeaflet(){const t=document.createElement("link");t.rel="stylesheet",t.href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css",document.head.appendChild(t);const e=await l(()=>import("./leaflet-src-BGWPak3d.js").then(a=>a.l),[]);this.L=e.default||e,console.log("Leaflet loaded successfully")}generateSampleData(){this.data=[{name:"United States",code:"us",visitors:4250,percentage:35.2,lat:39.8283,lng:-98.5795},{name:"United Kingdom",code:"gb",visitors:1890,percentage:15.7,lat:55.3781,lng:-3.436},{name:"Germany",code:"de",visitors:1420,percentage:11.8,lat:51.1657,lng:10.4515},{name:"France",code:"fr",visitors:980,percentage:8.1,lat:46.2276,lng:2.2137},{name:"Canada",code:"ca",visitors:760,percentage:6.3,lat:56.1304,lng:-106.3468},{name:"Australia",code:"au",visitors:650,percentage:5.4,lat:-25.2744,lng:133.7751},{name:"Japan",code:"jp",visitors:540,percentage:4.5,lat:36.2048,lng:138.2529},{name:"Netherlands",code:"nl",visitors:420,percentage:3.5,lat:52.1326,lng:5.2913},{name:"Italy",code:"it",visitors:380,percentage:3.2,lat:41.8719,lng:12.5674},{name:"Spain",code:"es",visitors:320,percentage:2.7,lat:40.4637,lng:-3.7492}]}createMap(){this.container.closest(".card-body");const t=this.container.closest(".card");if(t){const e=t.querySelector(".card-footer");this.container.innerHTML="",this.container.style.height="".concat(this.options.height,"px"),this.container.style.width="100%",this.container.style.position="relative",this.container.classList.remove("d-flex","align-items-center","justify-content-center","bg-light"),this.map=this.L.map(this.container,{center:[20,0],zoom:2,scrollWheelZoom:!0,doubleClickZoom:!0,boxZoom:!0,keyboard:!0,zoomControl:!0}),this.L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors",maxZoom:18}).addTo(this.map),this.addDataPoints(),e&&(e.innerHTML='\n          <div class="row g-2 text-center">\n            <div class="col-6 col-sm-3">\n              <div class="text-primary fw-bold">'.concat(this.data.length,'</div>\n              <small class="text-muted d-block text-nowrap">Countries</small>\n            </div>\n            <div class="col-6 col-sm-3">\n              <div class="text-success fw-bold">').concat(this.data.reduce((a,s)=>a+s.visitors,0).toLocaleString(),'</div>\n              <small class="text-muted d-block text-nowrap">Visitors</small>\n            </div>\n            <div class="col-6 col-sm-3">\n              <div class="text-warning fw-bold text-truncate">').concat(this.data[0].name,'</div>\n              <small class="text-muted d-block text-nowrap">Top Country</small>\n            </div>\n            <div class="col-6 col-sm-3">\n              <div class="text-info fw-bold">').concat(this.data[0].percentage,'%</div>\n              <small class="text-muted d-block text-nowrap">Top Share</small>\n            </div>\n          </div>\n        '))}else this.container.innerHTML="",this.container.style.height="".concat(this.options.height,"px"),this.container.style.width="100%",this.container.style.position="relative",this.container.classList.remove("d-flex","align-items-center","justify-content-center","bg-light"),this.map=this.L.map(this.container,{center:[20,0],zoom:2,scrollWheelZoom:!0,doubleClickZoom:!0,boxZoom:!0,keyboard:!0,zoomControl:!0}),this.L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors",maxZoom:18}).addTo(this.map),this.addDataPoints();console.log("Leaflet map created successfully with",this.data.length,"data points"),setTimeout(()=>{this.map&&this.map.invalidateSize()},100)}addDataPoints(){this.markers.forEach(t=>this.map.removeLayer(t)),this.markers=[],this.data.forEach(t=>{const e=Math.max(...this.data.map(n=>n.visitors)),a=8,i=a+t.visitors/e*(25-a),o=this.L.divIcon({className:"custom-marker",html:'\n          <div style="\n            width: '.concat(i,"px;\n            height: ").concat(i,"px;\n            background: #0d6efd;\n            border: 2px solid white;\n            border-radius: 50%;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: ").concat(Math.max(8,i*.4),'px;\n            font-weight: bold;\n          ">\n            <span class="fi fi-').concat(t.code,'" style="font-size: ').concat(Math.max(6,i*.6),'px;"></span>\n          </div>\n        '),iconSize:[i,i],iconAnchor:[i/2,i/2]}),r=this.L.marker([t.lat,t.lng],{icon:o}).addTo(this.map);r.bindPopup('\n        <div class="p-2">\n          <div class="d-flex align-items-center mb-2">\n            <span class="fi fi-'.concat(t.code,' me-2"></span>\n            <strong>').concat(t.name,"</strong>\n          </div>\n          <div><strong>").concat(t.visitors.toLocaleString(),'</strong> visitors</div>\n          <div class="text-muted">').concat(t.percentage,"% of total traffic</div>\n        </div>\n      ")),this.markers.push(r)})}setupInteractions(){const t=this.container.closest(".card");if(!t)return;t.querySelectorAll(".country-mini").forEach(a=>{a.addEventListener("click",s=>{const i=a.dataset.country,o=this.data.find(r=>r.code===i);if(o){this.map.setView([o.lat,o.lng],5,{animate:!0,duration:1});const r=this.markers.find(n=>n.getLatLng().lat===o.lat&&n.getLatLng().lng===o.lng);r&&r.openPopup(),a.style.backgroundColor="rgba(13, 110, 253, 0.1)",a.style.borderRadius="8px",a.style.transition="background-color 0.3s ease",setTimeout(()=>{a.style.backgroundColor=""},300)}}),a.addEventListener("mouseenter",()=>{a.style.backgroundColor="rgba(0, 0, 0, 0.05)",a.style.borderRadius="8px",a.style.transition="background-color 0.2s ease"}),a.addEventListener("mouseleave",()=>{a.style.backgroundColor=""})})}updateData(t){this.data=t,this.map&&this.createMap()}handleResize(){this.map&&this.map.invalidateSize()}showFallback(){this.container.innerHTML='\n      <div class="d-flex align-items-center justify-content-center h-100 bg-light rounded">\n        <div class="text-center text-muted">\n          <i class="fas fa-globe fa-3x mb-3 opacity-50"></i>\n          <div class="h6">World Map Unavailable</div>\n          <small>Unable to load map visualization</small>\n        </div>\n      </div>\n    '}destroy(){this.map&&(this.map.remove(),this.map=null),this.markers=[],this.container&&(this.container.innerHTML="")}getData(){return this.data}}class p{constructor(){this.widgets=new Map,this.charts=new Map,this.Chart=null,this.init()}async init(){console.log("Widget Manager initialized"),await this.loadChartJS(),this.initializeCounters(),await this.initializeWidgetCharts(),await this.initializeTrafficChart(),await this.initializeWorldMap()}async loadChartJS(){try{const t=await l(()=>import("./main-BpvFxo3n.js").then(e=>e.c),__vite__mapDeps([0,1]));this.Chart=t.Chart,this.Chart.register(...t.registerables),console.log("Chart.js loaded successfully")}catch(t){throw console.error("Failed to load Chart.js:",t),t}}initializeCounters(){document.querySelectorAll(".count, .card-title").forEach(e=>{e.textContent.match(/^\d/)&&this.animateCounter(e)})}animateCounter(t){const e=parseInt(t.textContent.replace(/,/g,"")),s=e/(2e3/16);let i=0;const o=setInterval(()=>{i+=s,i>=e&&(i=e,clearInterval(o)),t.textContent=Math.floor(i).toLocaleString()},16)}async initializeWidgetCharts(){if(!this.Chart){console.warn("Chart.js not loaded, skipping widget charts");return}const t=document.querySelectorAll('[id^="widgetChart"]');console.log("Found ".concat(t.length," widget chart canvases")),t.forEach((e,a)=>{try{this.createWidgetChart(e,a+1)}catch(s){console.error("Failed to create widget chart ".concat(a+1,":"),s)}})}createWidgetChart(t,e){if(!t){console.warn("Widget chart canvas ".concat(e," not found"));return}const a=t.getContext("2d");if(!a){console.warn("Could not get context for widget chart ".concat(e));return}this.charts.has(t.id)&&this.charts.get(t.id).destroy();const s=this.generateWidgetChartData(e);console.log("Creating widget chart ".concat(e," with data:"),s);const i=new this.Chart(a,{type:"line",data:s,options:{responsive:!0,maintainAspectRatio:!1,interaction:{intersect:!1},plugins:{legend:{display:!1},tooltip:{enabled:!1}},scales:{x:{display:!1,grid:{display:!1}},y:{display:!1,grid:{display:!1}}},elements:{point:{radius:0,hoverRadius:0},line:{borderWidth:2,tension:.4}},animation:{duration:1e3}}});this.charts.set(t.id,i),console.log("Widget chart ".concat(e," created successfully"))}generateWidgetChartData(t){const e=[{data:[65,59,84,84,51,55,40,65,59,84]},{data:[28,48,40,59,86,27,90,28,48,40]},{data:[45,25,16,36,67,18,76,45,25,16]},{data:[12,19,27,43,52,31,48,12,19,27]}],a=e[t-1]||e[0];return{labels:Array(a.data.length).fill(""),datasets:[{data:a.data,borderColor:"rgba(255, 255, 255, 0.8)",backgroundColor:"rgba(255, 255, 255, 0.1)",fill:!1,pointRadius:0,pointHoverRadius:0}]}}async initializeTrafficChart(){const t=document.getElementById("trafficChart");if(!(!t||!this.Chart))try{const e=t.getContext("2d");this.charts.has("trafficChart")&&this.charts.get("trafficChart").destroy();const a=new this.Chart(e,{type:"line",data:{labels:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"],datasets:[{label:"Visits",data:[65,59,84,84,51,55,40,58,72,69],borderColor:"#007bff",backgroundColor:"rgba(0, 123, 255, 0.1)",fill:!0,tension:.4,pointRadius:4,pointHoverRadius:6},{label:"Unique Visits",data:[28,48,40,59,86,27,90,45,62,58],borderColor:"#28a745",backgroundColor:"rgba(40, 167, 69, 0.1)",fill:!0,tension:.4,pointRadius:4,pointHoverRadius:6}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,grid:{display:!1},ticks:{color:"#6c757d"}},y:{display:!0,grid:{color:"rgba(0,0,0,0.1)"},ticks:{color:"#6c757d"}}},elements:{line:{borderWidth:2}},interaction:{mode:"nearest",axis:"x",intersect:!1}}});this.charts.set("trafficChart",a),console.log("Traffic chart created successfully")}catch(e){console.error("Failed to initialize traffic chart:",e)}}handleResize(){this.charts.forEach(t=>{t&&typeof t.resize=="function"&&t.resize()})}async initializeWorldMap(){const t=document.getElementById("worldMap");if(!t){console.warn("World map container not found");return}try{const e=new d("worldMap",{height:320,showCountryNames:!0,backgroundColor:"white"});this.widgets.set("worldMap",e),console.log("World map initialized successfully")}catch(e){console.error("Failed to initialize world map:",e),t.innerHTML='\n        <div class="d-flex align-items-center justify-content-center h-100 bg-light rounded">\n          <div class="text-center text-muted">\n            <i class="fas fa-globe fa-3x mb-3 opacity-50"></i>\n            <div class="h6">Interactive World Map</div>\n            <small>Global visitor statistics</small>\n          </div>\n        </div>\n      '}}destroy(){this.charts.forEach(t=>{t&&typeof t.destroy=="function"&&t.destroy()}),this.widgets.forEach(t=>{t&&typeof t.destroy=="function"&&t.destroy()}),this.charts.clear(),this.widgets.clear()}}export{p as WidgetManager};
//# sourceMappingURL=widgets-Da82ljA_.js.map
