{"version":3,"file":"widgets-legacy-CRFuQFyJ.js","sources":["../../src/scripts/components/widgets.js"],"sourcesContent":["// Widget Manager Component - Dashboard widgets functionality\n\nexport class WidgetManager {\n  constructor() {\n    this.widgets = new Map()\n    this.charts = new Map()\n    this.Chart = null\n    this.init()\n  }\n\n  async init() {\n    console.log('Widget Manager initialized')\n    \n    // Load Chart.js first\n    await this.loadChartJS()\n    \n    // Initialize components\n    this.initializeCounters()\n    await this.initializeWidgetCharts()\n    await this.initializeTrafficChart()\n  }\n\n  async loadChartJS() {\n    try {\n      // Dynamically import Chart.js with all components\n      const chartModule = await import('chart.js')\n      this.Chart = chartModule.Chart\n      \n      // Register all Chart.js components\n      this.Chart.register(...chartModule.registerables)\n      \n      console.log('Chart.js loaded successfully')\n    } catch (error) {\n      console.error('Failed to load Chart.js:', error)\n      throw error\n    }\n  }\n\n  initializeCounters() {\n    // Initialize animated counters\n    const counters = document.querySelectorAll('.count, .card-title')\n    counters.forEach(counter => {\n      if (counter.textContent.match(/^\\d/)) {\n        this.animateCounter(counter)\n      }\n    })\n  }\n\n  animateCounter(element) {\n    const target = parseInt(element.textContent.replace(/,/g, ''))\n    const duration = 2000 // 2 seconds\n    const step = target / (duration / 16) // 60fps\n\n    let current = 0\n    const timer = setInterval(() => {\n      current += step\n      if (current >= target) {\n        current = target\n        clearInterval(timer)\n      }\n      element.textContent = Math.floor(current).toLocaleString()\n    }, 16)\n  }\n\n  async initializeWidgetCharts() {\n    if (!this.Chart) {\n      console.warn('Chart.js not loaded, skipping widget charts')\n      return\n    }\n\n    // Find all widget chart canvases\n    const chartElements = document.querySelectorAll('[id^=\"widgetChart\"]')\n    \n    console.log(`Found ${chartElements.length} widget chart canvases`)\n    \n    chartElements.forEach((canvas, index) => {\n      try {\n        this.createWidgetChart(canvas, index + 1)\n      } catch (error) {\n        console.error(`Failed to create widget chart ${index + 1}:`, error)\n      }\n    })\n  }\n\n  createWidgetChart(canvas, index) {\n    if (!canvas) {\n      console.warn(`Widget chart canvas ${index} not found`)\n      return\n    }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      console.warn(`Could not get context for widget chart ${index}`)\n      return\n    }\n\n    // Destroy existing chart if it exists\n    if (this.charts.has(canvas.id)) {\n      this.charts.get(canvas.id).destroy()\n    }\n    \n    // Generate chart data\n    const data = this.generateWidgetChartData(index)\n    \n    console.log(`Creating widget chart ${index} with data:`, data)\n    \n    const chart = new this.Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        scales: {\n          x: {\n            display: false,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            display: false,\n            grid: {\n              display: false\n            }\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hoverRadius: 0\n          },\n          line: {\n            borderWidth: 2,\n            tension: 0.4\n          }\n        },\n        animation: {\n          duration: 1000\n        }\n      }\n    })\n    \n    // Store chart reference\n    this.charts.set(canvas.id, chart)\n    \n    console.log(`Widget chart ${index} created successfully`)\n  }\n\n  generateWidgetChartData(index) {\n    // Different datasets for each widget\n    const datasets = [\n      { data: [65, 59, 84, 84, 51, 55, 40, 65, 59, 84] }, // Primary widget\n      { data: [28, 48, 40, 59, 86, 27, 90, 28, 48, 40] }, // Danger widget\n      { data: [45, 25, 16, 36, 67, 18, 76, 45, 25, 16] }, // Warning widget\n      { data: [12, 19, 27, 43, 52, 31, 48, 12, 19, 27] }  // Success widget\n    ]\n\n    const selectedData = datasets[index - 1] || datasets[0]\n    \n    return {\n      labels: Array(selectedData.data.length).fill(''),\n      datasets: [{\n        data: selectedData.data,\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        fill: false,\n        pointRadius: 0,\n        pointHoverRadius: 0\n      }]\n    }\n  }\n\n  async initializeTrafficChart() {\n    const trafficCanvas = document.getElementById('trafficChart')\n    if (!trafficCanvas || !this.Chart) return\n\n    try {\n      const ctx = trafficCanvas.getContext('2d')\n      \n      // Destroy existing chart if it exists\n      if (this.charts.has('trafficChart')) {\n        this.charts.get('trafficChart').destroy()\n      }\n      \n      const chart = new this.Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n          datasets: [{\n            label: 'Visits',\n            data: [65, 59, 84, 84, 51, 55, 40, 58, 72, 69],\n            borderColor: '#007bff',\n            backgroundColor: 'rgba(0, 123, 255, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }, {\n            label: 'Unique Visits',\n            data: [28, 48, 40, 59, 86, 27, 90, 45, 62, 58],\n            borderColor: '#28a745',\n            backgroundColor: 'rgba(40, 167, 69, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false\n            }\n          },\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            },\n            y: {\n              display: true,\n              grid: {\n                color: 'rgba(0,0,0,0.1)'\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            }\n          },\n          elements: {\n            line: {\n              borderWidth: 2\n            }\n          },\n          interaction: {\n            mode: 'nearest',\n            axis: 'x',\n            intersect: false\n          }\n        }\n      })\n      \n      this.charts.set('trafficChart', chart)\n      console.log('Traffic chart created successfully')\n    } catch (error) {\n      console.error('Failed to initialize traffic chart:', error)\n    }\n  }\n\n  // Handle window resize\n  handleResize() {\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.resize === 'function') {\n        chart.resize()\n      }\n    })\n  }\n\n  destroy() {\n    // Destroy all charts\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.destroy === 'function') {\n        chart.destroy()\n      }\n    })\n    this.charts.clear()\n    this.widgets.clear()\n  }\n}"],"names":["exports","constructor","this","widgets","Map","charts","Chart","init","console","log","loadChartJS","initializeCounters","initializeWidgetCharts","initializeTrafficChart","chartModule","module","import","register","registerables","error","document","querySelectorAll","forEach","counter","textContent","match","animateCounter","element","target","parseInt","replace","step","current","timer","setInterval","clearInterval","Math","floor","toLocaleString","warn","chartElements","length","canvas","index","createWidgetChart","ctx","getContext","has","id","get","destroy","data","generateWidgetChartData","chart","type","options","responsive","maintainAspectRatio","interaction","intersect","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","hoverRadius","line","borderWidth","tension","animation","duration","set","datasets","selectedData","labels","Array","fill","borderColor","backgroundColor","pointRadius","pointHoverRadius","trafficCanvas","getElementById","label","mode","ticks","color","axis","handleResize","resize","clear"],"mappings":"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"}