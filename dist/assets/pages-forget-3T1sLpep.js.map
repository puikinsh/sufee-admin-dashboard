{"version":3,"file":"pages-forget-3T1sLpep.js","sources":["../../src/pages-forget.html?html-proxy&index=2.js"],"sourcesContent":["\n        // Forgot password form functionality\n        document.addEventListener('DOMContentLoaded', function() {\n            const forgotForm = document.getElementById('forgotForm');\n            const emailInput = document.getElementById('email');\n            const submitButton = forgotForm.querySelector('button[type=\"submit\"]');\n            const successMessage = document.getElementById('successMessage');\n            const resendInfo = document.getElementById('resendInfo');\n            const resendBtn = document.getElementById('resendBtn');\n            const resendTimer = document.getElementById('resendTimer');\n            \n            let resendCountdown;\n            let resendTime = 60;\n            \n            // Email validation\n            function validateEmail(email) {\n                const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                return re.test(email);\n            }\n            \n            function showError(input, message) {\n                input.classList.add('is-invalid');\n                const feedback = input.nextElementSibling;\n                if (feedback && feedback.classList.contains('invalid-feedback')) {\n                    feedback.textContent = message;\n                }\n            }\n            \n            function clearError(input) {\n                input.classList.remove('is-invalid');\n                input.classList.add('is-valid');\n            }\n            \n            // Real-time email validation\n            emailInput.addEventListener('blur', function() {\n                const email = this.value.trim();\n                if (email === '') {\n                    showError(this, 'Email address is required.');\n                } else if (!validateEmail(email)) {\n                    showError(this, 'Please enter a valid email address.');\n                } else {\n                    clearError(this);\n                }\n            });\n            \n            // Clear validation on input\n            emailInput.addEventListener('input', function() {\n                if (this.classList.contains('is-invalid')) {\n                    this.classList.remove('is-invalid');\n                }\n            });\n            \n            // Start resend countdown\n            function startResendCountdown() {\n                resendTime = 60;\n                resendBtn.disabled = true;\n                \n                resendCountdown = setInterval(() => {\n                    resendTime--;\n                    resendTimer.textContent = resendTime;\n                    \n                    if (resendTime <= 0) {\n                        clearInterval(resendCountdown);\n                        resendBtn.disabled = false;\n                        resendTimer.parentElement.innerHTML = 'You can now request a new reset link.';\n                    }\n                }, 1000);\n            }\n            \n            // Show success state\n            function showSuccessState() {\n                successMessage.style.display = 'block';\n                resendInfo.style.display = 'block';\n                forgotForm.querySelector('.form-floating').style.display = 'none';\n                submitButton.style.display = 'none';\n                startResendCountdown();\n            }\n            \n            // Reset to initial state\n            function resetToInitialState() {\n                successMessage.style.display = 'none';\n                resendInfo.style.display = 'none';\n                forgotForm.querySelector('.form-floating').style.display = 'block';\n                submitButton.style.display = 'block';\n                emailInput.classList.remove('is-valid', 'is-invalid');\n                \n                if (resendCountdown) {\n                    clearInterval(resendCountdown);\n                }\n            }\n            \n            // Form submission\n            forgotForm.addEventListener('submit', function(e) {\n                e.preventDefault();\n                \n                const email = emailInput.value.trim();\n                let isValid = true;\n                \n                // Validate email\n                if (email === '') {\n                    showError(emailInput, 'Email address is required.');\n                    isValid = false;\n                } else if (!validateEmail(email)) {\n                    showError(emailInput, 'Please enter a valid email address.');\n                    isValid = false;\n                } else {\n                    clearError(emailInput);\n                }\n                \n                if (isValid) {\n                    // Show loading state\n                    submitButton.disabled = true;\n                    submitButton.classList.add('loading');\n                    submitButton.textContent = 'Sending...';\n                    \n                    // Simulate sending reset email\n                    setTimeout(() => {\n                        // In a real application, you would send the request to your server\n                        console.log('Password reset request for:', email);\n                        \n                        // Reset button state\n                        submitButton.disabled = false;\n                        submitButton.classList.remove('loading');\n                        submitButton.textContent = 'Send Reset Link';\n                        \n                        // Show success state\n                        showSuccessState();\n                    }, 2000);\n                }\n            });\n            \n            // Resend button functionality\n            resendBtn.addEventListener('click', function() {\n                const email = emailInput.value.trim();\n                \n                if (email && validateEmail(email)) {\n                    // Show loading state for resend button\n                    this.disabled = true;\n                    const originalText = this.textContent;\n                    this.textContent = 'Sending...';\n                    \n                    // Simulate resending email\n                    setTimeout(() => {\n                        // In a real application, you would send the request to your server\n                        console.log('Resending password reset for:', email);\n                        \n                        // Reset button state\n                        this.textContent = originalText;\n                        \n                        // Start countdown again\n                        startResendCountdown();\n                        \n                        // Show brief confirmation\n                        const originalTimerText = resendTimer.parentElement.innerHTML;\n                        resendTimer.parentElement.innerHTML = '<span style=\"color: #28a745;\">Email sent again!</span>';\n                        \n                        setTimeout(() => {\n                            resendTimer.parentElement.innerHTML = `You can request a new reset link in <span class=\"resend-timer\" id=\"resendTimer\">${resendTime}</span> seconds.`;\n                        }, 2000);\n                    }, 1000);\n                }\n            });\n            \n            // Keyboard accessibility\n            document.addEventListener('keydown', function(e) {\n                // Allow form submission with Ctrl+Enter\n                if (e.ctrlKey && e.key === 'Enter') {\n                    if (forgotForm.querySelector('.form-floating').style.display !== 'none') {\n                        forgotForm.dispatchEvent(new Event('submit'));\n                    }\n                }\n                \n                // Reset form with Escape key\n                if (e.key === 'Escape' && successMessage.style.display === 'block') {\n                    resetToInitialState();\n                }\n            });\n            \n            // Auto-focus email input\n            emailInput.focus();\n        });\n    "],"names":["forgotForm","emailInput","submitButton","successMessage","resendInfo","resendBtn","resendTimer","resendCountdown","resendTime","validateEmail","email","showError","input","message","feedback","clearError","startResendCountdown","showSuccessState","resetToInitialState","isValid","originalText"],"mappings":"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"}