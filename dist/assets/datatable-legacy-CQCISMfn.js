System.register([],function(t,e){"use strict";return{execute:function(){t("DataTable",class{constructor(t,e={}){this.table="string"==typeof t?document.querySelector(t):t,this.options={sortable:!0,searchable:!0,pagination:!0,pageSize:10,...e},this.data=[],this.filteredData=[],this.currentPage=1,this.sortColumn=null,this.sortDirection="asc",this.table&&this.init()}init(){this.extractData(),this.createWrapper(),this.createControls(),this.render(),this.setupEventListeners()}extractData(){const t=this.table.querySelectorAll("tbody tr");this.data=Array.from(t).map(t=>{const e=t.querySelectorAll("td");return Array.from(e).map(t=>t.innerHTML)}),this.filteredData=[...this.data]}createWrapper(){const t=document.createElement("div");t.className="datatable-wrapper",t.innerHTML=`\n      <div class="datatable-top">\n        ${this.options.searchable?'<div class="datatable-search"><input type="text" placeholder="Search..." class="form-control"></div>':""}\n      </div>\n      <div class="datatable-container"></div>\n      ${this.options.pagination?'<div class="datatable-bottom"><div class="datatable-info"></div><div class="datatable-pagination"></div></div>':""}\n    `,this.table.parentNode.insertBefore(t,this.table),t.querySelector(".datatable-container").appendChild(this.table),this.wrapper=t}createControls(){this.options.searchable&&(this.searchInput=this.wrapper.querySelector(".datatable-search input")),this.options.pagination&&(this.infoElement=this.wrapper.querySelector(".datatable-info"),this.paginationElement=this.wrapper.querySelector(".datatable-pagination"))}setupEventListeners(){this.searchInput&&this.searchInput.addEventListener("input",t=>{this.search(t.target.value)}),this.options.sortable&&this.table.querySelectorAll("thead th").forEach((t,e)=>{t.style.cursor="pointer",t.addEventListener("click",()=>{this.sort(e)})})}search(t){this.filteredData=t?this.data.filter(e=>e.some(e=>e.toLowerCase().includes(t.toLowerCase()))):[...this.data],this.currentPage=1,this.render()}sort(t){this.sortColumn===t?this.sortDirection="asc"===this.sortDirection?"desc":"asc":(this.sortColumn=t,this.sortDirection="asc"),this.filteredData.sort((e,a)=>{const i=e[t],s=a[t],r=parseFloat(i.replace(/[^0-9.-]/g,"")),n=parseFloat(s.replace(/[^0-9.-]/g,""));let o=0;return o=isNaN(r)||isNaN(n)?i.localeCompare(s):r-n,"asc"===this.sortDirection?o:-o}),this.updateSortIndicators(),this.render()}updateSortIndicators(){this.table.querySelectorAll("thead th").forEach((t,e)=>{t.classList.remove("sort-asc","sort-desc"),e===this.sortColumn&&t.classList.add(`sort-${this.sortDirection}`)})}render(){this.renderTable(),this.options.pagination&&(this.renderPagination(),this.renderInfo())}renderTable(){const t=this.table.querySelector("tbody"),e=(this.currentPage-1)*this.options.pageSize,a=e+this.options.pageSize,i=this.options.pagination?this.filteredData.slice(e,a):this.filteredData;t.innerHTML=i.map(t=>`<tr>${t.map(t=>`<td>${t}</td>`).join("")}</tr>`).join("")}renderPagination(){const t=Math.ceil(this.filteredData.length/this.options.pageSize);if(t<=1)return void(this.paginationElement.innerHTML="");const e=document.createElement("nav");e.innerHTML=`\n      <ul class="pagination">\n        <li class="page-item ${1===this.currentPage?"disabled":""}">\n          <a class="page-link" href="#" data-page="prev">Previous</a>\n        </li>\n        ${Array.from({length:t},(t,e)=>e+1).filter(e=>this.shouldShowPage(e,t)).map(t=>`\n            <li class="page-item ${t===this.currentPage?"active":""}">\n              <a class="page-link" href="#" data-page="${t}">${t}</a>\n            </li>\n          `).join("")}\n        <li class="page-item ${this.currentPage===t?"disabled":""}">\n          <a class="page-link" href="#" data-page="next">Next</a>\n        </li>\n      </ul>\n    `,e.addEventListener("click",e=>{e.preventDefault();const a=e.target.dataset.page;"prev"===a&&this.currentPage>1?this.currentPage--:"next"===a&&this.currentPage<t?this.currentPage++:isNaN(a)||(this.currentPage=parseInt(a)),this.render()}),this.paginationElement.innerHTML="",this.paginationElement.appendChild(e)}shouldShowPage(t,e){return 1===t||t===e||Math.abs(t-this.currentPage)<=2}renderInfo(){const t=(this.currentPage-1)*this.options.pageSize+1,e=Math.min(t+this.options.pageSize-1,this.filteredData.length),a=this.filteredData.length;this.infoElement.textContent=`Showing ${t} to ${e} of ${a} entries`}refresh(){this.extractData(),this.filteredData=[...this.data],this.currentPage=1,this.render()}destroy(){this.wrapper&&this.wrapper.parentNode&&(this.wrapper.parentNode.insertBefore(this.table,this.wrapper),this.wrapper.remove())}})}}});
//# sourceMappingURL=datatable-legacy-CQCISMfn.js.map
