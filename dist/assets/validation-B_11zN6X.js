class c{constructor(e,r={}){this.form=typeof e=="string"?document.querySelector(e):e,this.rules=r,this.errors={},this.form&&this.init()}init(){this.parseRulesFromAttributes(),this.setupEventListeners()}parseRulesFromAttributes(){this.form.querySelectorAll("[data-validate]").forEach(r=>{const t=r.dataset.validate.split("|");this.rules[r.name]=t})}setupEventListeners(){this.form.addEventListener("submit",r=>{this.validateForm()||(r.preventDefault(),this.displayErrors())}),this.form.querySelectorAll("input, select, textarea").forEach(r=>{r.addEventListener("blur",()=>{this.validateField(r)}),r.addEventListener("input",()=>{this.clearFieldError(r)})})}validateForm(){this.errors={};let e=!0;return Object.keys(this.rules).forEach(r=>{const t=this.form.querySelector('[name="'.concat(r,'"]'));t&&!this.validateField(t)&&(e=!1)}),e}validateField(e){const r=e.name,t=e.value.trim(),s=this.rules[r]||[];delete this.errors[r];for(const n of s){const[i,a]=n.split(":");if(!this.applyRule(t,i,a,e))return this.errors[r]=this.getErrorMessage(r,i,a),this.showFieldError(e,this.errors[r]),!1}return this.clearFieldError(e),!0}applyRule(e,r,t,s){switch(r){case"required":return e.length>0;case"min":return e.length>=parseInt(t);case"max":return e.length<=parseInt(t);case"email":return!e||/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e);case"numeric":return!e||/^\d+$/.test(e);case"alpha":return!e||/^[a-zA-Z]+$/.test(e);case"alphanumeric":return!e||/^[a-zA-Z0-9]+$/.test(e);case"url":try{return new URL(e),!0}catch(l){return!e}case"confirmed":const i=this.form.querySelector('[name="'.concat(t,'"]'));return i&&e===i.value;case"regex":const a=new RegExp(t);return!e||a.test(e);default:return!0}}getErrorMessage(e,r,t){const s=this.getFieldLabel(e);return{required:"".concat(s," is required."),min:"".concat(s," must be at least ").concat(t," characters."),max:"".concat(s," must not exceed ").concat(t," characters."),email:"".concat(s," must be a valid email address."),numeric:"".concat(s," must be numeric."),alpha:"".concat(s," must contain only letters."),alphanumeric:"".concat(s," must contain only letters and numbers."),url:"".concat(s," must be a valid URL."),confirmed:"".concat(s," confirmation does not match."),regex:"".concat(s," format is invalid.")}[r]||"".concat(s," is invalid.")}getFieldLabel(e){const r=this.form.querySelector('[name="'.concat(e,'"]')),t=this.form.querySelector('label[for="'.concat(r==null?void 0:r.id,'"]'));return t?t.textContent.replace("*","").trim():e.charAt(0).toUpperCase()+e.slice(1).replace(/[_-]/g," ")}showFieldError(e,r){this.clearFieldError(e),e.classList.add("is-invalid");const t=document.createElement("div");t.className="invalid-feedback",t.textContent=r,e.parentNode.appendChild(t)}clearFieldError(e){e.classList.remove("is-invalid");const r=e.parentNode.querySelector(".invalid-feedback");r&&r.remove()}displayErrors(){if(Object.keys(this.errors).length>0){const e=document.createElement("div");e.className="alert alert-danger",e.innerHTML='\n        <strong>Please correct the following errors:</strong>\n        <ul class="mb-0 mt-2">\n          '.concat(Object.values(this.errors).map(t=>"<li>".concat(t,"</li>")).join(""),"\n        </ul>\n      ");const r=this.form.querySelector(".alert-danger");r&&r.remove(),this.form.insertBefore(e,this.form.firstChild),setTimeout(()=>{e.parentNode&&e.remove()},5e3)}}addRule(e,r){this.rules[e]=Array.isArray(r)?r:[r]}removeRule(e){delete this.rules[e]}resetValidation(){this.errors={},this.form.querySelectorAll(".is-invalid").forEach(t=>this.clearFieldError(t));const r=this.form.querySelector(".alert-danger");r&&r.remove()}destroy(){this.resetValidation()}}export{c as FormValidator};
//# sourceMappingURL=validation-B_11zN6X.js.map
