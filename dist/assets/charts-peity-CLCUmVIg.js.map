{"version":3,"file":"charts-peity-CLCUmVIg.js","sources":["../../src/charts-peity.html?html-proxy&index=2.js"],"sourcesContent":["\n        import Chart from 'chart.js/auto';\n        \n        // Sparkline chart defaults\n        const sparklineDefaults = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                legend: { display: false },\n                tooltip: { enabled: false }\n            },\n            elements: {\n                point: { radius: 0 },\n                line: { borderWidth: 2 }\n            }\n        };\n        \n        // Create mini pie chart\n        function createMiniPie(elementId, percentage, color) {\n            const ctx = document.getElementById(elementId).getContext('2d');\n            return new Chart(ctx, {\n                type: 'pie',\n                data: {\n                    datasets: [{\n                        data: [percentage, 100 - percentage],\n                        backgroundColor: [color, '#f2f2f2'],\n                        borderWidth: 0\n                    }]\n                },\n                options: {\n                    ...sparklineDefaults,\n                    cutout: 0\n                }\n            });\n        }\n        \n        // Create mini donut chart\n        function createMiniDonut(elementId, percentage, color) {\n            const ctx = document.getElementById(elementId).getContext('2d');\n            return new Chart(ctx, {\n                type: 'doughnut',\n                data: {\n                    datasets: [{\n                        data: [percentage, 100 - percentage],\n                        backgroundColor: [color, '#f2f2f2'],\n                        borderWidth: 0\n                    }]\n                },\n                options: {\n                    ...sparklineDefaults,\n                    cutout: '50%'\n                }\n            });\n        }\n        \n        // Create sparkline\n        function createSparkline(elementId, data, type = 'line', color = '#007bff') {\n            const ctx = document.getElementById(elementId).getContext('2d');\n            const gradient = ctx.createLinearGradient(0, 0, 0, 60);\n            gradient.addColorStop(0, color + '40');\n            gradient.addColorStop(1, color + '00');\n            \n            return new Chart(ctx, {\n                type: type,\n                data: {\n                    labels: Array(data.length).fill(''),\n                    datasets: [{\n                        data: data,\n                        borderColor: color,\n                        backgroundColor: type === 'line' ? gradient : color + '80',\n                        fill: type === 'line',\n                        tension: 0.4,\n                        borderWidth: type === 'line' ? 2 : 0\n                    }]\n                },\n                options: {\n                    ...sparklineDefaults,\n                    scales: {\n                        x: { display: false },\n                        y: { display: false }\n                    }\n                }\n            });\n        }\n        \n        // Initialize dashboard widgets\n        function initDashboardWidgets() {\n            // Revenue sparkline\n            createSparkline('revenueSparkline', [65, 59, 80, 81, 56, 55, 70], 'line', '#007bff');\n            \n            // Users sparkline\n            createSparkline('usersSparkline', [30, 35, 40, 45, 50, 48, 52], 'line', '#28a745');\n            \n            // Conversion sparkline\n            createSparkline('conversionSparkline', [70, 72, 68, 69, 67, 65, 66], 'line', '#ffc107');\n            \n            // Live visitors (will be updated)\n            const liveData = [20, 25, 30, 35, 32, 38, 40];\n            const liveChart = createSparkline('liveSparkline', liveData, 'line', '#17a2b8');\n            \n            // Update live chart\n            setInterval(() => {\n                liveData.shift();\n                liveData.push(Math.floor(Math.random() * 20) + 30);\n                liveChart.data.datasets[0].data = liveData;\n                liveChart.update('none');\n            }, 2000);\n        }\n        \n        // Initialize mini pie charts\n        function initMiniPieCharts() {\n            createMiniPie('pie1', 20, '#13dafe');\n            createMiniPie('pie2', 63, '#6164C1');\n            createMiniPie('pie3', 33, '#F96262');\n            createMiniPie('pie4', 25, '#99D683');\n            createMiniPie('pie5', 75, '#FFCA4A');\n            createMiniPie('pie6', 90, '#4C5667');\n        }\n        \n        // Initialize mini donut charts\n        function initMiniDonutCharts() {\n            createMiniDonut('donut1', 20, '#13DAFE');\n            createMiniDonut('donut2', 63, '#6164C1');\n            createMiniDonut('donut3', 33, '#F96262');\n            createMiniDonut('donut4', 25, '#99D683');\n            createMiniDonut('donut5', 75, '#FFCA4A');\n            createMiniDonut('donut6', 90, '#4C5667');\n        }\n        \n        // Initialize line sparklines\n        function initLineSparklines() {\n            createSparkline('line1', [6, 2, 8, 4, 3, 8, 1, 3, 6, 5, 9, 2, 8, 1, 4, 8, 9, 8, 2, 1], 'line', '#007bff');\n            createSparkline('line2', [6, 2, 8, 4, -3, 8, 1, -3, 6, -5, 9, 2, -8, 1, 4, 8, 9, 8, 2, 1], 'line', '#dc3545');\n            createSparkline('line3', [6, 2, 8, 4, 3, 8, 1, 3, 6, 5, 9, 2, 8, 1, 4, 8, 9, 8, 2, 1], 'line', '#28a745');\n        }\n        \n        // Initialize bar sparklines\n        function initBarSparklines() {\n            createSparkline('bar1', [6, 2, 8, 4, 3, 8, 1, 3, 6, 5, 9, 2, 8, 1, 4, 8, 9, 8, 2, 1], 'bar', '#13DAFE');\n            createSparkline('bar2', [6, 2, 8, 4, -3, 8, 1, -3, 6, -5, 9, 2, -8, 1, 4, 8, 9, 8, 2, 1], 'bar', '#F96262');\n            createSparkline('bar3', [6, 2, 8, 4, 3, 8, 1, 3, 6, 5, 9, 2, 8, 1, 4, 8, 9, 8, 2, 1], 'bar', '#99D683');\n        }\n        \n        // Initialize progress indicators\n        function initProgressIndicators() {\n            const progressValues = [\n                { id: 'progress1', value: 14, color: '#13DAFE' },\n                { id: 'progress2', value: 29, color: '#6164C1' },\n                { id: 'progress3', value: 43, color: '#F96262' },\n                { id: 'progress4', value: 57, color: '#99D683' },\n                { id: 'progress5', value: 71, color: '#FFCA4A' },\n                { id: 'progress6', value: 86, color: '#6f42c1' }\n            ];\n            \n            progressValues.forEach(item => {\n                const ctx = document.getElementById(item.id).getContext('2d');\n                new Chart(ctx, {\n                    type: 'doughnut',\n                    data: {\n                        datasets: [{\n                            data: [item.value, 100 - item.value],\n                            backgroundColor: [item.color, '#eeeeee'],\n                            borderWidth: 0\n                        }]\n                    },\n                    options: {\n                        ...sparklineDefaults,\n                        cutout: '70%',\n                        rotation: -90,\n                        circumference: 180\n                    }\n                });\n            });\n        }\n        \n        // Dynamic charts\n        let dynamicCharts = [];\n        \n        function initDynamicCharts() {\n            // Positive values bar chart\n            const chart1 = createSparkline('dynamic1', [5, 3, 9, 6, 5, 9, 7, 3, 5, 2], 'bar', '#28a745');\n            \n            // Mixed values bar chart with colors\n            const ctx2 = document.getElementById('dynamic2').getContext('2d');\n            const data2 = [5, 3, 2, -1, -3, -2, 2, 3, 5, 2];\n            const colors2 = data2.map(v => v >= 0 ? '#28a745' : '#dc3545');\n            const chart2 = new Chart(ctx2, {\n                type: 'bar',\n                data: {\n                    labels: Array(data2.length).fill(''),\n                    datasets: [{\n                        data: data2,\n                        backgroundColor: colors2,\n                        borderWidth: 0\n                    }]\n                },\n                options: {\n                    ...sparklineDefaults,\n                    scales: {\n                        x: { display: false },\n                        y: { display: false }\n                    }\n                }\n            });\n            \n            // Negative values\n            const chart3 = createSparkline('dynamic3', [0, -3, -6, -4, -5, -4, -7, -3, -5, -2], 'bar', '#dc3545');\n            \n            // Pie chart\n            const ctx4 = document.getElementById('dynamic4').getContext('2d');\n            const chart4 = new Chart(ctx4, {\n                type: 'pie',\n                data: {\n                    datasets: [{\n                        data: [5, 3, 9, 6, 5],\n                        backgroundColor: ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'],\n                        borderWidth: 0\n                    }]\n                },\n                options: sparklineDefaults\n            });\n            \n            dynamicCharts = [chart1, chart2, chart3, chart4];\n        }\n        \n        // Update dynamic charts\n        window.updateDynamicCharts = function() {\n            dynamicCharts.forEach((chart, index) => {\n                if (index < 3) {\n                    // Update bar charts\n                    const newData = Array(10).fill(0).map(() => {\n                        if (index === 0) return Math.random() * 10;\n                        if (index === 1) return Math.random() * 10 - 5;\n                        return -Math.random() * 7;\n                    });\n                    \n                    chart.data.datasets[0].data = newData;\n                    \n                    if (index === 1) {\n                        // Update colors for mixed chart\n                        chart.data.datasets[0].backgroundColor = newData.map(v => v >= 0 ? '#28a745' : '#dc3545');\n                    }\n                } else {\n                    // Update pie chart\n                    chart.data.datasets[0].data = Array(5).fill(0).map(() => Math.random() * 10 + 1);\n                }\n                \n                chart.update();\n            });\n        };\n        \n        // Live updating chart\n        function initLiveUpdateChart() {\n            const ctx = document.getElementById('liveUpdateChart').getContext('2d');\n            const data = Array(50).fill(0).map(() => Math.random() * 100);\n            \n            const chart = new Chart(ctx, {\n                type: 'line',\n                data: {\n                    labels: Array(50).fill(''),\n                    datasets: [{\n                        data: data,\n                        borderColor: '#007bff',\n                        backgroundColor: 'rgba(0, 123, 255, 0.1)',\n                        fill: true,\n                        tension: 0.4,\n                        borderWidth: 2\n                    }]\n                },\n                options: {\n                    ...sparklineDefaults,\n                    animation: {\n                        duration: 0\n                    },\n                    scales: {\n                        x: { display: false },\n                        y: { \n                            display: false,\n                            min: 0,\n                            max: 100\n                        }\n                    }\n                }\n            });\n            \n            // Update live chart\n            setInterval(() => {\n                chart.data.datasets[0].data.shift();\n                chart.data.datasets[0].data.push(Math.random() * 100);\n                chart.update('none');\n            }, 500);\n        }\n        \n        // Initialize all charts\n        document.addEventListener('DOMContentLoaded', function() {\n            initDashboardWidgets();\n            initMiniPieCharts();\n            initMiniDonutCharts();\n            initLineSparklines();\n            initBarSparklines();\n            initProgressIndicators();\n            initDynamicCharts();\n            initLiveUpdateChart();\n        });\n    "],"names":["sparklineDefaults","createMiniPie","elementId","percentage","color","ctx","Chart","createMiniDonut","createSparkline","data","type","gradient","initDashboardWidgets","liveData","liveChart","initMiniPieCharts","initMiniDonutCharts","initLineSparklines","initBarSparklines","initProgressIndicators","item","dynamicCharts","initDynamicCharts","chart1","ctx2","data2","colors2","v","chart2","chart3","ctx4","chart4","chart","index","newData","initLiveUpdateChart"],"mappings":"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"}