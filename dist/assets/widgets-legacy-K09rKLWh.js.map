{"version":3,"file":"widgets-legacy-K09rKLWh.js","sources":["../../src/scripts/components/world-map.js","../../src/scripts/components/widgets.js"],"sourcesContent":["// World Map Component using Leaflet\n// Modern, interactive world map with data visualization\n\nexport class WorldMap {\n  constructor(containerId, options = {}) {\n    this.containerId = containerId\n    this.container = document.getElementById(containerId)\n    \n    this.options = {\n      height: 300,\n      ...options\n    }\n    \n    this.map = null\n    this.markers = []\n    this.data = null\n    \n    this.init()\n  }\n\n  async init() {\n    if (!this.container) {\n      console.error(`World map container with ID '${this.containerId}' not found`)\n      return\n    }\n\n    try {\n      // Load Leaflet CSS and JS\n      await this.loadLeaflet()\n      \n      // Generate sample data\n      this.generateSampleData()\n      \n      // Create the actual map\n      this.createMap()\n      \n    } catch (error) {\n      console.error('Failed to initialize world map:', error)\n      this.showFallback()\n    }\n  }\n\n  async loadLeaflet() {\n    // Import Leaflet CSS\n    const leafletCSS = document.createElement('link')\n    leafletCSS.rel = 'stylesheet'\n    leafletCSS.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css'\n    document.head.appendChild(leafletCSS)\n    \n    // Import Leaflet JS\n    const L = await import('leaflet')\n    this.L = L.default || L\n    \n    console.log('Leaflet loaded successfully')\n  }\n\n  generateSampleData() {\n    // Sample data with geographic coordinates for map visualization\n    this.data = [\n      { name: 'United States', code: 'us', visitors: 4250, percentage: 35.2, lat: 39.8283, lng: -98.5795 },\n      { name: 'United Kingdom', code: 'gb', visitors: 1890, percentage: 15.7, lat: 55.3781, lng: -3.4360 },\n      { name: 'Germany', code: 'de', visitors: 1420, percentage: 11.8, lat: 51.1657, lng: 10.4515 },\n      { name: 'France', code: 'fr', visitors: 980, percentage: 8.1, lat: 46.2276, lng: 2.2137 },\n      { name: 'Canada', code: 'ca', visitors: 760, percentage: 6.3, lat: 56.1304, lng: -106.3468 },\n      { name: 'Australia', code: 'au', visitors: 650, percentage: 5.4, lat: -25.2744, lng: 133.7751 },\n      { name: 'Japan', code: 'jp', visitors: 540, percentage: 4.5, lat: 36.2048, lng: 138.2529 },\n      { name: 'Netherlands', code: 'nl', visitors: 420, percentage: 3.5, lat: 52.1326, lng: 5.2913 },\n      { name: 'Italy', code: 'it', visitors: 380, percentage: 3.2, lat: 41.8719, lng: 12.5674 },\n      { name: 'Spain', code: 'es', visitors: 320, percentage: 2.7, lat: 40.4637, lng: -3.7492 }\n    ]\n  }\n\n  createMap() {\n    // Check if we're inside a card body - if so, we need to work within the card structure\n    const cardBody = this.container.closest('.card-body')\n    const card = this.container.closest('.card')\n    \n    if (card) {\n      // We're inside a card, so let's update the card footer with our data\n      const cardFooter = card.querySelector('.card-footer')\n      \n      // First, clear the container and set explicit dimensions\n      this.container.innerHTML = ''\n      this.container.style.height = `${this.options.height}px`\n      this.container.style.width = '100%'\n      this.container.style.position = 'relative'\n      this.container.classList.remove('d-flex', 'align-items-center', 'justify-content-center', 'bg-light')\n      \n      // Initialize Leaflet map directly in the container\n      this.map = this.L.map(this.container, {\n        center: [20, 0], // Center on world\n        zoom: 2,\n        scrollWheelZoom: true,\n        doubleClickZoom: true,\n        boxZoom: true,\n        keyboard: true,\n        zoomControl: true\n      })\n      \n      // Add OpenStreetMap tile layer\n      this.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18\n      }).addTo(this.map)\n      \n      // Add data points to the map\n      this.addDataPoints()\n      \n      // Update the card footer with our data if it exists\n      if (cardFooter) {\n        cardFooter.innerHTML = `\n          <div class=\"row g-2 text-center\">\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-primary fw-bold\">${this.data.length}</div>\n              <small class=\"text-muted d-block text-nowrap\">Countries</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-success fw-bold\">${this.data.reduce((sum, country) => sum + country.visitors, 0).toLocaleString()}</div>\n              <small class=\"text-muted d-block text-nowrap\">Visitors</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-warning fw-bold text-truncate\">${this.data[0].name}</div>\n              <small class=\"text-muted d-block text-nowrap\">Top Country</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-info fw-bold\">${this.data[0].percentage}%</div>\n              <small class=\"text-muted d-block text-nowrap\">Top Share</small>\n            </div>\n          </div>\n        `\n      }\n      \n    } else {\n      // Fallback - create our own structure if not in a card\n      this.container.innerHTML = ''\n      this.container.style.height = `${this.options.height}px`\n      this.container.style.width = '100%'\n      this.container.style.position = 'relative'\n      this.container.classList.remove('d-flex', 'align-items-center', 'justify-content-center', 'bg-light')\n      \n      this.map = this.L.map(this.container, {\n        center: [20, 0],\n        zoom: 2,\n        scrollWheelZoom: true,\n        doubleClickZoom: true,\n        boxZoom: true,\n        keyboard: true,\n        zoomControl: true\n      })\n      \n      this.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18\n      }).addTo(this.map)\n      \n      this.addDataPoints()\n    }\n    \n    console.log('Leaflet map created successfully with', this.data.length, 'data points')\n    \n    // Force map to properly size itself after a short delay\n    setTimeout(() => {\n      if (this.map) {\n        this.map.invalidateSize()\n      }\n    }, 100)\n  }\n  \n  addDataPoints() {\n    // Clear existing markers\n    this.markers.forEach(marker => this.map.removeLayer(marker))\n    this.markers = []\n    \n    // Add markers for each country\n    this.data.forEach(country => {\n      // Calculate marker size based on visitor count\n      const maxVisitors = Math.max(...this.data.map(d => d.visitors))\n      const minSize = 8\n      const maxSize = 25\n      const size = minSize + (country.visitors / maxVisitors) * (maxSize - minSize)\n      \n      // Create custom icon with size based on visitor count\n      const customIcon = this.L.divIcon({\n        className: 'custom-marker',\n        html: `\n          <div style=\"\n            width: ${size}px;\n            height: ${size}px;\n            background: #0d6efd;\n            border: 2px solid white;\n            border-radius: 50%;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: ${Math.max(8, size * 0.4)}px;\n            font-weight: bold;\n          \">\n            <span class=\"fi fi-${country.code}\" style=\"font-size: ${Math.max(6, size * 0.6)}px;\"></span>\n          </div>\n        `,\n        iconSize: [size, size],\n        iconAnchor: [size/2, size/2]\n      })\n      \n      // Create marker\n      const marker = this.L.marker([country.lat, country.lng], {\n        icon: customIcon\n      }).addTo(this.map)\n      \n      // Add popup with country information  \n      marker.bindPopup(`\n        <div class=\"p-2\">\n          <div class=\"d-flex align-items-center mb-2\">\n            <span class=\"fi fi-${country.code} me-2\"></span>\n            <strong>${country.name}</strong>\n          </div>\n          <div><strong>${country.visitors.toLocaleString()}</strong> visitors</div>\n          <div class=\"text-muted\">${country.percentage}% of total traffic</div>\n        </div>\n      `)\n      \n      this.markers.push(marker)\n    })\n  }\n\n  setupInteractions() {\n    // Find the card that contains our map\n    const card = this.container.closest('.card')\n    if (!card) return\n    \n    // Add click handlers for mini country cards in the footer\n    const countryMinis = card.querySelectorAll('.country-mini')\n    countryMinis.forEach(mini => {\n      mini.addEventListener('click', (e) => {\n        const countryCode = mini.dataset.country\n        const country = this.data.find(c => c.code === countryCode)\n        if (country) {\n          // Pan and zoom to country\n          this.map.setView([country.lat, country.lng], 5, {\n            animate: true,\n            duration: 1\n          })\n          \n          // Find and open the marker popup\n          const marker = this.markers.find(m => \n            m.getLatLng().lat === country.lat && m.getLatLng().lng === country.lng\n          )\n          if (marker) {\n            marker.openPopup()\n          }\n          \n          // Highlight effect\n          mini.style.backgroundColor = 'rgba(13, 110, 253, 0.1)'\n          mini.style.borderRadius = '8px'\n          mini.style.transition = 'background-color 0.3s ease'\n          setTimeout(() => {\n            mini.style.backgroundColor = ''\n          }, 300)\n        }\n      })\n      \n      // Add hover effects\n      mini.addEventListener('mouseenter', () => {\n        mini.style.backgroundColor = 'rgba(0, 0, 0, 0.05)'\n        mini.style.borderRadius = '8px'\n        mini.style.transition = 'background-color 0.2s ease'\n      })\n      \n      mini.addEventListener('mouseleave', () => {\n        mini.style.backgroundColor = ''\n      })\n    })\n  }\n\n  // Update data and refresh map\n  updateData(newData) {\n    this.data = newData\n    if (this.map) {\n      // Recreate the entire component with new data\n      this.createMap()\n    }\n  }\n  \n  // Resize map when container changes\n  handleResize() {\n    if (this.map) {\n      this.map.invalidateSize()\n    }\n  }\n\n  showFallback() {\n    this.container.innerHTML = `\n      <div class=\"d-flex align-items-center justify-content-center h-100 bg-light rounded\">\n        <div class=\"text-center text-muted\">\n          <i class=\"fas fa-globe fa-3x mb-3 opacity-50\"></i>\n          <div class=\"h6\">World Map Unavailable</div>\n          <small>Unable to load map visualization</small>\n        </div>\n      </div>\n    `\n  }\n\n  // Destroy the component\n  destroy() {\n    if (this.map) {\n      this.map.remove()\n      this.map = null\n    }\n    this.markers = []\n    if (this.container) {\n      this.container.innerHTML = ''\n    }\n  }\n\n  // Get current data\n  getData() {\n    return this.data\n  }\n}","// Widget Manager Component - Dashboard widgets functionality\nimport { WorldMap } from './world-map.js'\n\nexport class WidgetManager {\n  constructor() {\n    this.widgets = new Map()\n    this.charts = new Map()\n    this.Chart = null\n    this.init()\n  }\n\n  async init() {\n    console.log('Widget Manager initialized')\n    \n    // Load Chart.js first\n    await this.loadChartJS()\n    \n    // Initialize components\n    this.initializeCounters()\n    await this.initializeWidgetCharts()\n    await this.initializeTrafficChart()\n    await this.initializeWorldMap()\n  }\n\n  async loadChartJS() {\n    try {\n      // Dynamically import Chart.js with all components\n      const chartModule = await import('chart.js')\n      this.Chart = chartModule.Chart\n      \n      // Register all Chart.js components\n      this.Chart.register(...chartModule.registerables)\n      \n      console.log('Chart.js loaded successfully')\n    } catch (error) {\n      console.error('Failed to load Chart.js:', error)\n      throw error\n    }\n  }\n\n  initializeCounters() {\n    // Initialize animated counters\n    const counters = document.querySelectorAll('.count, .card-title')\n    counters.forEach(counter => {\n      if (counter.textContent.match(/^\\d/)) {\n        this.animateCounter(counter)\n      }\n    })\n  }\n\n  animateCounter(element) {\n    const target = parseInt(element.textContent.replace(/,/g, ''))\n    const duration = 2000 // 2 seconds\n    const step = target / (duration / 16) // 60fps\n\n    let current = 0\n    const timer = setInterval(() => {\n      current += step\n      if (current >= target) {\n        current = target\n        clearInterval(timer)\n      }\n      element.textContent = Math.floor(current).toLocaleString()\n    }, 16)\n  }\n\n  async initializeWidgetCharts() {\n    if (!this.Chart) {\n      console.warn('Chart.js not loaded, skipping widget charts')\n      return\n    }\n\n    // Find all widget chart canvases\n    const chartElements = document.querySelectorAll('[id^=\"widgetChart\"]')\n    \n    console.log(`Found ${chartElements.length} widget chart canvases`)\n    \n    chartElements.forEach((canvas, index) => {\n      try {\n        this.createWidgetChart(canvas, index + 1)\n      } catch (error) {\n        console.error(`Failed to create widget chart ${index + 1}:`, error)\n      }\n    })\n  }\n\n  createWidgetChart(canvas, index) {\n    if (!canvas) {\n      console.warn(`Widget chart canvas ${index} not found`)\n      return\n    }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      console.warn(`Could not get context for widget chart ${index}`)\n      return\n    }\n\n    // Destroy existing chart if it exists\n    if (this.charts.has(canvas.id)) {\n      this.charts.get(canvas.id).destroy()\n    }\n    \n    // Generate chart data\n    const data = this.generateWidgetChartData(index)\n    \n    console.log(`Creating widget chart ${index} with data:`, data)\n    \n    const chart = new this.Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        scales: {\n          x: {\n            display: false,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            display: false,\n            grid: {\n              display: false\n            }\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hoverRadius: 0\n          },\n          line: {\n            borderWidth: 2,\n            tension: 0.4\n          }\n        },\n        animation: {\n          duration: 1000\n        }\n      }\n    })\n    \n    // Store chart reference\n    this.charts.set(canvas.id, chart)\n    \n    console.log(`Widget chart ${index} created successfully`)\n  }\n\n  generateWidgetChartData(index) {\n    // Different datasets for each widget\n    const datasets = [\n      { data: [65, 59, 84, 84, 51, 55, 40, 65, 59, 84] }, // Primary widget\n      { data: [28, 48, 40, 59, 86, 27, 90, 28, 48, 40] }, // Danger widget\n      { data: [45, 25, 16, 36, 67, 18, 76, 45, 25, 16] }, // Warning widget\n      { data: [12, 19, 27, 43, 52, 31, 48, 12, 19, 27] }  // Success widget\n    ]\n\n    const selectedData = datasets[index - 1] || datasets[0]\n    \n    return {\n      labels: Array(selectedData.data.length).fill(''),\n      datasets: [{\n        data: selectedData.data,\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        fill: false,\n        pointRadius: 0,\n        pointHoverRadius: 0\n      }]\n    }\n  }\n\n  async initializeTrafficChart() {\n    const trafficCanvas = document.getElementById('trafficChart')\n    if (!trafficCanvas || !this.Chart) return\n\n    try {\n      const ctx = trafficCanvas.getContext('2d')\n      \n      // Destroy existing chart if it exists\n      if (this.charts.has('trafficChart')) {\n        this.charts.get('trafficChart').destroy()\n      }\n      \n      const chart = new this.Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n          datasets: [{\n            label: 'Visits',\n            data: [65, 59, 84, 84, 51, 55, 40, 58, 72, 69],\n            borderColor: '#007bff',\n            backgroundColor: 'rgba(0, 123, 255, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }, {\n            label: 'Unique Visits',\n            data: [28, 48, 40, 59, 86, 27, 90, 45, 62, 58],\n            borderColor: '#28a745',\n            backgroundColor: 'rgba(40, 167, 69, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false\n            }\n          },\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            },\n            y: {\n              display: true,\n              grid: {\n                color: 'rgba(0,0,0,0.1)'\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            }\n          },\n          elements: {\n            line: {\n              borderWidth: 2\n            }\n          },\n          interaction: {\n            mode: 'nearest',\n            axis: 'x',\n            intersect: false\n          }\n        }\n      })\n      \n      this.charts.set('trafficChart', chart)\n      console.log('Traffic chart created successfully')\n    } catch (error) {\n      console.error('Failed to initialize traffic chart:', error)\n    }\n  }\n\n  // Handle window resize\n  handleResize() {\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.resize === 'function') {\n        chart.resize()\n      }\n    })\n  }\n\n  async initializeWorldMap() {\n    const worldMapContainer = document.getElementById('worldMap')\n    if (!worldMapContainer) {\n      console.warn('World map container not found')\n      return\n    }\n\n    try {\n      const worldMap = new WorldMap('worldMap', {\n        height: 320,\n        showCountryNames: true,\n        backgroundColor: 'white'\n      })\n      \n      this.widgets.set('worldMap', worldMap)\n      console.log('World map initialized successfully')\n    } catch (error) {\n      console.error('Failed to initialize world map:', error)\n      // Show fallback content\n      worldMapContainer.innerHTML = `\n        <div class=\"d-flex align-items-center justify-content-center h-100 bg-light rounded\">\n          <div class=\"text-center text-muted\">\n            <i class=\"fas fa-globe fa-3x mb-3 opacity-50\"></i>\n            <div class=\"h6\">Interactive World Map</div>\n            <small>Global visitor statistics</small>\n          </div>\n        </div>\n      `\n    }\n  }\n\n  destroy() {\n    // Destroy all charts\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.destroy === 'function') {\n        chart.destroy()\n      }\n    })\n    \n    // Destroy all widgets\n    this.widgets.forEach(widget => {\n      if (widget && typeof widget.destroy === 'function') {\n        widget.destroy()\n      }\n    })\n    \n    this.charts.clear()\n    this.widgets.clear()\n  }\n}"],"names":["WorldMap","constructor","containerId","options","this","container","document","getElementById","height","map","markers","data","init","loadLeaflet","generateSampleData","createMap","error","console","showFallback","leafletCSS","createElement","rel","href","head","appendChild","L","__vitePreload","module","import","default","log","name","code","visitors","percentage","lat","lng","closest","card","cardFooter","querySelector","innerHTML","style","width","position","classList","remove","center","zoom","scrollWheelZoom","doubleClickZoom","boxZoom","keyboard","zoomControl","tileLayer","attribution","maxZoom","addTo","addDataPoints","length","reduce","sum","country","toLocaleString","setTimeout","invalidateSize","forEach","marker","removeLayer","maxVisitors","Math","max","d","size","customIcon","divIcon","className","html","iconSize","iconAnchor","icon","bindPopup","push","setupInteractions","querySelectorAll","mini","addEventListener","e","countryCode","dataset","find","c","setView","animate","duration","m","getLatLng","openPopup","backgroundColor","borderRadius","transition","updateData","newData","handleResize","destroy","getData","exports","widgets","Map","charts","Chart","loadChartJS","initializeCounters","initializeWidgetCharts","initializeTrafficChart","initializeWorldMap","chartModule","then","n","register","registerables","counter","textContent","match","animateCounter","element","target","parseInt","replace","step","current","timer","setInterval","clearInterval","floor","warn","chartElements","canvas","index","createWidgetChart","ctx","getContext","has","id","get","generateWidgetChartData","chart","type","responsive","maintainAspectRatio","interaction","intersect","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","hoverRadius","line","borderWidth","tension","animation","set","datasets","selectedData","labels","Array","fill","borderColor","pointRadius","pointHoverRadius","trafficCanvas","label","mode","ticks","color","axis","resize","worldMapContainer","worldMap","showCountryNames","widget","clear"],"mappings":"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"}