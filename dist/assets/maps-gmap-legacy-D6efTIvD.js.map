{"version":3,"file":"maps-gmap-legacy-D6efTIvD.js","sources":["../../src/scripts/components/gmaps.js","../../src/maps-gmap.html?html-proxy&index=1.js"],"sourcesContent":["// Google Maps component using native Google Maps JavaScript API\n// No jQuery or external dependencies required\n\nclass GoogleMapsManager {\n    constructor() {\n        this.maps = {};\n        this.markers = {};\n    }\n\n    // Initialize all maps when the API is ready\n    initialize() {\n        // Basic Map\n        this.initBasicMap();\n        \n        // Map with Markers\n        this.initMarkersMap();\n        \n        // Geometry Overlays Map\n        this.initGeometryMap();\n        \n        // Elevation Map\n        this.initElevationMap();\n        \n        // Geolocation Map\n        this.initGeolocationMap();\n        \n        // Styled Map\n        this.initStyledMap();\n        \n        // Traffic Layer Map\n        this.initTrafficMap();\n        \n        // Map Events\n        this.initEventsMap();\n    }\n\n    // Basic Map\n    initBasicMap() {\n        const element = document.getElementById('basic-map');\n        if (!element) return;\n\n        this.maps.basic = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 8,\n            mapTypeControl: false,\n            streetViewControl: false,\n            fullscreenControl: true,\n            zoomControl: true,\n            zoomControlOptions: {\n                position: google.maps.ControlPosition.LEFT_TOP\n            }\n        });\n    }\n\n    // Map with Markers\n    initMarkersMap() {\n        const element = document.getElementById('map-2');\n        if (!element) return;\n\n        this.maps.markers = new google.maps.Map(element, {\n            center: { lat: 41.850033, lng: -87.6500523 },\n            zoom: 11\n        });\n\n        // Add some example markers\n        const locations = [\n            { lat: 41.850033, lng: -87.6500523, title: 'Chicago' },\n            { lat: 41.881832, lng: -87.623177, title: 'Willis Tower' },\n            { lat: 41.878876, lng: -87.635918, title: 'Millennium Park' }\n        ];\n\n        this.markers.markers = locations.map(location => {\n            const marker = new google.maps.Marker({\n                position: { lat: location.lat, lng: location.lng },\n                map: this.maps.markers,\n                title: location.title,\n                animation: google.maps.Animation.DROP\n            });\n\n            const infoWindow = new google.maps.InfoWindow({\n                content: `<div class=\"p-2\"><h6>${location.title}</h6><p>Click for more info</p></div>`\n            });\n\n            marker.addListener('click', () => {\n                infoWindow.open(this.maps.markers, marker);\n            });\n\n            return marker;\n        });\n    }\n\n    // Geometry Overlays Map\n    initGeometryMap() {\n        const element = document.getElementById('map-3');\n        if (!element) return;\n\n        this.maps.geometry = new google.maps.Map(element, {\n            center: { lat: -12.040397656836609, lng: -77.03373871559225 },\n            zoom: 14\n        });\n\n        // Rectangle\n        const rectangle = new google.maps.Rectangle({\n            strokeColor: '#0d6efd',\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: '#0d6efd',\n            fillOpacity: 0.35,\n            map: this.maps.geometry,\n            bounds: {\n                north: -12.030397656836609,\n                south: -12.034804866577001,\n                east: -77.01154422636042,\n                west: -77.02373871559225\n            }\n        });\n\n        // Polygon\n        const triangleCoords = [\n            { lat: -12.040397656836609, lng: -77.03373871559225 },\n            { lat: -12.040248585302038, lng: -77.03993927003302 },\n            { lat: -12.050047116528843, lng: -77.02448169303511 },\n            { lat: -12.044804866577001, lng: -77.02154422636042 }\n        ];\n\n        const polygon = new google.maps.Polygon({\n            paths: triangleCoords,\n            strokeColor: '#198754',\n            strokeOpacity: 0.8,\n            strokeWeight: 3,\n            fillColor: '#198754',\n            fillOpacity: 0.35,\n            map: this.maps.geometry\n        });\n\n        // Circle\n        const circle = new google.maps.Circle({\n            strokeColor: '#6f42c1',\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: '#6f42c1',\n            fillOpacity: 0.35,\n            map: this.maps.geometry,\n            center: { lat: -12.040504866577001, lng: -77.02024422636042 },\n            radius: 350\n        });\n\n        // Fit bounds to show all shapes\n        const bounds = new google.maps.LatLngBounds();\n        bounds.extend({ lat: -12.030397656836609, lng: -77.03993927003302 });\n        bounds.extend({ lat: -12.050047116528843, lng: -77.01154422636042 });\n        this.maps.geometry.fitBounds(bounds);\n    }\n\n    // Elevation Map\n    initElevationMap() {\n        const element = document.getElementById('map-4');\n        if (!element) return;\n\n        this.maps.elevation = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 13\n        });\n\n        const elevator = new google.maps.ElevationService();\n        const locations = [\n            { lat: -12.040397656836609, lng: -77.03373871559225 },\n            { lat: -12.050047116528843, lng: -77.02448169303511 },\n            { lat: -12.044804866577001, lng: -77.02154422636042 }\n        ];\n\n        // Request elevation data\n        elevator.getElevationForLocations({\n            locations: locations\n        }, (results, status) => {\n            if (status === 'OK' && results) {\n                results.forEach((result, index) => {\n                    const marker = new google.maps.Marker({\n                        position: result.location,\n                        map: this.maps.elevation,\n                        title: `Elevation: ${result.elevation.toFixed(2)} meters`\n                    });\n\n                    const infoWindow = new google.maps.InfoWindow({\n                        content: `<div class=\"p-2\">\n                            <h6>Location ${index + 1}</h6>\n                            <p>Elevation: <strong>${result.elevation.toFixed(2)}</strong> meters</p>\n                        </div>`\n                    });\n\n                    marker.addListener('click', () => {\n                        infoWindow.open(this.maps.elevation, marker);\n                    });\n                });\n            }\n        });\n    }\n\n    // Geolocation Map\n    initGeolocationMap() {\n        const element = document.getElementById('map-5');\n        if (!element) return;\n\n        this.maps.geolocation = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 6\n        });\n\n        // Try HTML5 geolocation\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n\n                    this.maps.geolocation.setCenter(pos);\n                    this.maps.geolocation.setZoom(15);\n\n                    new google.maps.Marker({\n                        position: pos,\n                        map: this.maps.geolocation,\n                        title: 'Your Location',\n                        icon: {\n                            path: google.maps.SymbolPath.CIRCLE,\n                            scale: 10,\n                            fillColor: '#0d6efd',\n                            fillOpacity: 0.8,\n                            strokeColor: '#fff',\n                            strokeWeight: 2\n                        }\n                    });\n\n                    const infoWindow = new google.maps.InfoWindow({\n                        content: '<div class=\"p-2\"><h6>You are here!</h6></div>'\n                    });\n                    \n                    infoWindow.setPosition(pos);\n                    infoWindow.open(this.maps.geolocation);\n                },\n                () => {\n                    this.handleLocationError(true, this.maps.geolocation.getCenter());\n                }\n            );\n        } else {\n            // Browser doesn't support Geolocation\n            this.handleLocationError(false, this.maps.geolocation.getCenter());\n        }\n    }\n\n    handleLocationError(browserHasGeolocation, pos) {\n        const infoWindow = new google.maps.InfoWindow({\n            content: browserHasGeolocation\n                ? 'Error: The Geolocation service failed.'\n                : 'Error: Your browser doesn\\'t support geolocation.'\n        });\n        infoWindow.setPosition(pos);\n        infoWindow.open(this.maps.geolocation);\n    }\n\n    // Styled Map\n    initStyledMap() {\n        const element = document.getElementById('map-6');\n        if (!element) return;\n\n        // Night mode style\n        const nightStyle = [\n            { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\n            { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\n            { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\n            {\n                featureType: 'administrative.locality',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#d59563' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'geometry',\n                stylers: [{ color: '#38414e' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'geometry.stroke',\n                stylers: [{ color: '#212a37' }]\n            },\n            {\n                featureType: 'road',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#9ca5b3' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'geometry',\n                stylers: [{ color: '#746855' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'geometry.stroke',\n                stylers: [{ color: '#1f2835' }]\n            },\n            {\n                featureType: 'road.highway',\n                elementType: 'labels.text.fill',\n                stylers: [{ color: '#f3d19c' }]\n            },\n            {\n                featureType: 'water',\n                elementType: 'geometry',\n                stylers: [{ color: '#17263c' }]\n            }\n        ];\n\n        this.maps.styled = new google.maps.Map(element, {\n            center: { lat: 40.65, lng: -73.95 },\n            zoom: 12,\n            styles: nightStyle\n        });\n    }\n\n    // Traffic Layer Map\n    initTrafficMap() {\n        const element = document.getElementById('map-7');\n        if (!element) return;\n\n        this.maps.traffic = new google.maps.Map(element, {\n            center: { lat: 34.04924594193164, lng: -118.24104309082031 },\n            zoom: 13,\n            mapTypeId: 'roadmap'\n        });\n\n        const trafficLayer = new google.maps.TrafficLayer();\n        trafficLayer.setMap(this.maps.traffic);\n\n        const transitLayer = new google.maps.TransitLayer();\n        transitLayer.setMap(this.maps.traffic);\n    }\n\n    // Map Events\n    initEventsMap() {\n        const element = document.getElementById('map-8');\n        if (!element) return;\n\n        this.maps.events = new google.maps.Map(element, {\n            center: { lat: -12.043333, lng: -77.028333 },\n            zoom: 16\n        });\n\n        // Click event\n        this.maps.events.addListener('click', (e) => {\n            const marker = new google.maps.Marker({\n                position: e.latLng,\n                map: this.maps.events,\n                animation: google.maps.Animation.DROP\n            });\n\n            const infoWindow = new google.maps.InfoWindow({\n                content: `<div class=\"p-2\">\n                    <h6>You clicked here!</h6>\n                    <p>Lat: ${e.latLng.lat().toFixed(6)}</p>\n                    <p>Lng: ${e.latLng.lng().toFixed(6)}</p>\n                </div>`\n            });\n\n            marker.addListener('click', () => {\n                infoWindow.open(this.maps.events, marker);\n            });\n        });\n\n        // Add instructions\n        const controlDiv = document.createElement('div');\n        controlDiv.className = 'bg-white border rounded shadow-sm m-2 p-2';\n        controlDiv.innerHTML = '<small>Click anywhere on the map to place a marker</small>';\n        this.maps.events.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);\n    }\n}\n\n// Create global instance\nwindow.googleMapsManager = new GoogleMapsManager();\n\n// Initialize when Google Maps is loaded\nwindow.initGoogleMaps = function() {\n    window.googleMapsManager.initialize();\n};\n\n// Export for module usage\nexport default GoogleMapsManager;","\n        import GoogleMapsManager from './scripts/components/gmaps.js';\n        \n        // Load Google Maps API\n        const script = document.createElement('script');\n        script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyD2jlT6C_to6X1mMvR9yRWeRvpIgTXgddM&callback=initGoogleMaps&libraries=geometry,places';\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n    "],"names":["window","googleMapsManager","constructor","this","maps","markers","initialize","initBasicMap","initMarkersMap","initGeometryMap","initElevationMap","initGeolocationMap","initStyledMap","initTrafficMap","initEventsMap","element","document","getElementById","basic","google","Map","center","lat","lng","zoom","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","zoomControlOptions","position","ControlPosition","LEFT_TOP","title","map","location","marker","Marker","animation","Animation","DROP","infoWindow","InfoWindow","content","addListener","open","geometry","Rectangle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","bounds","north","south","east","west","Polygon","paths","Circle","radius","LatLngBounds","extend","fitBounds","elevation","ElevationService","getElevationForLocations","locations","results","status","forEach","result","index","toFixed","geolocation","navigator","getCurrentPosition","pos","coords","latitude","longitude","setCenter","setZoom","icon","path","SymbolPath","CIRCLE","scale","setPosition","handleLocationError","getCenter","browserHasGeolocation","styled","styles","elementType","stylers","color","featureType","traffic","mapTypeId","TrafficLayer","setMap","TransitLayer","events","e","latLng","controlDiv","createElement","className","innerHTML","controls","TOP_CENTER","push","initGoogleMaps","script","src","async","defer","head","appendChild"],"mappings":"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"}