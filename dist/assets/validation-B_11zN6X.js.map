{"version":3,"file":"validation-B_11zN6X.js","sources":["../../src/scripts/components/validation.js"],"sourcesContent":["// Form Validation Component - Vanilla JS replacement for jQuery Validation\n\nexport class FormValidator {\n  constructor(form, rules = {}) {\n    this.form = typeof form === 'string' ? document.querySelector(form) : form\n    this.rules = rules\n    this.errors = {}\n    \n    if (this.form) {\n      this.init()\n    }\n  }\n\n  init() {\n    this.parseRulesFromAttributes()\n    this.setupEventListeners()\n  }\n\n  parseRulesFromAttributes() {\n    const inputs = this.form.querySelectorAll('[data-validate]')\n    inputs.forEach(input => {\n      const rules = input.dataset.validate.split('|')\n      this.rules[input.name] = rules\n    })\n  }\n\n  setupEventListeners() {\n    // Form submission\n    this.form.addEventListener('submit', (e) => {\n      if (!this.validateForm()) {\n        e.preventDefault()\n        this.displayErrors()\n      }\n    })\n\n    // Real-time validation\n    const inputs = this.form.querySelectorAll('input, select, textarea')\n    inputs.forEach(input => {\n      input.addEventListener('blur', () => {\n        this.validateField(input)\n      })\n\n      input.addEventListener('input', () => {\n        this.clearFieldError(input)\n      })\n    })\n  }\n\n  validateForm() {\n    this.errors = {}\n    let isValid = true\n\n    Object.keys(this.rules).forEach(fieldName => {\n      const field = this.form.querySelector(`[name=\"${fieldName}\"]`)\n      if (field && !this.validateField(field)) {\n        isValid = false\n      }\n    })\n\n    return isValid\n  }\n\n  validateField(field) {\n    const fieldName = field.name\n    const fieldValue = field.value.trim()\n    const rules = this.rules[fieldName] || []\n\n    delete this.errors[fieldName]\n\n    for (const rule of rules) {\n      const [ruleName, ruleValue] = rule.split(':')\n      \n      if (!this.applyRule(fieldValue, ruleName, ruleValue, field)) {\n        this.errors[fieldName] = this.getErrorMessage(fieldName, ruleName, ruleValue)\n        this.showFieldError(field, this.errors[fieldName])\n        return false\n      }\n    }\n\n    this.clearFieldError(field)\n    return true\n  }\n\n  applyRule(value, ruleName, ruleValue, field) {\n    switch (ruleName) {\n      case 'required':\n        return value.length > 0\n\n      case 'min':\n        return value.length >= parseInt(ruleValue)\n\n      case 'max':\n        return value.length <= parseInt(ruleValue)\n\n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        return !value || emailRegex.test(value)\n\n      case 'numeric':\n        return !value || /^\\d+$/.test(value)\n\n      case 'alpha':\n        return !value || /^[a-zA-Z]+$/.test(value)\n\n      case 'alphanumeric':\n        return !value || /^[a-zA-Z0-9]+$/.test(value)\n\n      case 'url':\n        try {\n          new URL(value)\n          return true\n        } catch {\n          return !value\n        }\n\n      case 'confirmed':\n        const confirmField = this.form.querySelector(`[name=\"${ruleValue}\"]`)\n        return confirmField && value === confirmField.value\n\n      case 'regex':\n        const regex = new RegExp(ruleValue)\n        return !value || regex.test(value)\n\n      default:\n        return true\n    }\n  }\n\n  getErrorMessage(fieldName, ruleName, ruleValue) {\n    const fieldLabel = this.getFieldLabel(fieldName)\n    \n    const messages = {\n      required: `${fieldLabel} is required.`,\n      min: `${fieldLabel} must be at least ${ruleValue} characters.`,\n      max: `${fieldLabel} must not exceed ${ruleValue} characters.`,\n      email: `${fieldLabel} must be a valid email address.`,\n      numeric: `${fieldLabel} must be numeric.`,\n      alpha: `${fieldLabel} must contain only letters.`,\n      alphanumeric: `${fieldLabel} must contain only letters and numbers.`,\n      url: `${fieldLabel} must be a valid URL.`,\n      confirmed: `${fieldLabel} confirmation does not match.`,\n      regex: `${fieldLabel} format is invalid.`\n    }\n\n    return messages[ruleName] || `${fieldLabel} is invalid.`\n  }\n\n  getFieldLabel(fieldName) {\n    const field = this.form.querySelector(`[name=\"${fieldName}\"]`)\n    const label = this.form.querySelector(`label[for=\"${field?.id}\"]`)\n    \n    if (label) {\n      return label.textContent.replace('*', '').trim()\n    }\n\n    return fieldName.charAt(0).toUpperCase() + fieldName.slice(1).replace(/[_-]/g, ' ')\n  }\n\n  showFieldError(field, message) {\n    this.clearFieldError(field)\n    \n    field.classList.add('is-invalid')\n    \n    const errorElement = document.createElement('div')\n    errorElement.className = 'invalid-feedback'\n    errorElement.textContent = message\n    \n    field.parentNode.appendChild(errorElement)\n  }\n\n  clearFieldError(field) {\n    field.classList.remove('is-invalid')\n    \n    const errorElement = field.parentNode.querySelector('.invalid-feedback')\n    if (errorElement) {\n      errorElement.remove()\n    }\n  }\n\n  displayErrors() {\n    // Show a summary of errors if needed\n    if (Object.keys(this.errors).length > 0) {\n      const errorSummary = document.createElement('div')\n      errorSummary.className = 'alert alert-danger'\n      errorSummary.innerHTML = `\n        <strong>Please correct the following errors:</strong>\n        <ul class=\"mb-0 mt-2\">\n          ${Object.values(this.errors).map(error => `<li>${error}</li>`).join('')}\n        </ul>\n      `\n      \n      // Remove existing error summary\n      const existingError = this.form.querySelector('.alert-danger')\n      if (existingError) {\n        existingError.remove()\n      }\n      \n      this.form.insertBefore(errorSummary, this.form.firstChild)\n      \n      // Auto-remove after 5 seconds\n      setTimeout(() => {\n        if (errorSummary.parentNode) {\n          errorSummary.remove()\n        }\n      }, 5000)\n    }\n  }\n\n  // Public API methods\n  addRule(fieldName, rules) {\n    this.rules[fieldName] = Array.isArray(rules) ? rules : [rules]\n  }\n\n  removeRule(fieldName) {\n    delete this.rules[fieldName]\n  }\n\n  resetValidation() {\n    this.errors = {}\n    \n    // Clear all field errors\n    const invalidFields = this.form.querySelectorAll('.is-invalid')\n    invalidFields.forEach(field => this.clearFieldError(field))\n    \n    // Remove error summary\n    const errorSummary = this.form.querySelector('.alert-danger')\n    if (errorSummary) {\n      errorSummary.remove()\n    }\n  }\n\n  destroy() {\n    this.resetValidation()\n  }\n}"],"names":["FormValidator","form","rules","input","e","isValid","fieldName","field","fieldValue","rule","ruleName","ruleValue","value","confirmField","regex","fieldLabel","label","message","errorElement","errorSummary","error","existingError"],"mappings":"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"}