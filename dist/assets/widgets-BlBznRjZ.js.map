{"version":3,"mappings":"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","names":["WorldMap","containerId","options","error","leafletCSS","L","__vitePreload","card","cardFooter","sum","country","marker","maxVisitors","d","minSize","size","customIcon","mini","e","countryCode","c","m","newData","WidgetManager","chartModule","n","counter","element","target","step","current","timer","chartElements","canvas","index","ctx","data","chart","datasets","selectedData","trafficCanvas","worldMapContainer","worldMap","widget"],"ignoreList":[],"sources":["../../src/scripts/components/world-map.js","../../src/scripts/components/widgets.js"],"sourcesContent":["// World Map Component using Leaflet\n// Modern, interactive world map with data visualization\n\nexport class WorldMap {\n  constructor(containerId, options = {}) {\n    this.containerId = containerId\n    this.container = document.getElementById(containerId)\n    \n    this.options = {\n      height: 300,\n      ...options\n    }\n    \n    this.map = null\n    this.markers = []\n    this.data = null\n    \n    this.init()\n  }\n\n  async init() {\n    if (!this.container) {\n      console.error(`World map container with ID '${this.containerId}' not found`)\n      return\n    }\n\n    try {\n      // Load Leaflet CSS and JS\n      await this.loadLeaflet()\n      \n      // Generate sample data\n      this.generateSampleData()\n      \n      // Create the actual map\n      this.createMap()\n      \n    } catch (error) {\n      console.error('Failed to initialize world map:', error)\n      this.showFallback()\n    }\n  }\n\n  async loadLeaflet() {\n    // Import Leaflet CSS\n    const leafletCSS = document.createElement('link')\n    leafletCSS.rel = 'stylesheet'\n    leafletCSS.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css'\n    document.head.appendChild(leafletCSS)\n    \n    // Import Leaflet JS\n    const L = await import('leaflet')\n    this.L = L.default || L\n    \n    console.log('Leaflet loaded successfully')\n  }\n\n  generateSampleData() {\n    // Sample data with geographic coordinates for map visualization\n    this.data = [\n      { name: 'United States', code: 'us', visitors: 4250, percentage: 35.2, lat: 39.8283, lng: -98.5795 },\n      { name: 'United Kingdom', code: 'gb', visitors: 1890, percentage: 15.7, lat: 55.3781, lng: -3.4360 },\n      { name: 'Germany', code: 'de', visitors: 1420, percentage: 11.8, lat: 51.1657, lng: 10.4515 },\n      { name: 'France', code: 'fr', visitors: 980, percentage: 8.1, lat: 46.2276, lng: 2.2137 },\n      { name: 'Canada', code: 'ca', visitors: 760, percentage: 6.3, lat: 56.1304, lng: -106.3468 },\n      { name: 'Australia', code: 'au', visitors: 650, percentage: 5.4, lat: -25.2744, lng: 133.7751 },\n      { name: 'Japan', code: 'jp', visitors: 540, percentage: 4.5, lat: 36.2048, lng: 138.2529 },\n      { name: 'Netherlands', code: 'nl', visitors: 420, percentage: 3.5, lat: 52.1326, lng: 5.2913 },\n      { name: 'Italy', code: 'it', visitors: 380, percentage: 3.2, lat: 41.8719, lng: 12.5674 },\n      { name: 'Spain', code: 'es', visitors: 320, percentage: 2.7, lat: 40.4637, lng: -3.7492 }\n    ]\n  }\n\n  createMap() {\n    // Check if we're inside a card body - if so, we need to work within the card structure\n    const cardBody = this.container.closest('.card-body')\n    const card = this.container.closest('.card')\n    \n    if (card) {\n      // We're inside a card, so let's update the card footer with our data\n      const cardFooter = card.querySelector('.card-footer')\n      \n      // First, clear the container and set explicit dimensions\n      this.container.innerHTML = ''\n      this.container.style.height = `${this.options.height}px`\n      this.container.style.width = '100%'\n      this.container.style.position = 'relative'\n      this.container.classList.remove('d-flex', 'align-items-center', 'justify-content-center', 'bg-light')\n      \n      // Initialize Leaflet map directly in the container\n      this.map = this.L.map(this.container, {\n        center: [20, 0], // Center on world\n        zoom: 2,\n        scrollWheelZoom: true,\n        doubleClickZoom: true,\n        boxZoom: true,\n        keyboard: true,\n        zoomControl: true\n      })\n      \n      // Add OpenStreetMap tile layer\n      this.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18\n      }).addTo(this.map)\n      \n      // Add data points to the map\n      this.addDataPoints()\n      \n      // Update the card footer with our data if it exists\n      if (cardFooter) {\n        cardFooter.innerHTML = `\n          <div class=\"row g-2 text-center\">\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-primary fw-bold\">${this.data.length}</div>\n              <small class=\"text-muted d-block text-nowrap\">Countries</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-success fw-bold\">${this.data.reduce((sum, country) => sum + country.visitors, 0).toLocaleString()}</div>\n              <small class=\"text-muted d-block text-nowrap\">Visitors</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-warning fw-bold text-truncate\">${this.data[0].name}</div>\n              <small class=\"text-muted d-block text-nowrap\">Top Country</small>\n            </div>\n            <div class=\"col-6 col-sm-3\">\n              <div class=\"text-info fw-bold\">${this.data[0].percentage}%</div>\n              <small class=\"text-muted d-block text-nowrap\">Top Share</small>\n            </div>\n          </div>\n        `\n      }\n      \n    } else {\n      // Fallback - create our own structure if not in a card\n      this.container.innerHTML = ''\n      this.container.style.height = `${this.options.height}px`\n      this.container.style.width = '100%'\n      this.container.style.position = 'relative'\n      this.container.classList.remove('d-flex', 'align-items-center', 'justify-content-center', 'bg-light')\n      \n      this.map = this.L.map(this.container, {\n        center: [20, 0],\n        zoom: 2,\n        scrollWheelZoom: true,\n        doubleClickZoom: true,\n        boxZoom: true,\n        keyboard: true,\n        zoomControl: true\n      })\n      \n      this.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18\n      }).addTo(this.map)\n      \n      this.addDataPoints()\n    }\n    \n    console.log('Leaflet map created successfully with', this.data.length, 'data points')\n    \n    // Force map to properly size itself after a short delay\n    setTimeout(() => {\n      if (this.map) {\n        this.map.invalidateSize()\n      }\n    }, 100)\n  }\n  \n  addDataPoints() {\n    // Clear existing markers\n    this.markers.forEach(marker => this.map.removeLayer(marker))\n    this.markers = []\n    \n    // Add markers for each country\n    this.data.forEach(country => {\n      // Calculate marker size based on visitor count\n      const maxVisitors = Math.max(...this.data.map(d => d.visitors))\n      const minSize = 8\n      const maxSize = 25\n      const size = minSize + (country.visitors / maxVisitors) * (maxSize - minSize)\n      \n      // Create custom icon with size based on visitor count\n      const customIcon = this.L.divIcon({\n        className: 'custom-marker',\n        html: `\n          <div style=\"\n            width: ${size}px;\n            height: ${size}px;\n            background: #0d6efd;\n            border: 2px solid white;\n            border-radius: 50%;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: ${Math.max(8, size * 0.4)}px;\n            font-weight: bold;\n          \">\n            <span class=\"fi fi-${country.code}\" style=\"font-size: ${Math.max(6, size * 0.6)}px;\"></span>\n          </div>\n        `,\n        iconSize: [size, size],\n        iconAnchor: [size/2, size/2]\n      })\n      \n      // Create marker\n      const marker = this.L.marker([country.lat, country.lng], {\n        icon: customIcon\n      }).addTo(this.map)\n      \n      // Add popup with country information  \n      marker.bindPopup(`\n        <div class=\"p-2\">\n          <div class=\"d-flex align-items-center mb-2\">\n            <span class=\"fi fi-${country.code} me-2\"></span>\n            <strong>${country.name}</strong>\n          </div>\n          <div><strong>${country.visitors.toLocaleString()}</strong> visitors</div>\n          <div class=\"text-muted\">${country.percentage}% of total traffic</div>\n        </div>\n      `)\n      \n      this.markers.push(marker)\n    })\n  }\n\n  setupInteractions() {\n    // Find the card that contains our map\n    const card = this.container.closest('.card')\n    if (!card) return\n    \n    // Add click handlers for mini country cards in the footer\n    const countryMinis = card.querySelectorAll('.country-mini')\n    countryMinis.forEach(mini => {\n      mini.addEventListener('click', (e) => {\n        const countryCode = mini.dataset.country\n        const country = this.data.find(c => c.code === countryCode)\n        if (country) {\n          // Pan and zoom to country\n          this.map.setView([country.lat, country.lng], 5, {\n            animate: true,\n            duration: 1\n          })\n          \n          // Find and open the marker popup\n          const marker = this.markers.find(m => \n            m.getLatLng().lat === country.lat && m.getLatLng().lng === country.lng\n          )\n          if (marker) {\n            marker.openPopup()\n          }\n          \n          // Highlight effect\n          mini.style.backgroundColor = 'rgba(13, 110, 253, 0.1)'\n          mini.style.borderRadius = '8px'\n          mini.style.transition = 'background-color 0.3s ease'\n          setTimeout(() => {\n            mini.style.backgroundColor = ''\n          }, 300)\n        }\n      })\n      \n      // Add hover effects\n      mini.addEventListener('mouseenter', () => {\n        mini.style.backgroundColor = 'rgba(0, 0, 0, 0.05)'\n        mini.style.borderRadius = '8px'\n        mini.style.transition = 'background-color 0.2s ease'\n      })\n      \n      mini.addEventListener('mouseleave', () => {\n        mini.style.backgroundColor = ''\n      })\n    })\n  }\n\n  // Update data and refresh map\n  updateData(newData) {\n    this.data = newData\n    if (this.map) {\n      // Recreate the entire component with new data\n      this.createMap()\n    }\n  }\n  \n  // Resize map when container changes\n  handleResize() {\n    if (this.map) {\n      this.map.invalidateSize()\n    }\n  }\n\n  showFallback() {\n    this.container.innerHTML = `\n      <div class=\"d-flex align-items-center justify-content-center h-100 bg-light rounded\">\n        <div class=\"text-center text-muted\">\n          <i class=\"fas fa-globe fa-3x mb-3 opacity-50\"></i>\n          <div class=\"h6\">World Map Unavailable</div>\n          <small>Unable to load map visualization</small>\n        </div>\n      </div>\n    `\n  }\n\n  // Destroy the component\n  destroy() {\n    if (this.map) {\n      this.map.remove()\n      this.map = null\n    }\n    this.markers = []\n    if (this.container) {\n      this.container.innerHTML = ''\n    }\n  }\n\n  // Get current data\n  getData() {\n    return this.data\n  }\n}","// Widget Manager Component - Dashboard widgets functionality\nimport { WorldMap } from './world-map.js'\n\nexport class WidgetManager {\n  constructor() {\n    this.widgets = new Map()\n    this.charts = new Map()\n    this.Chart = null\n    this.init()\n  }\n\n  async init() {\n    console.log('Widget Manager initialized')\n    \n    // Load Chart.js first\n    await this.loadChartJS()\n    \n    // Initialize components\n    this.initializeCounters()\n    await this.initializeWidgetCharts()\n    await this.initializeTrafficChart()\n    await this.initializeWorldMap()\n  }\n\n  async loadChartJS() {\n    try {\n      // Dynamically import Chart.js with all components\n      const chartModule = await import('chart.js')\n      this.Chart = chartModule.Chart\n      \n      // Register all Chart.js components\n      this.Chart.register(...chartModule.registerables)\n      \n      console.log('Chart.js loaded successfully')\n    } catch (error) {\n      console.error('Failed to load Chart.js:', error)\n      throw error\n    }\n  }\n\n  initializeCounters() {\n    // Initialize animated counters\n    const counters = document.querySelectorAll('.count, .card-title')\n    counters.forEach(counter => {\n      if (counter.textContent.match(/^\\d/)) {\n        this.animateCounter(counter)\n      }\n    })\n  }\n\n  animateCounter(element) {\n    const target = parseInt(element.textContent.replace(/,/g, ''))\n    const duration = 2000 // 2 seconds\n    const step = target / (duration / 16) // 60fps\n\n    let current = 0\n    const timer = setInterval(() => {\n      current += step\n      if (current >= target) {\n        current = target\n        clearInterval(timer)\n      }\n      element.textContent = Math.floor(current).toLocaleString()\n    }, 16)\n  }\n\n  async initializeWidgetCharts() {\n    if (!this.Chart) {\n      console.warn('Chart.js not loaded, skipping widget charts')\n      return\n    }\n\n    // Find all widget chart canvases\n    const chartElements = document.querySelectorAll('[id^=\"widgetChart\"]')\n    \n    console.log(`Found ${chartElements.length} widget chart canvases`)\n    \n    chartElements.forEach((canvas, index) => {\n      try {\n        this.createWidgetChart(canvas, index + 1)\n      } catch (error) {\n        console.error(`Failed to create widget chart ${index + 1}:`, error)\n      }\n    })\n  }\n\n  createWidgetChart(canvas, index) {\n    if (!canvas) {\n      console.warn(`Widget chart canvas ${index} not found`)\n      return\n    }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      console.warn(`Could not get context for widget chart ${index}`)\n      return\n    }\n\n    // Destroy existing chart if it exists\n    if (this.charts.has(canvas.id)) {\n      this.charts.get(canvas.id).destroy()\n    }\n    \n    // Generate chart data\n    const data = this.generateWidgetChartData(index)\n    \n    console.log(`Creating widget chart ${index} with data:`, data)\n    \n    const chart = new this.Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        scales: {\n          x: {\n            display: false,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            display: false,\n            grid: {\n              display: false\n            }\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hoverRadius: 0\n          },\n          line: {\n            borderWidth: 2,\n            tension: 0.4\n          }\n        },\n        animation: {\n          duration: 1000\n        }\n      }\n    })\n    \n    // Store chart reference\n    this.charts.set(canvas.id, chart)\n    \n    console.log(`Widget chart ${index} created successfully`)\n  }\n\n  generateWidgetChartData(index) {\n    // Different datasets for each widget\n    const datasets = [\n      { data: [65, 59, 84, 84, 51, 55, 40, 65, 59, 84] }, // Primary widget\n      { data: [28, 48, 40, 59, 86, 27, 90, 28, 48, 40] }, // Danger widget\n      { data: [45, 25, 16, 36, 67, 18, 76, 45, 25, 16] }, // Warning widget\n      { data: [12, 19, 27, 43, 52, 31, 48, 12, 19, 27] }  // Success widget\n    ]\n\n    const selectedData = datasets[index - 1] || datasets[0]\n    \n    return {\n      labels: Array(selectedData.data.length).fill(''),\n      datasets: [{\n        data: selectedData.data,\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        fill: false,\n        pointRadius: 0,\n        pointHoverRadius: 0\n      }]\n    }\n  }\n\n  async initializeTrafficChart() {\n    const trafficCanvas = document.getElementById('trafficChart')\n    if (!trafficCanvas || !this.Chart) return\n\n    try {\n      const ctx = trafficCanvas.getContext('2d')\n      \n      // Destroy existing chart if it exists\n      if (this.charts.has('trafficChart')) {\n        this.charts.get('trafficChart').destroy()\n      }\n      \n      const chart = new this.Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n          datasets: [{\n            label: 'Visits',\n            data: [65, 59, 84, 84, 51, 55, 40, 58, 72, 69],\n            borderColor: '#007bff',\n            backgroundColor: 'rgba(0, 123, 255, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }, {\n            label: 'Unique Visits',\n            data: [28, 48, 40, 59, 86, 27, 90, 45, 62, 58],\n            borderColor: '#28a745',\n            backgroundColor: 'rgba(40, 167, 69, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false\n            }\n          },\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            },\n            y: {\n              display: true,\n              grid: {\n                color: 'rgba(0,0,0,0.1)'\n              },\n              ticks: {\n                color: '#6c757d'\n              }\n            }\n          },\n          elements: {\n            line: {\n              borderWidth: 2\n            }\n          },\n          interaction: {\n            mode: 'nearest',\n            axis: 'x',\n            intersect: false\n          }\n        }\n      })\n      \n      this.charts.set('trafficChart', chart)\n      console.log('Traffic chart created successfully')\n    } catch (error) {\n      console.error('Failed to initialize traffic chart:', error)\n    }\n  }\n\n  // Handle window resize\n  handleResize() {\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.resize === 'function') {\n        chart.resize()\n      }\n    })\n  }\n\n  async initializeWorldMap() {\n    const worldMapContainer = document.getElementById('worldMap')\n    if (!worldMapContainer) {\n      console.warn('World map container not found')\n      return\n    }\n\n    try {\n      const worldMap = new WorldMap('worldMap', {\n        height: 320,\n        showCountryNames: true,\n        backgroundColor: 'white'\n      })\n      \n      this.widgets.set('worldMap', worldMap)\n      console.log('World map initialized successfully')\n    } catch (error) {\n      console.error('Failed to initialize world map:', error)\n      // Show fallback content\n      worldMapContainer.innerHTML = `\n        <div class=\"d-flex align-items-center justify-content-center h-100 bg-light rounded\">\n          <div class=\"text-center text-muted\">\n            <i class=\"fas fa-globe fa-3x mb-3 opacity-50\"></i>\n            <div class=\"h6\">Interactive World Map</div>\n            <small>Global visitor statistics</small>\n          </div>\n        </div>\n      `\n    }\n  }\n\n  destroy() {\n    // Destroy all charts\n    this.charts.forEach(chart => {\n      if (chart && typeof chart.destroy === 'function') {\n        chart.destroy()\n      }\n    })\n    \n    // Destroy all widgets\n    this.widgets.forEach(widget => {\n      if (widget && typeof widget.destroy === 'function') {\n        widget.destroy()\n      }\n    })\n    \n    this.charts.clear()\n    this.widgets.clear()\n  }\n}"],"file":"assets/widgets-BlBznRjZ.js"}