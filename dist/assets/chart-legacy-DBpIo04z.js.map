{"version":3,"file":"chart-legacy-DBpIo04z.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","exports","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":";;;;;;;AAMA,SAASA,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,yBACA,MAAMC,EAAMA,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,EAAIP,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,EAAIV,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMW,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAyBvC,SAASS,EAAU5B,GACjB,IAAIuB,EAzBUvB,IAAK2B,EAAG3B,EAAE6B,IAAMF,EAAG3B,EAAE8B,IAAMH,EAAG3B,EAAEmB,IAAMQ,EAAG3B,EAAEkB,GAyBjDa,CAAQ/B,GAAKyB,EAAKC,EAC1B,OAAO1B,EACH,IAAMuB,EAAEvB,EAAE6B,GAAKN,EAAEvB,EAAE8B,GAAKP,EAAEvB,EAAEmB,GAJpBa,EAACd,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GAIFc,CAAMhC,EAAEkB,EAAGK,QAC5CU,CACN,CAEA,MAAMC,EAAS,+GACf,SAASC,EAAShC,EAAGiC,EAAGlC,GACtB,MAAMgB,EAAIkB,EAAIhC,KAAKE,IAAIJ,EAAG,EAAIA,GACxBqB,EAAIA,CAACc,EAAGC,GAAKD,EAAIlC,EAAI,IAAM,KAAOD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAIgC,EAAI,EAAG,EAAIA,EAAG,OAChF,MAAO,CAACf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASgB,EAASpC,EAAGiC,EAAGpC,GACtB,MAAMuB,EAAIA,CAACc,EAAGC,GAAKD,EAAIlC,EAAI,IAAM,IAAMH,EAAIA,EAAIoC,EAAIhC,KAAKC,IAAID,KAAKE,IAAIgC,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASiB,EAASrC,EAAGsC,EAAGtB,GACtB,MAAMuB,EAAMP,EAAShC,EAAG,EAAG,IAC3B,IAAIwC,EAMJ,IALIF,EAAItB,EAAI,IACVwB,EAAI,GAAKF,EAAItB,GACbsB,GAAKE,EACLxB,GAAKwB,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAItB,EAClBuB,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CAUA,SAASE,EAAQ5C,GACf,MACM6B,EAAI7B,EAAE6B,EADE,IAERC,EAAI9B,EAAE8B,EAFE,IAGRX,EAAInB,EAAEmB,EAHE,IAIRd,EAAMD,KAAKC,IAAIwB,EAAGC,EAAGX,GACrBb,EAAMF,KAAKE,IAAIuB,EAAGC,EAAGX,GACrBjB,GAAKG,EAAMC,GAAO,EACxB,IAAIH,EAAGiC,EAAGf,EAOV,OANIhB,IAAQC,IACVe,EAAIhB,EAAMC,EACV8B,EAAIlC,EAAI,GAAMmB,GAAK,EAAIhB,EAAMC,GAAOe,GAAKhB,EAAMC,GAC/CH,EArBJ,SAAkB0B,EAAGC,EAAGX,EAAGE,EAAGhB,GAC5B,OAAIwB,IAAMxB,GACCyB,EAAIX,GAAKE,GAAMS,EAAIX,EAAI,EAAI,GAElCW,IAAMzB,GACAc,EAAIU,GAAKR,EAAI,GAEfQ,EAAIC,GAAKT,EAAI,CACvB,CAaQwB,CAAShB,EAAGC,EAAGX,EAAGE,EAAGhB,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOiC,GAAK,EAAGlC,EACzB,CACA,SAAS4C,EAAMvB,EAAGL,EAAGC,EAAGC,GACtB,OACE2B,MAAMC,QAAQ9B,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZ6B,IAAIzC,EACR,CACA,SAAS0C,EAAQ/C,EAAGiC,EAAGlC,GACrB,OAAO4C,EAAMX,EAAUhC,EAAGiC,EAAGlC,EAC/B,CAOA,SAASiD,EAAIhD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASiD,EAASC,GAChB,MAAMC,EAAIpB,EAAOqB,KAAKF,GACtB,IACIrD,EADAkB,EAAI,IAER,IAAKoC,EACH,OAEEA,EAAE,KAAOtD,IACXkB,EAAIoC,EAAE,GAAK/C,GAAK+C,EAAE,IAAM9C,GAAK8C,EAAE,KAEjC,MAAMnD,EAAIgD,GAAKG,EAAE,IACXE,GAAMF,EAAE,GAAK,IACbG,GAAMH,EAAE,GAAK,IAQnB,OANEtD,EADW,QAATsD,EAAE,GAtBR,SAAiBnD,EAAGsC,EAAGtB,GACrB,OAAO2B,EAAMN,EAAUrC,EAAGsC,EAAGtB,EAC/B,CAqBQuC,CAAQvD,EAAGqD,EAAIC,GACD,QAATH,EAAE,GArBf,SAAiBnD,EAAGiC,EAAGpC,GACrB,OAAO8C,EAAMP,EAAUpC,EAAGiC,EAAGpC,EAC/B,CAoBQ2D,CAAQxD,EAAGqD,EAAIC,GAEfP,EAAQ/C,EAAGqD,EAAIC,GAEd,CACL5B,EAAG7B,EAAE,GACL8B,EAAG9B,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,EAAGA,EAEP,CAsBA,MAAM+B,EAAM,CACXW,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHtD,EAAG,KACHuD,EAAG,KACHC,EAAG,KACHvD,EAAG,KACHC,EAAG,QACHC,EAAG,QACHsD,EAAG,KACHC,EAAG,WACHtD,EAAG,KACHuD,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH1D,EAAG,KACH2D,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAEEC,EAAU,CACfC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBR,IAAIC,EACJ,SAASC,EAAUlL,GACZiL,IACHA,EApBJ,WACE,MAAME,EAAW,CAAA,EACXC,EAAOC,OAAOD,KAAKxJ,GACnB0J,EAAQD,OAAOD,KAAKxL,GAC1B,IAAIN,EAAGiM,EAAGtM,EAAGuM,EAAIC,EACjB,IAAKnM,EAAI,EAAGA,EAAI8L,EAAKM,OAAQpM,IAAK,CAEhC,IADAkM,EAAKC,EAAKL,EAAK9L,GACViM,EAAI,EAAGA,EAAID,EAAMI,OAAQH,IAC5BtM,EAAIqM,EAAMC,GACVE,EAAKA,EAAGE,QAAQ1M,EAAGW,EAAIX,IAEzBA,EAAI2M,SAAShK,EAAQ4J,GAAK,IAC1BL,EAASM,GAAM,CAACxM,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOkM,CACT,CAKYU,GACRZ,EAAMa,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMjO,EAAIoN,EAAMjL,EAAI+L,eACpB,OAAOlO,GAAK,CACVW,EAAGX,EAAE,GACLY,EAAGZ,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAE6N,OAAe7N,EAAE,GAAK,IAE/B,CAEA,MAAMmO,EAAS,uGAiCTC,EAAKtP,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBI,KAAKmP,IAAIvP,EAAG,EAAM,KAAe,KACxEwP,EAAOxP,GAAKA,GAAK,OAAUA,EAAI,MAAQI,KAAKmP,KAAKvP,EAAI,MAAS,MAAO,KAa3E,SAASyP,EAAOzP,EAAG2C,EAAG+M,GACpB,GAAI1P,EAAG,CACL,IAAI2P,EAAM/M,EAAQ5C,GAClB2P,EAAIhN,GAAKvC,KAAKC,IAAI,EAAGD,KAAKE,IAAIqP,EAAIhN,GAAKgN,EAAIhN,GAAK+M,EAAa,IAAN/M,EAAU,IAAM,IACvEgN,EAAMzM,EAAQyM,GACd3P,EAAE6B,EAAI8N,EAAI,GACV3P,EAAE8B,EAAI6N,EAAI,GACV3P,EAAEmB,EAAIwO,EAAI,EACZ,CACF,CACA,SAASC,EAAM5P,EAAG6P,GAChB,OAAO7P,EAAI0O,OAAOoB,OAAOD,GAAS,CAAA,EAAI7P,GAAKA,CAC7C,CACA,SAAS+P,EAAWC,GAClB,IAAIhQ,EAAI,CAAC6B,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KAY9B,OAXI6B,MAAMC,QAAQgN,GACZA,EAAMjB,QAAU,IAClB/O,EAAI,CAAC6B,EAAGmO,EAAM,GAAIlO,EAAGkO,EAAM,GAAI7O,EAAG6O,EAAM,GAAI9O,EAAG,KAC3C8O,EAAMjB,OAAS,IACjB/O,EAAEkB,EAAIV,EAAIwP,EAAM,OAIpBhQ,EAAI4P,EAAMI,EAAO,CAACnO,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KACrCA,EAAIV,EAAIR,EAAEkB,GAEPlB,CACT,CACA,SAASiQ,EAAc5M,GACrB,MAAsB,MAAlBA,EAAI6M,OAAO,GA3EjB,SAAkB7M,GAChB,MAAMC,EAAI+L,EAAO9L,KAAKF,GACtB,IACIxB,EAAGC,EAAGX,EADND,EAAI,IAER,GAAKoC,EAAL,CAGA,GAAIA,EAAE,KAAOzB,EAAG,CACd,MAAM7B,GAAKsD,EAAE,GACbpC,EAAIoC,EAAE,GAAK/C,EAAIP,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANA6B,GAAKyB,EAAE,GACPxB,GAAKwB,EAAE,GACPnC,GAAKmC,EAAE,GACPzB,EAAI,KAAOyB,EAAE,GAAK/C,EAAIsB,GAAK5B,EAAI4B,EAAG,EAAG,MACrCC,EAAI,KAAOwB,EAAE,GAAK/C,EAAIuB,GAAK7B,EAAI6B,EAAG,EAAG,MACrCX,EAAI,KAAOmC,EAAE,GAAK/C,EAAIY,GAAKlB,EAAIkB,EAAG,EAAG,MAC9B,CACLU,EAAGA,EACHC,EAAGA,EACHX,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CAqDWiP,CAAS9M,GAEXD,EAASC,EAClB,CACA,MAAM+M,EACJC,WAAAA,CAAYL,GACV,GAAIA,aAAiBI,EACnB,OAAOJ,EAET,MAAMM,SAAcN,EACpB,IAAIhQ,EA7bR,IAAkBqD,EAEZkN,EADAC,EA6bW,WAATF,EACFtQ,EAAI+P,EAAWC,GACG,WAATM,IA/bTE,GADYnN,EAicC2M,GAhcHjB,OAEC,MAAX1L,EAAI,KACM,IAARmN,GAAqB,IAARA,EACfD,EAAM,CACJ1O,EAAG,IAAsB,GAAhBlB,EAAM0C,EAAI,IACnBvB,EAAG,IAAsB,GAAhBnB,EAAM0C,EAAI,IACnBlC,EAAG,IAAsB,GAAhBR,EAAM0C,EAAI,IACnBnC,EAAW,IAARsP,EAA4B,GAAhB7P,EAAM0C,EAAI,IAAW,KAErB,IAARmN,GAAqB,IAARA,IACtBD,EAAM,CACJ1O,EAAGlB,EAAM0C,EAAI,KAAO,EAAI1C,EAAM0C,EAAI,IAClCvB,EAAGnB,EAAM0C,EAAI,KAAO,EAAI1C,EAAM0C,EAAI,IAClClC,EAAGR,EAAM0C,EAAI,KAAO,EAAI1C,EAAM0C,EAAI,IAClCnC,EAAW,IAARsP,EAAa7P,EAAM0C,EAAI,KAAO,EAAI1C,EAAM0C,EAAI,IAAO,OAibxDrD,EA7aGuQ,GA6aoBhC,EAAUyB,IAAUC,EAAcD,IAE3DS,KAAKC,KAAO1Q,EACZyQ,KAAKE,SAAW3Q,CAClB,CACA,SAAI4Q,GACF,OAAOH,KAAKE,MACd,CACA,OAAIjO,GACF,IAAI1C,EAAI4P,EAAMa,KAAKC,MAInB,OAHI1Q,IACFA,EAAEkB,EAAIT,EAAIT,EAAEkB,IAEPlB,CACT,CACA,OAAI0C,CAAImO,GACNJ,KAAKC,KAAOX,EAAWc,EACzB,CACAC,SAAAA,GACE,OAAOL,KAAKE,QArFG3Q,EAqFgByQ,KAAKC,QAnFpC1Q,EAAEkB,EAAI,IACF,QAAQlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,MAAMV,EAAIT,EAAEkB,MACtC,OAAOlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,WAiFec,EArFhD,IAAmBjC,CAsFjB,CACA4B,SAAAA,GACE,OAAO6O,KAAKE,OAAS/O,EAAU6O,KAAKC,WAAQzO,CAC9C,CACA8O,SAAAA,GACE,OAAON,KAAKE,OApVhB,SAAmB3Q,GACjB,IAAKA,EACH,OAEF,MAAMkB,EAAI0B,EAAQ5C,GACZG,EAAIe,EAAE,GACNkB,EAAI1B,EAAIQ,EAAE,IACVhB,EAAIQ,EAAIQ,EAAE,IAChB,OAAOlB,EAAEkB,EAAI,IACT,QAAQf,MAAMiC,OAAOlC,OAAOO,EAAIT,EAAEkB,MAClC,OAAOf,MAAMiC,OAAOlC,KAC1B,CAyUyB6Q,CAAUN,KAAKC,WAAQzO,CAC9C,CACA+O,GAAAA,CAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKV,KAAK/N,IACV0O,EAAKH,EAAMvO,IACjB,IAAI2O,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1BzO,EAAI,EAAI6O,EAAI,EACZpQ,EAAIiQ,EAAGjQ,EAAIkQ,EAAGlQ,EACdqQ,IAAO9O,EAAIvB,KAAM,EAAKuB,GAAKA,EAAIvB,IAAM,EAAIuB,EAAIvB,IAAM,GAAK,EAC9DmQ,EAAK,EAAIE,EACTJ,EAAGtP,EAAI,IAAO0P,EAAKJ,EAAGtP,EAAIwP,EAAKD,EAAGvP,EAAI,GACtCsP,EAAGrP,EAAI,IAAOyP,EAAKJ,EAAGrP,EAAIuP,EAAKD,EAAGtP,EAAI,GACtCqP,EAAGhQ,EAAI,IAAOoQ,EAAKJ,EAAGhQ,EAAIkQ,EAAKD,EAAGjQ,EAAI,GACtCgQ,EAAGjQ,EAAIoQ,EAAIH,EAAGjQ,GAAK,EAAIoQ,GAAKF,EAAGlQ,EAC/BuP,KAAK/N,IAAMyO,CACb,CACA,OAAOV,IACT,CACAe,WAAAA,CAAYP,EAAOQ,GAIjB,OAHIR,IACFR,KAAKC,KAvGX,SAAqBgB,EAAMC,EAAMF,GAC/B,MAAM5P,EAAI2N,EAAK/O,EAAIiR,EAAK7P,IAClBC,EAAI0N,EAAK/O,EAAIiR,EAAK5P,IAClBX,EAAIqO,EAAK/O,EAAIiR,EAAKvQ,IACxB,MAAO,CACLU,EAAGrB,EAAI8O,EAAGzN,EAAI4P,GAAKjC,EAAK/O,EAAIkR,EAAK9P,IAAMA,KACvCC,EAAGtB,EAAI8O,EAAGxN,EAAI2P,GAAKjC,EAAK/O,EAAIkR,EAAK7P,IAAMA,KACvCX,EAAGX,EAAI8O,EAAGnO,EAAIsQ,GAAKjC,EAAK/O,EAAIkR,EAAKxQ,IAAMA,KACvCD,EAAGwQ,EAAKxQ,EAAIuQ,GAAKE,EAAKzQ,EAAIwQ,EAAKxQ,GAEnC,CA6FkBsQ,CAAYf,KAAKC,KAAMO,EAAMP,KAAMe,IAE1ChB,IACT,CACAb,KAAAA,GACE,OAAO,IAAIQ,EAAMK,KAAK/N,IACxB,CACAV,KAAAA,CAAMd,GAEJ,OADAuP,KAAKC,KAAKxP,EAAIV,EAAIU,GACXuP,IACT,CACAmB,OAAAA,CAAQlC,GAGN,OAFYe,KAAKC,KACbxP,GAAK,EAAIwO,EACNe,IACT,CACAoB,SAAAA,GACE,MAAMnP,EAAM+N,KAAKC,KACXoB,EAAM/R,EAAc,GAAR2C,EAAIb,EAAkB,IAARa,EAAIZ,EAAmB,IAARY,EAAIvB,GAEnD,OADAuB,EAAIb,EAAIa,EAAIZ,EAAIY,EAAIvB,EAAI2Q,EACjBrB,IACT,CACAsB,OAAAA,CAAQrC,GAGN,OAFYe,KAAKC,KACbxP,GAAK,EAAIwO,EACNe,IACT,CACAuB,MAAAA,GACE,MAAMhS,EAAIyQ,KAAKC,KAIf,OAHA1Q,EAAE6B,EAAI,IAAM7B,EAAE6B,EACd7B,EAAE8B,EAAI,IAAM9B,EAAE8B,EACd9B,EAAEmB,EAAI,IAAMnB,EAAEmB,EACPsP,IACT,CACAwB,OAAAA,CAAQvC,GAEN,OADAD,EAAOgB,KAAKC,KAAM,EAAGhB,GACde,IACT,CACAyB,MAAAA,CAAOxC,GAEL,OADAD,EAAOgB,KAAKC,KAAM,GAAIhB,GACfe,IACT,CACA0B,QAAAA,CAASzC,GAEP,OADAD,EAAOgB,KAAKC,KAAM,EAAGhB,GACde,IACT,CACA2B,UAAAA,CAAW1C,GAET,OADAD,EAAOgB,KAAKC,KAAM,GAAIhB,GACfe,IACT,CACA4B,MAAAA,CAAOC,GAEL,OAtaJ,SAAgBtS,EAAGsS,GACjB,IAAInS,EAAIyC,EAAQ5C,GAChBG,EAAE,GAAKgD,EAAIhD,EAAE,GAAKmS,GAClBnS,EAAI+C,EAAQ/C,GACZH,EAAE6B,EAAI1B,EAAE,GACRH,EAAE8B,EAAI3B,EAAE,GACRH,EAAEmB,EAAIhB,EAAE,EACV,CA8ZIkS,CAAO5B,KAAKC,KAAM4B,GACX7B,IACT;;;;;;SCzjBE,SAAS8B,IACb,CAGI,MAAMC,EAAM,MACZ,IAAIC,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAASC,EAAcC,GACvB,OAAOA,OACX,CAKI,SAAS3P,EAAQ2P,GACjB,GAAI5P,MAAMC,SAAWD,MAAMC,QAAQ2P,GAC/B,OAAO,EAEX,MAAMrC,EAAO5B,OAAOkE,UAAUC,SAASC,KAAKH,GAC5C,MAAyB,YAArBrC,EAAKyC,MAAM,EAAG,IAAuC,WAAnBzC,EAAKyC,SAI/C,CAKI,SAASC,EAASL,GAClB,OAAiB,OAAVA,GAA4D,oBAA1CjE,OAAOkE,UAAUC,SAASC,KAAKH,EAC5D,CAII,SAASM,EAAeN,GACxB,OAAyB,iBAAVA,GAAsBA,aAAiBO,SAAWC,UAAUR,EAC/E,CAKI,SAASS,EAAgBT,EAAOU,GAChC,OAAOJ,EAAeN,GAASA,EAAQU,CAC3C,CAKI,SAASC,EAAeX,EAAOU,GAC/B,YAAwB,IAAVV,EAAwBU,EAAeV,CACzD,CACA,MACMY,EAAcA,CAACZ,EAAOa,IAA6B,iBAAVb,GAAsBA,EAAMc,SAAS,KAAOC,WAAWf,GAAS,IAAMa,GAAab,EAO9H,SAASgB,EAASC,EAAIC,EAAMC,GAC5B,GAAIF,GAAyB,mBAAZA,EAAGd,KAChB,OAAOc,EAAGG,MAAMD,EAASD,EAEjC,CACA,SAASG,EAAKC,EAAUL,EAAIE,EAASI,GACjC,IAAIvR,EAAG6N,EAAK/B,EACZ,GAAIzL,EAAQiR,GAOJ,IANJzD,EAAMyD,EAASlF,OAMPpM,EAAI,EAAGA,EAAI6N,EAAK7N,IAChBiR,EAAGd,KAAKgB,EAASG,EAAStR,GAAIA,QAGnC,GAAIqQ,EAASiB,GAGhB,IAFAxF,EAAOC,OAAOD,KAAKwF,GACnBzD,EAAM/B,EAAKM,OACPpM,EAAI,EAAGA,EAAI6N,EAAK7N,IAChBiR,EAAGd,KAAKgB,EAASG,EAASxF,EAAK9L,IAAK8L,EAAK9L,GAGrD,CAMI,SAASwR,EAAeC,EAAIC,GAC5B,IAAI1R,EAAG2R,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGrF,SAAWsF,EAAGtF,OAC/B,SAEJ,IAAIpM,EAAI,EAAG2R,EAAOF,EAAGrF,OAAQpM,EAAI2R,IAAQ3R,EAGrC,GAFA4R,EAAKH,EAAGzR,GACR6R,EAAKH,EAAG1R,GACJ4R,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACvD,OAAO,EAGf,OAAO,CACX,CAII,SAAS9E,EAAM+E,GACf,GAAI3R,EAAQ2R,GACR,OAAOA,EAAO1R,IAAI2M,GAEtB,GAAIoD,EAAS2B,GAAS,CAClB,MAAMC,EAASlG,OAAOmG,OAAO,MACvBpG,EAAOC,OAAOD,KAAKkG,GACnBG,EAAOrG,EAAKM,OAClB,IAAIzM,EAAI,EACR,KAAMA,EAAIwS,IAAQxS,EACdsS,EAAOnG,EAAKnM,IAAMsN,EAAM+E,EAAOlG,EAAKnM,KAExC,OAAOsS,CACX,CACA,OAAOD,CACX,CACA,SAASI,EAAWC,GAChB,OAImB,IAJZ,CACH,YACA,YACA,eACFC,QAAQD,EACd,CAKI,SAASE,EAAQF,EAAKJ,EAAQD,EAAQQ,GACtC,IAAKJ,EAAWC,GACZ,OAEJ,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAChBhC,EAASoC,IAASpC,EAASqC,GAE3BC,EAAMF,EAAMC,EAAMF,GAElBP,EAAOI,GAAOpF,EAAMyF,EAE5B,CACA,SAASC,EAAMV,EAAQD,EAAQQ,GAC3B,MAAMI,EAAUvS,EAAQ2R,GAAUA,EAAS,CACvCA,GAEEL,EAAOiB,EAAQxG,OACrB,IAAKiE,EAAS4B,GACV,OAAOA,EAGX,MAAMY,GADNL,EAAUA,GAAW,CAAA,GACEK,QAAUN,EACjC,IAAIO,EACJ,IAAI,IAAI9S,EAAI,EAAGA,EAAI2R,IAAQ3R,EAAE,CAEzB,GADA8S,EAAUF,EAAQ5S,IACbqQ,EAASyC,GACV,SAEJ,MAAMhH,EAAOC,OAAOD,KAAKgH,GACzB,IAAI,IAAInT,EAAI,EAAGwS,EAAOrG,EAAKM,OAAQzM,EAAIwS,IAAQxS,EAC3CkT,EAAO/G,EAAKnM,GAAIsS,EAAQa,EAASN,EAEzC,CACA,OAAOP,CACX,CACA,SAASc,EAAQd,EAAQD,GAErB,OAAOW,EAAMV,EAAQD,EAAQ,CACzBa,OAAQG,GAEhB,CAII,SAASA,EAAUX,EAAKJ,EAAQD,GAChC,IAAKI,EAAWC,GACZ,OAEJ,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAChBhC,EAASoC,IAASpC,EAASqC,GAC3BK,EAAQN,EAAMC,GACN3G,OAAOkE,UAAUgD,eAAe9C,KAAK8B,EAAQI,KACrDJ,EAAOI,GAAOpF,EAAMyF,GAE5B,CASA,MAAMQ,EAAe,CAEjB,GAAK7V,GAAIA,EAET4D,EAAIkS,GAAIA,EAAElS,EACVmS,EAAID,GAAIA,EAAEC,GA+Bd,SAASC,EAAiBnF,EAAKmE,GAC3B,MAAMiB,EAAWJ,EAAab,KAASa,EAAab,GAbxD,SAAyBA,GACrB,MAAMvG,EAhBN,SAAmBuG,GACnB,MAAMkB,EAAQlB,EAAImB,MAAM,KAClB1H,EAAO,GACb,IAAIkB,EAAM,GACV,IAAK,MAAMyG,KAAQF,EACfvG,GAAOyG,EACHzG,EAAI8D,SAAS,MACb9D,EAAMA,EAAIoD,MAAM,GAAG,GAAM,KAEzBtE,EAAK4H,KAAK1G,GACVA,EAAM,IAGd,OAAOlB,CACX,CAEiB6H,CAAUtB,GACvB,OAAQnE,IACJ,IAAK,MAAMvO,KAAKmM,EAAK,CACjB,GAAU,KAANnM,EACA,MAEJuO,EAAMA,GAAOA,EAAIvO,EACrB,CACA,OAAOuO,EAEf,CAE+D0F,CAAgBvB,IAC3E,OAAOiB,EAASpF,EACpB,CAGI,SAAS2F,GAAYnT,GACrB,OAAOA,EAAI6M,OAAO,GAAGuG,cAAgBpT,EAAI0P,MAAM,EACnD,CACA,MAAM2D,GAAW/D,QAAyB,IAAVA,EAC1BgE,GAAchE,GAAyB,mBAAVA,EAE7BiE,GAAYA,CAAC1V,EAAGC,KAClB,GAAID,EAAE2V,OAAS1V,EAAE0V,KACb,OAAO,EAEX,IAAK,MAAMC,KAAQ5V,EACf,IAAKC,EAAE4V,IAAID,GACP,OAAO,EAGf,OAAO,GAYDE,GAAK5W,KAAK4W,GACdC,GAAM,EAAID,GACVE,GAAQD,GAAMD,GACdG,GAAWjE,OAAOkE,kBAClBC,GAAcL,GAAK,IACnBM,GAAUN,GAAK,EACfO,GAAaP,GAAK,EAClBQ,GAAqB,EAALR,GAAS,EACzBS,GAAQrX,KAAKqX,MACbC,GAAOtX,KAAKsX,KAClB,SAASC,GAAa/T,EAAGmS,EAAG6B,GACxB,OAAOxX,KAAKyX,IAAIjU,EAAImS,GAAK6B,CAC7B,CAGI,SAASE,GAAQC,GACjB,MAAMC,EAAe5X,KAAKL,MAAMgY,GAChCA,EAAQJ,GAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAME,EAAY7X,KAAKmP,IAAI,GAAInP,KAAK8X,MAAMT,GAAMM,KAC1CI,EAAWJ,EAAQE,EAEzB,OADqBE,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DF,CAC1B,CAyBA,SAASG,GAAS/V,GACd,OAJA,SAAwBA,GACxB,MAAoB,iBAANA,GAA+B,iBAANA,GAAwB,OAANA,KAAgBgW,OAAOC,eAAejW,GAAK,aAAcA,GAAK,YAAaA,EACxI,CAEYkW,CAAelW,KAAOmW,MAAM9E,WAAWrR,KAAO8Q,SAAS9Q,EACnE,CAOI,SAASoW,GAAmBC,EAAO9D,EAAQ+D,GAC3C,IAAIhW,EAAG2R,EAAM3B,EACb,IAAIhQ,EAAI,EAAG2R,EAAOoE,EAAM3J,OAAQpM,EAAI2R,EAAM3R,IACtCgQ,EAAQ+F,EAAM/V,GAAGgW,GACZH,MAAM7F,KACPiC,EAAOtU,IAAMF,KAAKE,IAAIsU,EAAOtU,IAAKqS,GAClCiC,EAAOvU,IAAMD,KAAKC,IAAIuU,EAAOvU,IAAKsS,GAG9C,CACA,SAASiG,GAAUC,GACf,OAAOA,GAAW7B,GAAK,IAC3B,CACA,SAAS8B,GAAUC,GACf,OAAOA,GAAW,IAAM/B,GAC5B,CAOI,SAASgC,GAAepV,GACxB,IAAKqP,EAAerP,GAChB,OAEJ,IAAItC,EAAI,EACJgQ,EAAI,EACR,KAAMlR,KAAKL,MAAM6D,EAAItC,GAAKA,IAAMsC,GAC5BtC,GAAK,GACLgQ,IAEJ,OAAOA,CACX,CAEA,SAAS2H,GAAkBC,EAAaC,GACpC,MAAMC,EAAsBD,EAAWvV,EAAIsV,EAAYtV,EACjDyV,EAAsBF,EAAWpD,EAAImD,EAAYnD,EACjDuD,EAA2BlZ,KAAKmZ,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIG,EAAQpZ,KAAKqZ,MAAMJ,EAAqBD,GAI5C,OAHII,GAAQ,GAAOxC,KACfwC,GAASvC,IAEN,CACHuC,QACAE,SAAUJ,EAElB,CACA,SAASK,GAAsBC,EAAKC,GAChC,OAAOzZ,KAAKmZ,KAAKnZ,KAAKmP,IAAIsK,EAAIjW,EAAIgW,EAAIhW,EAAG,GAAKxD,KAAKmP,IAAIsK,EAAI9D,EAAI6D,EAAI7D,EAAG,GAC1E,CAII,SAAS+D,GAAW5Y,EAAGC,GACvB,OAAQD,EAAIC,EAAI+V,IAASD,GAAMD,EACnC,CAII,SAAS+C,GAAgB7Y,GACzB,OAAQA,EAAI+V,GAAMA,IAAOA,EAC7B,CAGI,SAAS+C,GAAcR,EAAOS,EAAOC,EAAKC,GAC1C,MAAMjZ,EAAI6Y,GAAgBP,GACpBpX,EAAI2X,GAAgBE,GACpB3Y,EAAIyY,GAAgBG,GACpBE,EAAeL,GAAgB3X,EAAIlB,GACnCmZ,EAAaN,GAAgBzY,EAAIJ,GACjCoZ,EAAeP,GAAgB7Y,EAAIkB,GACnCmY,EAAaR,GAAgB7Y,EAAII,GACvC,OAAOJ,IAAMkB,GAAKlB,IAAMI,GAAK6Y,GAAyB/X,IAAMd,GAAK8Y,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,GAAY7H,EAAOrS,EAAKD,GACjC,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKsS,GACvC,CAaI,SAAS8H,GAAW9H,EAAOsH,EAAOC,EAAKtC,EAAU,MACjD,OAAOjF,GAASvS,KAAKE,IAAI2Z,EAAOC,GAAOtC,GAAWjF,GAASvS,KAAKC,IAAI4Z,EAAOC,GAAOtC,CACtF,CAEA,SAAS8C,GAAQC,EAAOhI,EAAOiI,GAC3BA,EAAMA,GAAG,CAAMlG,GAAQiG,EAAMjG,GAAS/B,GACtC,IAEIkI,EAFAC,EAAKH,EAAM5L,OAAS,EACpBgM,EAAK,EAET,KAAMD,EAAKC,EAAK,GACZF,EAAME,EAAKD,GAAM,EACbF,EAAIC,GACJE,EAAKF,EAELC,EAAKD,EAGb,MAAO,CACHE,KACAD,KAER,CAQI,MAAME,GAAeA,CAACL,EAAO3F,EAAKrC,EAAOsI,IAAOP,GAAQC,EAAOhI,EAAOsI,EAAQvG,IAC1E,MAAMwG,EAAKP,EAAMjG,GAAOM,GACxB,OAAOkG,EAAKvI,GAASuI,IAAOvI,GAASgI,EAAMjG,EAAQ,GAAGM,KAASrC,GAC9D+B,GAAQiG,EAAMjG,GAAOM,GAAOrC,GAO3BwI,GAAgBA,CAACR,EAAO3F,EAAKrC,IAAQ+H,GAAQC,EAAOhI,EAAQ+B,GAAQiG,EAAMjG,GAAOM,IAAQrC,GAkB7FyI,GAAc,CAChB,OACA,MACA,QACA,SACA,WAkCJ,SAASC,GAAoB3C,EAAO4C,GAChC,MAAMC,EAAO7C,EAAM8C,SACnB,IAAKD,EACD,OAEJ,MAAME,EAAYF,EAAKE,UACjB/G,EAAQ+G,EAAUxG,QAAQqG,IAClB,IAAV5G,GACA+G,EAAUC,OAAOhH,EAAO,GAExB+G,EAAU1M,OAAS,IAGvBqM,GAAYO,QAAS3G,WACV0D,EAAM1D,YAEV0D,EAAM8C,SACjB,CAGI,SAASI,GAAaC,GACtB,MAAMC,EAAM,IAAIC,IAAIF,GACpB,OAAIC,EAAIjF,OAASgF,EAAM9M,OACZ8M,EAEJ9Y,MAAMyM,KAAKsM,EACtB,CAOG,MAAME,GACiB,oBAAXC,gBACStI,GACZ,OAAOA,GACX,EAEGsI,OAAOC,sBAKd,SAASC,GAAUvI,EAAIE,GACvB,IAAIsI,EAAY,GACZC,GAAU,EACd,OAAO,YAAYxI,GAEfuI,EAAYvI,EACPwI,IACDA,GAAU,EACVL,GAAiBlJ,KAAKmJ,OAAQ,KAC1BI,GAAU,EACVzI,EAAGG,MAAMD,EAASsI,KAG9B,CACJ,CAkBI,MAAME,GAAsBC,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAIvFC,GAAiBA,CAACD,EAAOtC,EAAOC,IAAgB,UAAVqC,EAAoBtC,EAAkB,QAAVsC,EAAkBrC,GAAOD,EAAQC,GAAO,EAWhH,SAASuC,GAAiCC,EAAMC,EAAQC,GACxD,MAAMC,EAAaF,EAAO5N,OAC1B,IAAIkL,EAAQ,EACR6C,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CACd,MAAMC,OAAEA,EAAMC,OAAGA,EAAMC,QAAGA,GAAaR,EACjCS,EAAWT,EAAKU,SAAUV,EAAKU,QAAQjI,QAAUuH,EAAKU,QAAQjI,QAAQgI,SAAkB,KACxFE,EAAOL,EAAOK,MACd/c,IAAEA,EAAGD,IAAGA,EAAGid,WAAGA,EAAUC,WAAGA,GAAgBP,EAAOQ,gBACxD,GAAIF,EAAY,CAIZ,GAHArD,EAAQ7Z,KAAKE,IACb0a,GAAakC,EAASG,EAAM/c,GAAKya,GACjC6B,EAAqBC,EAAa7B,GAAa2B,EAAQU,EAAML,EAAOS,iBAAiBnd,IAAMya,IACvFoC,EAAU,CACV,MAAMO,EAAsBR,EAAQnK,MAAM,EAAGkH,EAAQ,GAAG/F,UAAUyJ,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACjHpD,GAAS7Z,KAAKC,IAAI,EAAGqd,EACzB,CACAzD,EAAQO,GAAYP,EAAO,EAAG4C,EAAa,EAC/C,CACA,GAAIU,EAAY,CACZ,IAAIrD,EAAM9Z,KAAKC,IACf2a,GAAakC,EAASF,EAAOK,KAAMhd,GAAK,GAAMya,GAAK,EACnD8B,EAAqB,EAAI5B,GAAa2B,EAAQU,EAAML,EAAOS,iBAAiBpd,IAAM,GAAMya,GAAK,GAC7F,GAAIqC,EAAU,CACV,MAAMU,EAAsBX,EAAQnK,MAAMmH,EAAM,GAAGyD,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QAClGnD,GAAO9Z,KAAKC,IAAI,EAAGwd,EACvB,CACAf,EAAQtC,GAAYN,EAAKD,EAAO4C,GAAc5C,CAClD,MACI6C,EAAQD,EAAa5C,CAE7B,CACA,MAAO,CACHA,QACA6C,QAER,CAMI,SAASgB,GAAoBpB,GAC7B,MAAMqB,OAAEA,EAAMC,OAAGA,EAAMC,aAAGA,GAAkBvB,EACtCwB,EAAY,CACdC,KAAMJ,EAAOzd,IACb8d,KAAML,EAAO1d,IACbge,KAAML,EAAO1d,IACbge,KAAMN,EAAO3d,KAEjB,IAAK4d,EAED,OADAvB,EAAKuB,aAAeC,GACb,EAEX,MAAMK,EAAUN,EAAaE,OAASJ,EAAOzd,KAAO2d,EAAaG,OAASL,EAAO1d,KAAO4d,EAAaI,OAASL,EAAO1d,KAAO2d,EAAaK,OAASN,EAAO3d,IAEzJ,OADAqO,OAAOoB,OAAOmO,EAAcC,GACrBK,CACX,CAEA,MAAMC,GAAU/M,GAAU,IAANA,GAAiB,IAANA,EACzBgN,GAAYA,CAAChN,EAAGrP,EAAGkP,KAAMlR,KAAKmP,IAAI,EAAG,IAAMkC,GAAK,IAAMrR,KAAKse,KAAKjN,EAAIrP,GAAK6U,GAAM3F,GAC/EqN,GAAaA,CAAClN,EAAGrP,EAAGkP,IAAIlR,KAAKmP,IAAI,GAAG,GAAMkC,GAAKrR,KAAKse,KAAKjN,EAAIrP,GAAK6U,GAAM3F,GAAK,EAKzEsN,GAAU,CAChBC,OAASpN,GAAIA,EACbqN,WAAarN,GAAIA,EAAIA,EACrBsN,YAActN,IAAKA,GAAKA,EAAI,GAC5BuN,cAAgBvN,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAI,MAAUA,GAAKA,EAAI,GAAK,GAC3EwN,YAAcxN,GAAIA,EAAIA,EAAIA,EAC1ByN,aAAezN,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtC0N,eAAiB1N,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClF2N,YAAc3N,GAAIA,EAAIA,EAAIA,EAAIA,EAC9B4N,aAAe5N,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5C6N,eAAiB7N,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAI,KAASA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F8N,YAAc9N,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClC+N,aAAe/N,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CgO,eAAiBhO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClGiO,WAAajO,GAA6B,EAAxBrR,KAAKuf,IAAIlO,EAAI6F,IAC/BsI,YAAcnO,GAAIrR,KAAKse,IAAIjN,EAAI6F,IAC/BuI,cAAgBpO,QAAYrR,KAAKuf,IAAI3I,GAAKvF,GAAK,GAC/CqO,WAAarO,GAAU,IAANA,EAAU,EAAIrR,KAAKmP,IAAI,EAAG,IAAMkC,EAAI,IACrDsO,YAActO,GAAU,IAANA,EAAU,EAA4B,EAAvBrR,KAAKmP,IAAI,MAASkC,GACnDuO,cAAgBvO,GAAI+M,GAAO/M,GAAKA,EAAIA,EAAI,GAAM,GAAMrR,KAAKmP,IAAI,EAAG,IAAU,EAAJkC,EAAQ,IAAM,IAAyC,EAAjCrR,KAAKmP,IAAI,GAAG,IAAW,EAAJkC,EAAQ,KACvHwO,WAAaxO,GAAIA,GAAK,EAAIA,IAAMrR,KAAKmZ,KAAK,EAAI9H,EAAIA,GAAK,GACvDyO,YAAczO,GAAIrR,KAAKmZ,KAAK,GAAK9H,GAAK,GAAKA,GAC3C0O,cAAgB1O,IAAKA,GAAK,IAAO,GAAI,IAAQrR,KAAKmZ,KAAK,EAAI9H,EAAIA,GAAK,GAAK,IAAOrR,KAAKmZ,KAAK,GAAK9H,GAAK,GAAKA,GAAK,GAC9G2O,cAAgB3O,GAAI+M,GAAO/M,GAAKA,EAAIgN,GAAUhN,EAAG,KAAO,IACxD4O,eAAiB5O,GAAI+M,GAAO/M,GAAKA,EAAIkN,GAAWlN,EAAG,KAAO,IAC1D6O,gBAAAA,CAAkB7O,GACd,MAAMrP,EAAI,MAEV,OAAOoc,GAAO/M,GAAKA,EAAIA,EAAI,GAAM,GAAMgN,GAAc,EAAJhN,EAAOrP,EAD9C,KACsD,GAAM,GAAMuc,GAAe,EAAJlN,EAAQ,EAAGrP,EADxF,IAEd,EACAme,UAAAA,CAAY9O,GACR,MAAMrP,EAAI,QACV,OAAOqP,EAAIA,IAAMrP,EAAI,GAAKqP,EAAIrP,EAClC,EACAoe,WAAAA,CAAa/O,GACT,MAAMrP,EAAI,QACV,OAAQqP,GAAK,GAAKA,IAAMrP,EAAI,GAAKqP,EAAIrP,GAAK,CAC9C,EACAqe,aAAAA,CAAehP,GACX,IAAIrP,EAAI,QACR,OAAKqP,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAdrP,GAAK,QAAcqP,EAAIrP,GAAzC,QAEIqP,GAAK,GAAKA,IAAqB,GAAdrP,GAAK,QAAcqP,EAAIrP,GAAK,EAChE,EACAse,aAAejP,GAAI,EAAImN,GAAQ+B,cAAc,EAAIlP,GACjDkP,aAAAA,CAAelP,GACX,MAAMnO,EAAI,OACJjC,EAAI,KACV,OAAIoQ,EAAI,EAAIpQ,EACDiC,EAAImO,EAAIA,EAEfA,EAAI,EAAIpQ,EACDiC,GAAKmO,GAAK,IAAMpQ,GAAKoQ,EAAI,IAEhCA,EAAI,IAAMpQ,EACHiC,GAAKmO,GAAK,KAAOpQ,GAAKoQ,EAAI,MAE9BnO,GAAKmO,GAAK,MAAQpQ,GAAKoQ,EAAI,OACtC,EACAmP,gBAAkBnP,GAAIA,EAAI,GAAoC,GAA9BmN,GAAQ8B,aAAiB,EAAJjP,GAAkD,GAAnCmN,GAAQ+B,cAAkB,EAAJlP,EAAQ,GAAW,IAGjH,SAASoP,GAAoBlO,GACzB,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAMrC,EAAOqC,EAAME,WACnB,MAAgB,2BAATvC,GAA8C,4BAATA,CAChD,CACA,OAAO,CACX,CACA,SAASW,GAAM0B,GACX,OAAOkO,GAAoBlO,GAASA,EAAQ,IAAIvC,EAAMuC,EAC1D,CACA,SAASmO,GAAcnO,GACnB,OAAOkO,GAAoBlO,GAASA,EAAQ,IAAIvC,EAAMuC,GAAOR,SAAS,IAAKD,OAAO,IAAKtQ,WAC3F,CAEA,MAAMmf,GAAU,CACZ,IACA,IACA,cACA,SACA,WAEEC,GAAS,CACX,QACA,cACA,mBAgFEC,GAAY,IAAIC,IAWtB,SAASC,GAAaC,EAAKC,EAAQlM,GAC/B,OAXJ,SAAyBkM,EAAQlM,GAC7BA,EAAUA,GAAW,CAAA,EACrB,MAAMmM,EAAWD,EAASE,KAAKC,UAAUrM,GACzC,IAAIsM,EAAYR,GAAUS,IAAIJ,GAK9B,OAJKG,IACDA,EAAY,IAAIE,KAAKC,aAAaP,EAAQlM,GAC1C8L,GAAUnF,IAAIwF,EAAUG,IAErBA,CACX,CAEWI,CAAgBR,EAAQlM,GAAS2M,OAAOV,EACnD,CAEA,MAAMW,GAAa,CAClBC,OAAQrP,GACM3P,EAAQ2P,GAAUA,EAAQ,GAAKA,EAE7CsP,OAAAA,CAASC,EAAWxN,EAAOyN,GACpB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMb,EAAS5Q,KAAK2R,MAAMjN,QAAQkM,OAClC,IAAIgB,EACAC,EAAQJ,EACZ,GAAIC,EAAMpT,OAAS,EAAG,CAClB,MAAMwT,EAAUniB,KAAKC,IAAID,KAAKyX,IAAIsK,EAAM,GAAGxP,OAAQvS,KAAKyX,IAAIsK,EAAMA,EAAMpT,OAAS,GAAG4D,SAChF4P,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EA8BZ,SAAwBJ,EAAWC,GAC/B,IAAIG,EAAQH,EAAMpT,OAAS,EAAIoT,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAI3F,OAHIvS,KAAKyX,IAAIyK,IAAU,GAAKJ,IAAc9hB,KAAK8X,MAAMgK,KACjDI,EAAQJ,EAAY9hB,KAAK8X,MAAMgK,IAE5BI,CACX,CApCoBE,CAAeN,EAAWC,EACtC,CACA,MAAMM,EAAWhL,GAAMrX,KAAKyX,IAAIyK,IAC1BI,EAAalK,MAAMiK,GAAY,EAAIriB,KAAKC,IAAID,KAAKE,KAAI,EAAKF,KAAK8X,MAAMuK,GAAW,IAAK,GACrFtN,EAAU,CACZkN,WACAM,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADAhU,OAAOoB,OAAOqF,EAAS1E,KAAK0E,QAAQgN,MAAML,QACnCX,GAAae,EAAWb,EAAQlM,EAC3C,EACH0N,WAAAA,CAAaX,EAAWxN,EAAOyN,GACxB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMY,EAASX,EAAMzN,GAAOqO,aAAeb,EAAY9hB,KAAKmP,IAAI,GAAInP,KAAK8X,MAAMT,GAAMyK,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFc,SAASF,IAAWpO,EAAQ,GAAMyN,EAAMpT,OAC/BgT,GAAWE,QAAQnP,KAAKrC,KAAMyR,EAAWxN,EAAOyN,GAEpD,EACX,GASA,IAACc,GAAKC,EAAA,QAAG,CACTnB,gBA2EJ,MAAMoB,GAAYzU,OAAOmG,OAAO,MAC1BuO,GAAc1U,OAAOmG,OAAO,MACjC,SAASwO,GAAWC,EAAMtO,GACvB,IAAKA,EACD,OAAOsO,EAEX,MAAM7U,EAAOuG,EAAImB,MAAM,KACvB,IAAI,IAAIxT,EAAI,EAAGN,EAAIoM,EAAKM,OAAQpM,EAAIN,IAAKM,EAAE,CACvC,MAAML,EAAImM,EAAK9L,GACf2gB,EAAOA,EAAKhhB,KAAOghB,EAAKhhB,GAAKoM,OAAOmG,OAAO,MAC/C,CACA,OAAOyO,CACX,CACA,SAASxH,GAAIyH,EAAMC,EAAOxB,GACtB,MAAqB,iBAAVwB,EACAlO,EAAM+N,GAAWE,EAAMC,GAAQxB,GAEnC1M,EAAM+N,GAAWE,EAAM,IAAKC,EACvC,CACC,MAAMC,GACHpT,WAAAA,CAAYqT,EAAcC,GACtBlT,KAAKmT,eAAY3hB,EACjBwO,KAAKoT,gBAAkB,kBACvBpT,KAAKqT,YAAc,kBACnBrT,KAAKQ,MAAQ,OACbR,KAAKsT,SAAW,CAAA,EAChBtT,KAAKuT,iBAAoBC,GAAUA,EAAQ7B,MAAM8B,SAASC,sBAC1D1T,KAAK2T,SAAW,CAAA,EAChB3T,KAAK4T,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJ5T,KAAK6T,KAAO,CACRC,OAAQ,qDACR1N,KAAM,GACN2N,MAAO,SACPC,WAAY,IACZvT,OAAQ,MAEZT,KAAKiU,MAAQ,CAAA,EACbjU,KAAKkU,qBAAuB,CAACC,EAAKzP,IAAU2L,GAAc3L,EAAQ0O,iBAClEpT,KAAKoU,iBAAmB,CAACD,EAAKzP,IAAU2L,GAAc3L,EAAQ2O,aAC9DrT,KAAKqU,WAAa,CAACF,EAAKzP,IAAU2L,GAAc3L,EAAQlE,OACxDR,KAAKsU,UAAY,IACjBtU,KAAKuU,YAAc,CACfC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEtB1U,KAAK2U,qBAAsB,EAC3B3U,KAAK4U,QAAU,KACf5U,KAAK6U,QAAU,KACf7U,KAAK8U,SAAU,EACf9U,KAAK+U,QAAU,CAAA,EACf/U,KAAKgV,YAAa,EAClBhV,KAAKiV,WAAQzjB,EACbwO,KAAKkV,OAAS,CAAA,EACdlV,KAAKmV,UAAW,EAChBnV,KAAKoV,yBAA0B,EAC/BpV,KAAKqV,SAASpC,GACdjT,KAAKsD,MAAM4P,EACf,CACH7H,GAAAA,CAAI0H,EAAOxB,GACJ,OAAOlG,GAAIrL,KAAM+S,EAAOxB,EAC5B,CACHN,GAAAA,CAAI8B,GACG,OAAOH,GAAW5S,KAAM+S,EAC5B,CACHsC,QAAAA,CAAStC,EAAOxB,GACT,OAAOlG,GAAIsH,GAAaI,EAAOxB,EACnC,CACA+D,QAAAA,CAASvC,EAAOxB,GACZ,OAAOlG,GAAIqH,GAAWK,EAAOxB,EACjC,CACHgE,KAAAA,CAAMxC,EAAOyC,EAAMC,EAAaC,GACzB,MAAMC,EAAc/C,GAAW5S,KAAM+S,GAC/B6C,EAAoBhD,GAAW5S,KAAMyV,GACrCI,EAAc,IAAML,EAC1BvX,OAAO6X,iBAAiBH,EAAa,CACjCE,CAACA,GAAc,CACX3T,MAAOyT,EAAYH,GACnBO,UAAU,GAEdP,CAACA,GAAO,CACJQ,YAAY,EACZ/E,GAAAA,GACI,MAAMgF,EAAQjW,KAAK6V,GACb1R,EAASyR,EAAkBF,GACjC,OAAInT,EAAS0T,GACFhY,OAAOoB,OAAO,GAAI8E,EAAQ8R,GAE9BpT,EAAeoT,EAAO9R,EACjC,EACAkH,GAAAA,CAAKnJ,GACDlC,KAAK6V,GAAe3T,CACxB,IAGZ,CACAoB,KAAAA,CAAM4S,GACFA,EAAShL,QAAS5H,GAAQA,EAAMtD,MACpC,EAED,IAACmW,GAAQ1D,EAAA,WAAmB,IAAIO,GAAS,CACxCoD,YAAcZ,IAAQA,EAAKa,WAAW,MACtCC,WAAad,GAAgB,WAATA,EACpBvB,MAAO,CACHsC,UAAW,eAEfhC,YAAa,CACT6B,aAAa,EACbE,YAAY,IAEjB,CAlVH,SAAiCH,GAC7BA,EAAS9K,IAAI,YAAa,CACtBmL,WAAOhlB,EACPilB,SAAU,IACVC,OAAQ,eACRvT,QAAI3R,EACJuN,UAAMvN,EACNmlB,UAAMnlB,EACNqN,QAAIrN,EACJqO,UAAMrO,IAEV2kB,EAASd,SAAS,YAAa,CAC3BkB,WAAW,EACXD,YAAY,EACZF,YAAcZ,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EW,EAAS9K,IAAI,aAAc,CACvBkF,OAAQ,CACJ1Q,KAAM,QACN+W,WAAYrG,IAEhBD,QAAS,CACLzQ,KAAM,SACN+W,WAAYtG,MAGpB6F,EAASd,SAAS,aAAc,CAC5BkB,UAAW,cAEfJ,EAAS9K,IAAI,cAAe,CACxBwL,OAAQ,CACJ1D,UAAW,CACPsD,SAAU,MAGlBK,OAAQ,CACJ3D,UAAW,CACPsD,SAAU,IAGlBM,KAAM,CACFC,WAAY,CACRzG,OAAQ,CACJxR,KAAM,eAEVkY,QAAS,CACLpX,KAAM,UACN4W,SAAU,KAItBS,KAAM,CACFF,WAAY,CACRzG,OAAQ,CACJ1R,GAAI,eAERoY,QAAS,CACLpX,KAAM,UACN6W,OAAQ,SACRvT,GAAK5T,GAAQ,EAAJA,MAK7B,EAEA,SAA8B4mB,GAC1BA,EAAS9K,IAAI,SAAU,CACnB8L,aAAa,EACbC,QAAS,CACLC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGlB,EA0EA,SAA4BrB,GACxBA,EAAS9K,IAAI,QAAS,CAClBoM,SAAS,EACTC,QAAQ,EACRjU,SAAS,EACTkU,aAAa,EACpBC,OAAQ,QACDC,MAAM,EACbC,MAAO,EACAC,KAAM,CACFN,SAAS,EACTO,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAWA,CAACC,EAAM3T,IAAUA,EAAQsT,UACpCM,UAAWA,CAACD,EAAM3T,IAAUA,EAAQlE,MACpCkX,QAAQ,GAEZa,OAAQ,CACJd,SAAS,EACTe,KAAM,GACNC,WAAY,EACZC,MAAO,GAEXC,MAAO,CACHlB,SAAS,EACTmB,KAAM,GACNxB,QAAS,CACLC,IAAK,EACLE,OAAQ,IAGhB7F,MAAO,CACHmH,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB7B,QAAS,EACTK,SAAS,EACTyB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EACblW,SAAUsP,GAAMlB,WAAWC,OAC3B8H,MAAO,CAAA,EACPC,MAAO,CAAA,EACPxN,MAAO,SACPyN,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGzBvD,EAASZ,MAAM,cAAe,QAAS,GAAI,SAC3CY,EAASZ,MAAM,aAAc,QAAS,GAAI,eAC1CY,EAASZ,MAAM,eAAgB,QAAS,GAAI,eAC5CY,EAASZ,MAAM,cAAe,QAAS,GAAI,SAC3CY,EAASd,SAAS,QAAS,CACvBkB,WAAW,EACXH,YAAcZ,IAAQA,EAAKa,WAAW,YAAcb,EAAKa,WAAW,UAAqB,aAATb,GAAgC,WAATA,EACvGc,WAAad,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9EW,EAASd,SAAS,SAAU,CACxBkB,UAAW,UAEfJ,EAASd,SAAS,cAAe,CAC7Be,YAAcZ,GAAgB,oBAATA,GAAuC,aAATA,EACnDc,WAAad,GAAgB,oBAATA,GAE5B,KAyII,SAASmE,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASC,GAC9C,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACDA,EAAYJ,EAAKG,GAAU5F,EAAI8F,YAAYF,GAAQrB,MACnDmB,EAAGjU,KAAKmU,IAERC,EAAYF,IACZA,EAAUE,GAEPF,CACX,CAIA,SAASI,GAAa/F,EAAKN,EAAMsG,EAAeC,GAE5C,IAAIR,GADJQ,EAAQA,GAAS,CAAA,GACAR,KAAOQ,EAAMR,MAAQ,CAAA,EAClCC,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAMvG,OAASA,IACf+F,EAAOQ,EAAMR,KAAO,CAAA,EACpBC,EAAKO,EAAMC,eAAiB,GAC5BD,EAAMvG,KAAOA,GAEjBM,EAAImG,OACJnG,EAAIN,KAAOA,EACX,IAAIiG,EAAU,EACd,MAAMjW,EAAOsW,EAAc7b,OAC3B,IAAIpM,EAAGiM,EAAGoc,EAAMC,EAAOC,EACvB,IAAIvoB,EAAI,EAAGA,EAAI2R,EAAM3R,IAGjB,GAFAsoB,EAAQL,EAAcjoB,GAElBsoB,SAA0CjoB,EAAQioB,IAE/C,GAAIjoB,EAAQioB,GAGf,IAAIrc,EAAI,EAAGoc,EAAOC,EAAMlc,OAAQH,EAAIoc,EAAMpc,IACtCsc,EAAcD,EAAMrc,GAEhBsc,SAAsDloB,EAAQkoB,KAC9DX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASW,SARvDX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASU,GAavDrG,EAAIuG,UACJ,MAAMC,EAAQd,EAAGvb,OAAS,EAC1B,GAAIqc,EAAQR,EAAc7b,OAAQ,CAC9B,IAAIpM,EAAI,EAAGA,EAAIyoB,EAAOzoB,WACX0nB,EAAKC,EAAG3nB,IAEnB2nB,EAAG5O,OAAO,EAAG0P,EACjB,CACA,OAAOb,CACX,CAQI,SAASc,GAAYjJ,EAAOkJ,EAAOnC,GACnC,MAAMnF,EAAmB5B,EAAMmJ,wBACzBC,EAAsB,IAAVrC,EAAc/oB,KAAKC,IAAI8oB,EAAQ,EAAG,IAAO,EAC3D,OAAO/oB,KAAKL,OAAOurB,EAAQE,GAAaxH,GAAoBA,EAAmBwH,CACnF,CAGI,SAASC,GAAYC,EAAQ9G,IACxBA,GAAQ8G,MAGb9G,EAAMA,GAAO8G,EAAOC,WAAW,OAC3BZ,OAGJnG,EAAIgH,iBACJhH,EAAIiH,UAAU,EAAG,EAAGH,EAAOvC,MAAOuC,EAAOI,QACzClH,EAAIuG,UACR,CACA,SAASY,GAAUnH,EAAKzP,EAASvR,EAAGmS,GAEhCiW,GAAgBpH,EAAKzP,EAASvR,EAAGmS,EAAG,KACxC,CAEA,SAASiW,GAAgBpH,EAAKzP,EAASvR,EAAGmS,EAAGtT,GACzC,IAAI6N,EAAM2b,EAASC,EAASrV,EAAMsV,EAAchD,EAAOiD,EAAUC,EACjE,MAAM7H,EAAQrP,EAAQmX,WAChBC,EAAWpX,EAAQoX,SACnBC,EAASrX,EAAQqX,OACvB,IAAIC,GAAOF,GAAY,GAAKlV,GAC5B,GAAImN,GAA0B,iBAAVA,IAChBlU,EAAOkU,EAAM3R,WACA,8BAATvC,GAAiD,+BAATA,GAMxC,OALAsU,EAAImG,OACJnG,EAAI8H,UAAU9oB,EAAGmS,GACjB6O,EAAIvS,OAAOoa,GACX7H,EAAI+H,UAAUnI,GAAQA,EAAM2E,MAAQ,GAAI3E,EAAMsH,OAAS,EAAGtH,EAAM2E,MAAO3E,EAAMsH,aAC7ElH,EAAIuG,UAIZ,KAAI3S,MAAMgU,IAAWA,GAAU,GAA/B,CAIA,OADA5H,EAAIgI,YACGpI,GAEH,QACQ/hB,EACAmiB,EAAIiI,QAAQjpB,EAAGmS,EAAGtT,EAAI,EAAG+pB,EAAQ,EAAG,EAAGvV,IAEvC2N,EAAIkI,IAAIlpB,EAAGmS,EAAGyW,EAAQ,EAAGvV,IAE7B2N,EAAImI,YACJ,MACJ,IAAK,WACD5D,EAAQ1mB,EAAIA,EAAI,EAAI+pB,EACpB5H,EAAIoI,OAAOppB,EAAIxD,KAAKse,IAAI+N,GAAOtD,EAAOpT,EAAI3V,KAAKuf,IAAI8M,GAAOD,GAC1DC,GAAOjV,GACPoN,EAAIqI,OAAOrpB,EAAIxD,KAAKse,IAAI+N,GAAOtD,EAAOpT,EAAI3V,KAAKuf,IAAI8M,GAAOD,GAC1DC,GAAOjV,GACPoN,EAAIqI,OAAOrpB,EAAIxD,KAAKse,IAAI+N,GAAOtD,EAAOpT,EAAI3V,KAAKuf,IAAI8M,GAAOD,GAC1D5H,EAAImI,YACJ,MACJ,IAAK,cAQDZ,EAAwB,KAATK,EACf3V,EAAO2V,EAASL,EAChBF,EAAU7rB,KAAKuf,IAAI8M,EAAMlV,IAAcV,EACvCuV,EAAWhsB,KAAKuf,IAAI8M,EAAMlV,KAAe9U,EAAIA,EAAI,EAAI0pB,EAAetV,GACpEqV,EAAU9rB,KAAKse,IAAI+N,EAAMlV,IAAcV,EACvCwV,EAAWjsB,KAAKse,IAAI+N,EAAMlV,KAAe9U,EAAIA,EAAI,EAAI0pB,EAAetV,GACpE+N,EAAIkI,IAAIlpB,EAAIwoB,EAAUrW,EAAImW,EAASC,EAAcM,EAAMzV,GAAIyV,EAAMnV,IACjEsN,EAAIkI,IAAIlpB,EAAIyoB,EAAUtW,EAAIkW,EAASE,EAAcM,EAAMnV,GAASmV,GAChE7H,EAAIkI,IAAIlpB,EAAIwoB,EAAUrW,EAAImW,EAASC,EAAcM,EAAKA,EAAMnV,IAC5DsN,EAAIkI,IAAIlpB,EAAIyoB,EAAUtW,EAAIkW,EAASE,EAAcM,EAAMnV,GAASmV,EAAMzV,IACtE4N,EAAImI,YACJ,MACJ,IAAK,OACD,IAAKR,EAAU,CACX1V,EAAOzW,KAAK8sB,QAAUV,EACtBrD,EAAQ1mB,EAAIA,EAAI,EAAIoU,EACpB+N,EAAIuI,KAAKvpB,EAAIulB,EAAOpT,EAAIc,EAAM,EAAIsS,EAAO,EAAItS,GAC7C,KACJ,CACA4V,GAAOlV,GACS,IAAK,UACrB6U,EAAWhsB,KAAKuf,IAAI8M,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxCP,EAAU7rB,KAAKuf,IAAI8M,GAAOD,EAC1BN,EAAU9rB,KAAKse,IAAI+N,GAAOD,EAC1BH,EAAWjsB,KAAKse,IAAI+N,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxC5H,EAAIoI,OAAOppB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIqI,OAAOrpB,EAAIyoB,EAAUtW,EAAIkW,GAC7BrH,EAAIqI,OAAOrpB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIqI,OAAOrpB,EAAIyoB,EAAUtW,EAAIkW,GAC7BrH,EAAImI,YACJ,MACJ,IAAK,WACDN,GAAOlV,GACS,IAAK,QACrB6U,EAAWhsB,KAAKuf,IAAI8M,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxCP,EAAU7rB,KAAKuf,IAAI8M,GAAOD,EAC1BN,EAAU9rB,KAAKse,IAAI+N,GAAOD,EAC1BH,EAAWjsB,KAAKse,IAAI+N,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxC5H,EAAIoI,OAAOppB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIqI,OAAOrpB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIoI,OAAOppB,EAAIyoB,EAAUtW,EAAIkW,GAC7BrH,EAAIqI,OAAOrpB,EAAIyoB,EAAUtW,EAAIkW,GAC7B,MACJ,IAAK,OACDG,EAAWhsB,KAAKuf,IAAI8M,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxCP,EAAU7rB,KAAKuf,IAAI8M,GAAOD,EAC1BN,EAAU9rB,KAAKse,IAAI+N,GAAOD,EAC1BH,EAAWjsB,KAAKse,IAAI+N,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxC5H,EAAIoI,OAAOppB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIqI,OAAOrpB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIoI,OAAOppB,EAAIyoB,EAAUtW,EAAIkW,GAC7BrH,EAAIqI,OAAOrpB,EAAIyoB,EAAUtW,EAAIkW,GAC7BQ,GAAOlV,GACP6U,EAAWhsB,KAAKuf,IAAI8M,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxCP,EAAU7rB,KAAKuf,IAAI8M,GAAOD,EAC1BN,EAAU9rB,KAAKse,IAAI+N,GAAOD,EAC1BH,EAAWjsB,KAAKse,IAAI+N,IAAQhqB,EAAIA,EAAI,EAAI+pB,GACxC5H,EAAIoI,OAAOppB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIqI,OAAOrpB,EAAIwoB,EAAUrW,EAAImW,GAC7BtH,EAAIoI,OAAOppB,EAAIyoB,EAAUtW,EAAIkW,GAC7BrH,EAAIqI,OAAOrpB,EAAIyoB,EAAUtW,EAAIkW,GAC7B,MACJ,IAAK,OACDA,EAAUxpB,EAAIA,EAAI,EAAIrC,KAAKuf,IAAI8M,GAAOD,EACtCN,EAAU9rB,KAAKse,IAAI+N,GAAOD,EAC1B5H,EAAIoI,OAAOppB,EAAIqoB,EAASlW,EAAImW,GAC5BtH,EAAIqI,OAAOrpB,EAAIqoB,EAASlW,EAAImW,GAC5B,MACJ,IAAK,OACDtH,EAAIoI,OAAOppB,EAAGmS,GACd6O,EAAIqI,OAAOrpB,EAAIxD,KAAKuf,IAAI8M,IAAQhqB,EAAIA,EAAI,EAAI+pB,GAASzW,EAAI3V,KAAKse,IAAI+N,GAAOD,GACzE,MACJ,KAAK,EACD5H,EAAImI,YAGZnI,EAAIwI,OACAjY,EAAQkY,YAAc,GACtBzI,EAAI0I,QA3GR,CA6GJ,CAOI,SAASC,GAAe3P,EAAO4P,EAAMC,GAErC,OADAA,EAASA,GAAU,IACXD,GAAQ5P,GAASA,EAAMha,EAAI4pB,EAAKvF,KAAOwF,GAAU7P,EAAMha,EAAI4pB,EAAKzF,MAAQ0F,GAAU7P,EAAM7H,EAAIyX,EAAK1F,IAAM2F,GAAU7P,EAAM7H,EAAIyX,EAAKxF,OAASyF,CACrJ,CACA,SAASC,GAAS9I,EAAK4I,GACnB5I,EAAImG,OACJnG,EAAIgI,YACJhI,EAAIuI,KAAKK,EAAKvF,KAAMuF,EAAK1F,IAAK0F,EAAKzF,MAAQyF,EAAKvF,KAAMuF,EAAKxF,OAASwF,EAAK1F,KACzElD,EAAI0D,MACR,CACA,SAASqF,GAAW/I,GAChBA,EAAIuG,SACR,CAGI,SAASyC,GAAehJ,EAAKiJ,EAAUjZ,EAAQkZ,EAAM7I,GACrD,IAAK4I,EACD,OAAOjJ,EAAIqI,OAAOrY,EAAOhR,EAAGgR,EAAOmB,GAEvC,GAAa,WAATkP,EAAmB,CACnB,MAAM8I,GAAYF,EAASjqB,EAAIgR,EAAOhR,GAAK,EAC3CghB,EAAIqI,OAAOc,EAAUF,EAAS9X,GAC9B6O,EAAIqI,OAAOc,EAAUnZ,EAAOmB,EAChC,KAAoB,UAATkP,KAAuB6I,EAC9BlJ,EAAIqI,OAAOY,EAASjqB,EAAGgR,EAAOmB,GAE9B6O,EAAIqI,OAAOrY,EAAOhR,EAAGiqB,EAAS9X,GAElC6O,EAAIqI,OAAOrY,EAAOhR,EAAGgR,EAAOmB,EAChC,CAGI,SAASiY,GAAepJ,EAAKiJ,EAAUjZ,EAAQkZ,GAC/C,IAAKD,EACD,OAAOjJ,EAAIqI,OAAOrY,EAAOhR,EAAGgR,EAAOmB,GAEvC6O,EAAIqJ,cAAcH,EAAOD,EAASK,KAAOL,EAASM,KAAML,EAAOD,EAASO,KAAOP,EAASQ,KAAMP,EAAOlZ,EAAOuZ,KAAOvZ,EAAOsZ,KAAMJ,EAAOlZ,EAAOyZ,KAAOzZ,EAAOwZ,KAAMxZ,EAAOhR,EAAGgR,EAAOmB,EACvL,CAkBA,SAASuY,GAAa1J,EAAKhhB,EAAGmS,EAAGwY,EAAMC,GACnC,GAAIA,EAAKC,eAAiBD,EAAKE,UAAW,CAOtC,MAAMC,EAAU/J,EAAI8F,YAAY6D,GAC1BtG,EAAOrkB,EAAI+qB,EAAQC,sBACnB7G,EAAQnkB,EAAI+qB,EAAQE,uBACpB/G,EAAM/R,EAAI4Y,EAAQG,wBAClB9G,EAASjS,EAAI4Y,EAAQI,yBACrBC,EAAcR,EAAKC,eAAiB3G,EAAME,GAAU,EAAIA,EAC9DpD,EAAIqK,YAAcrK,EAAIsK,UACtBtK,EAAIgI,YACJhI,EAAI6D,UAAY+F,EAAKW,iBAAmB,EACxCvK,EAAIoI,OAAO/E,EAAM+G,GACjBpK,EAAIqI,OAAOlF,EAAOiH,GAClBpK,EAAI0I,QACR,CACJ,CACA,SAAS8B,GAAaxK,EAAK4J,GACvB,MAAMa,EAAWzK,EAAIsK,UACrBtK,EAAIsK,UAAYV,EAAKvd,MACrB2T,EAAI0K,SAASd,EAAKvG,KAAMuG,EAAK1G,IAAK0G,EAAKrF,MAAOqF,EAAK1C,QACnDlH,EAAIsK,UAAYG,CACpB,CAGI,SAASE,GAAW3K,EAAKyE,EAAMzlB,EAAGmS,EAAGuO,EAAMkK,EAAO,IAClD,MAAMgB,EAAQxsB,EAAQqmB,GAAQA,EAAO,CACjCA,GAEEiE,EAASkB,EAAKiB,YAAc,GAA0B,KAArBjB,EAAKkB,YAC5C,IAAI/sB,EAAG4rB,EAIP,IAHA3J,EAAImG,OACJnG,EAAIN,KAAOA,EAAKkG,OAtDpB,SAAuB5F,EAAK4J,GACpBA,EAAKmB,aACL/K,EAAI8H,UAAU8B,EAAKmB,YAAY,GAAInB,EAAKmB,YAAY,IAEnDjd,EAAc8b,EAAKjC,WACpB3H,EAAIvS,OAAOmc,EAAKjC,UAEhBiC,EAAKvd,QACL2T,EAAIsK,UAAYV,EAAKvd,OAErBud,EAAKoB,YACLhL,EAAIgL,UAAYpB,EAAKoB,WAErBpB,EAAKqB,eACLjL,EAAIiL,aAAerB,EAAKqB,aAEhC,CAuCIC,CAAclL,EAAK4J,GACf7rB,EAAI,EAAGA,EAAI6sB,EAAMzgB,SAAUpM,EAC3B4rB,EAAOiB,EAAM7sB,GACT6rB,EAAKuB,UACLX,GAAaxK,EAAK4J,EAAKuB,UAEvBzC,IACIkB,EAAKkB,cACL9K,EAAIqK,YAAcT,EAAKkB,aAEtBhd,EAAc8b,EAAKiB,eACpB7K,EAAI6D,UAAY+F,EAAKiB,aAEzB7K,EAAIoL,WAAWzB,EAAM3qB,EAAGmS,EAAGyY,EAAKyB,WAEpCrL,EAAIsL,SAAS3B,EAAM3qB,EAAGmS,EAAGyY,EAAKyB,UAC9B3B,GAAa1J,EAAKhhB,EAAGmS,EAAGwY,EAAMC,GAC9BzY,GAAK7C,OAAOoR,EAAKG,YAErBG,EAAIuG,SACR,CAKI,SAASgF,GAAmBvL,EAAKuI,GACjC,MAAMvpB,EAAEA,EAACmS,EAAGA,EAACtT,EAAGA,EAACtC,EAAGA,EAACqsB,OAAGA,GAAYW,EAEpCvI,EAAIkI,IAAIlpB,EAAI4oB,EAAO4D,QAASra,EAAIyW,EAAO4D,QAAS5D,EAAO4D,QAAS,IAAMpZ,GAAIA,IAAI,GAE9E4N,EAAIqI,OAAOrpB,EAAGmS,EAAI5V,EAAIqsB,EAAO6D,YAE7BzL,EAAIkI,IAAIlpB,EAAI4oB,EAAO6D,WAAYta,EAAI5V,EAAIqsB,EAAO6D,WAAY7D,EAAO6D,WAAYrZ,GAAIM,IAAS,GAE1FsN,EAAIqI,OAAOrpB,EAAInB,EAAI+pB,EAAO8D,YAAava,EAAI5V,GAE3CykB,EAAIkI,IAAIlpB,EAAInB,EAAI+pB,EAAO8D,YAAava,EAAI5V,EAAIqsB,EAAO8D,YAAa9D,EAAO8D,YAAahZ,GAAS,GAAG,GAEhGsN,EAAIqI,OAAOrpB,EAAInB,EAAGsT,EAAIyW,EAAO+D,UAE7B3L,EAAIkI,IAAIlpB,EAAInB,EAAI+pB,EAAO+D,SAAUxa,EAAIyW,EAAO+D,SAAU/D,EAAO+D,SAAU,GAAIjZ,IAAS,GAEpFsN,EAAIqI,OAAOrpB,EAAI4oB,EAAO4D,QAASra,EACnC,CAEA,MAAMya,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAa/d,EAAOkE,GAC7B,MAAM8Z,GAAW,GAAKhe,GAAOie,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAP9Z,EAGX,OADAlE,GAASge,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAOhe,EACX,IAAK,IACDA,GAAS,IAGjB,OAAOkE,EAAOlE,CAClB,CACA,MAAMke,GAAgB7wB,IAAKA,GAAK,EAChC,SAAS8wB,GAAkBne,EAAOoe,GAC9B,MAAMxgB,EAAM,CAAA,EACNygB,EAAWhe,EAAS+d,GACpBtiB,EAAOuiB,EAAWtiB,OAAOD,KAAKsiB,GAASA,EACvCE,EAAOje,EAASL,GAASqe,EAAYE,GAAO5d,EAAeX,EAAMue,GAAOve,EAAMoe,EAAMG,KAAWA,GAAOve,EAAMue,GAAQ,IAAIve,EAC9H,IAAK,MAAMue,KAAQziB,EACf8B,EAAI2gB,GAAQL,GAAaI,EAAKC,IAElC,OAAO3gB,CACX,CAQI,SAAS4gB,GAAOxe,GAChB,OAAOme,GAAkBne,EAAO,CAC5BmV,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,KAAM,KAEd,CAOI,SAASmJ,GAAcze,GACvB,OAAOme,GAAkBne,EAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAAS0e,GAAU1e,GACnB,MAAM9B,EAAMsgB,GAAOxe,GAGnB,OAFA9B,EAAIsY,MAAQtY,EAAIoX,KAAOpX,EAAIkX,MAC3BlX,EAAIib,OAASjb,EAAIiX,IAAMjX,EAAImX,OACpBnX,CACX,CAOI,SAASygB,GAAOnc,EAASoc,GACzBpc,EAAUA,GAAW,CAAA,EACrBoc,EAAWA,GAAY3K,GAAStC,KAChC,IAAIzN,EAAOvD,EAAe6B,EAAQ0B,KAAM0a,EAAS1a,MAC7B,iBAATA,IACPA,EAAO5H,SAAS4H,EAAM,KAE1B,IAAI2N,EAAQlR,EAAe6B,EAAQqP,MAAO+M,EAAS/M,OAC/CA,KAAW,GAAKA,GAAOoM,MAAMH,MAC7Be,QAAQC,KAAK,kCAAoCjN,EAAQ,KACzDA,OAAQviB,GAEZ,MAAMqiB,EAAO,CACTC,OAAQjR,EAAe6B,EAAQoP,OAAQgN,EAAShN,QAChDE,WAAYiM,GAAapd,EAAe6B,EAAQsP,WAAY8M,EAAS9M,YAAa5N,GAClFA,OACA2N,QACAtT,OAAQoC,EAAe6B,EAAQjE,OAAQqgB,EAASrgB,QAChDsZ,OAAQ,IAGZ,OADAlG,EAAKkG,OAzdL,SAAsBlG,GACtB,OAAKA,GAAQ5R,EAAc4R,EAAKzN,OAASnE,EAAc4R,EAAKC,QACjD,MAEHD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KAAOF,EAAKpT,OAASoT,EAAKpT,OAAS,IAAM,IAAMoT,EAAKzN,KAAO,MAAQyN,EAAKC,MACpH,CAodkBmN,CAAapN,GACpBA,CACX,CAWI,SAASqN,GAAQC,EAAQ3N,EAASvP,EAAOmd,GAEzC,IAAIlvB,EAAG2R,EAAM3B,EACb,IAAIhQ,EAAI,EAAG2R,EAAOsd,EAAO7iB,OAAQpM,EAAI2R,IAAQ3R,EAEzC,GADAgQ,EAAQif,EAAOjvB,QACDV,IAAV0Q,QAWU1Q,IAAV0Q,EAIA,OAAOA,CAGnB,CAeA,SAASmf,GAAcC,EAAe9N,GAClC,OAAOvV,OAAOoB,OAAOpB,OAAOmG,OAAOkd,GAAgB9N,EACvD,CAWI,SAAS+N,GAAgBC,EAAQC,EAAW,CAC5C,IACDC,EAAYZ,EAAUa,EAAYA,IAAIH,EAAO,IAC5C,MAAMI,EAAkBF,GAAcF,OACd,IAAbV,IACPA,EAAWe,GAAS,YAAaL,IAErC,MAAMpH,EAAQ,CACV,CAACxS,OAAOka,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaL,EACbrL,UAAWuK,EACXoB,WAAYP,EACZrM,SAAWvC,GAAQwO,GAAgB,CAC3BxO,KACGyO,GACJC,EAAUG,EAAiBd,IAEtC,OAAO,IAAIqB,MAAM/H,EAAO,CAGpBgI,eAAcA,CAAEje,EAAQsc,YACbtc,EAAOsc,UACPtc,EAAOke,aACPb,EAAO,GAAGf,IACV,GAIXxP,IAAGA,CAAE9M,EAAQsc,IACF6B,GAAQne,EAAQsc,EAAM,IAyOzC,SAA8BA,EAAMgB,EAAUD,EAAQe,GAClD,IAAIrgB,EACJ,IAAK,MAAMsgB,KAAUf,EAEjB,GADAvf,EAAQ2f,GAASY,GAAQD,EAAQ/B,GAAOe,QACnB,IAAVtf,EACP,OAAOwgB,GAAiBjC,EAAMve,GAASygB,GAAkBnB,EAAQe,EAAO9B,EAAMve,GAASA,CAGnG,CAjP6C0gB,CAAqBnC,EAAMgB,EAAUD,EAAQrd,IAKlF0e,yBAAwBA,CAAE1e,EAAQsc,IACvBqC,QAAQD,yBAAyB1e,EAAO6d,QAAQ,GAAIvB,GAI/DsC,eAAcA,IACHD,QAAQC,eAAevB,EAAO,IAIzClb,IAAGA,CAAEnC,EAAQsc,IACFuC,GAAqB7e,GAAQoO,SAASkO,GAIjDwC,QAAS9e,GACE6e,GAAqB7e,GAIhCkH,GAAAA,CAAKlH,EAAQsc,EAAMve,GACf,MAAMghB,EAAU/e,EAAOgf,WAAahf,EAAOgf,SAAWxB,KAGtD,OAFAxd,EAAOsc,GAAQyC,EAAQzC,GAAQve,SACxBiC,EAAOke,QAElB,GAER,CAQI,SAASe,GAAeb,EAAO/O,EAAS6P,EAAUC,GAClD,MAAMlJ,EAAQ,CACV2H,YAAY,EACZwB,OAAQhB,EACRiB,SAAUhQ,EACViQ,UAAWJ,EACXK,OAAQ,IAAIpY,IACZ2H,aAAcA,GAAasP,EAAOe,GAClCK,WAAaxP,GAAMiP,GAAeb,EAAOpO,EAAKkP,EAAUC,GACxDhO,SAAWvC,GAAQqQ,GAAeb,EAAMjN,SAASvC,GAAQS,EAAS6P,EAAUC,IAEhF,OAAO,IAAInB,MAAM/H,EAAO,CAGpBgI,eAAcA,CAAEje,EAAQsc,YACbtc,EAAOsc,UACP8B,EAAM9B,IACN,GAIXxP,IAAGA,CAAE9M,EAAQsc,EAAMmD,IACRtB,GAAQne,EAAQsc,EAAM,IA6DzC,SAA6Btc,EAAQsc,EAAMmD,GACvC,MAAML,OAAEA,EAAMC,SAAGA,EAAQC,UAAGA,EAAYxQ,aAAcN,GAAiBxO,EACvE,IAAIjC,EAAQqhB,EAAO9C,GAYnB,OAVIva,GAAWhE,IAAUyQ,EAAYkR,aAAapD,KAC9Cve,EAWR,SAA4Bue,EAAMqD,EAAU3f,EAAQyf,GAChD,MAAML,OAAEA,EAAMC,SAAGA,EAAQC,UAAGA,EAASC,OAAGA,GAAYvf,EACpD,GAAIuf,EAAOpd,IAAIma,GACX,UAAUsD,MAAM,uBAAyBzxB,MAAMyM,KAAK2kB,GAAQM,KAAK,MAAQ,KAAOvD,GAEpFiD,EAAOO,IAAIxD,GACX,IAAIve,EAAQ4hB,EAASN,EAAUC,GAAaG,GAM5C,OALAF,EAAOQ,OAAOzD,GACViC,GAAiBjC,EAAMve,KAEvBA,EAAQygB,GAAkBY,EAAOvB,QAASuB,EAAQ9C,EAAMve,IAErDA,CACX,CAxBgBiiB,CAAmB1D,EAAMve,EAAOiC,EAAQyf,IAEhDrxB,EAAQ2P,IAAUA,EAAM5D,SACxB4D,EAsBR,SAAuBue,EAAMve,EAAOiC,EAAQigB,GACxC,MAAMb,OAAEA,EAAMC,SAAGA,EAAQC,UAAGA,EAAYxQ,aAAcN,GAAiBxO,EACvE,QAA8B,IAAnBqf,EAASvf,OAAyBmgB,EAAY3D,GACrD,OAAOve,EAAMshB,EAASvf,MAAQ/B,EAAM5D,QACjC,GAAIiE,EAASL,EAAM,IAAK,CAE3B,MAAMmiB,EAAMniB,EACNsf,EAAS+B,EAAOvB,QAAQsC,OAAQ3yB,GAAIA,IAAM0yB,GAChDniB,EAAQ,GACR,IAAK,MAAMmE,KAAQge,EAAI,CACnB,MAAM7e,EAAWmd,GAAkBnB,EAAQ+B,EAAQ9C,EAAMpa,GACzDnE,EAAM0D,KAAKwd,GAAe5d,EAAUge,EAAUC,GAAaA,EAAUhD,GAAO9N,GAChF,CACJ,CACA,OAAOzQ,CACX,CArCgBqiB,CAAc9D,EAAMve,EAAOiC,EAAQwO,EAAYyR,cAEvD1B,GAAiBjC,EAAMve,KAEvBA,EAAQkhB,GAAelhB,EAAOshB,EAAUC,GAAaA,EAAUhD,GAAO9N,IAEnEzQ,CACX,CA5E6CsiB,CAAoBrgB,EAAQsc,EAAMmD,IAKvEf,yBAAwBA,CAAE1e,EAAQsc,IACvBtc,EAAO8O,aAAawR,QAAU3B,QAAQxc,IAAIic,EAAO9B,GAAQ,CAC5DzK,YAAY,EACZ0O,cAAc,QACdlzB,EAAYsxB,QAAQD,yBAAyBN,EAAO9B,GAI5DsC,eAAcA,IACHD,QAAQC,eAAeR,GAIlCjc,IAAGA,CAAEnC,EAAQsc,IACFqC,QAAQxc,IAAIic,EAAO9B,GAI9BwC,QAAOA,IACIH,QAAQG,QAAQV,GAI3BlX,IAAGA,CAAElH,EAAQsc,EAAMve,KACfqgB,EAAM9B,GAAQve,SACPiC,EAAOsc,QAI1B,CAGI,SAASxN,GAAasP,EAAOpM,EAAW,CACxCwO,YAAY,EACZC,WAAW,IAEX,MAAMxO,YAAEA,EAAaD,EAASwO,WAAUrO,WAAGA,EAAYH,EAASyO,UAASC,SAAGA,EAAU1O,EAASsO,SAAalC,EAC5G,MAAO,CACHkC,QAASI,EACTF,WAAYvO,EACZwO,UAAWtO,EACXuN,aAAc3d,GAAWkQ,GAAeA,EAAc,IAAIA,EAC1DgO,YAAale,GAAWoQ,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAMmM,GAAUA,CAACD,EAAQhN,IAAOgN,EAASA,EAASzc,GAAYyP,GAAQA,EAChEkN,GAAmBA,CAACjC,EAAMve,IAAQK,EAASL,IAAmB,aAATue,IAAyD,OAAjCxiB,OAAO8kB,eAAe7gB,IAAmBA,EAAMtC,cAAgB3B,QAClJ,SAASqkB,GAAQne,EAAQsc,EAAMS,GAC3B,GAAIjjB,OAAOkE,UAAUgD,eAAe9C,KAAK8B,EAAQsc,IAAkB,gBAATA,EACtD,OAAOtc,EAAOsc,GAElB,MAAMve,EAAQgf,IAGd,OADA/c,EAAOsc,GAAQve,EACRA,CACX,CA+CA,SAAS4iB,GAAgBhE,EAAUL,EAAMve,GACrC,OAAOgE,GAAW4a,GAAYA,EAASL,EAAMve,GAAS4e,CAC1D,CACA,MAAMiE,GAAWA,CAACxgB,EAAKygB,KAAiB,IAARzgB,EAAeygB,EAAwB,iBAARzgB,EAAmBgB,EAAiByf,EAAQzgB,QAAO/S,EAClH,SAASyzB,GAAU5Z,EAAK6Z,EAAc3gB,EAAK4gB,EAAgBjjB,GACvD,IAAK,MAAM8iB,KAAUE,EAAa,CAC9B,MAAMnS,EAAQgS,GAASxgB,EAAKygB,GAC5B,GAAIjS,EAAO,CACP1H,EAAI4Y,IAAIlR,GACR,MAAM+N,EAAWgE,GAAgB/R,EAAMwD,UAAWhS,EAAKrC,GACvD,QAAwB,IAAb4e,GAA4BA,IAAavc,GAAOuc,IAAaqE,EAGpE,OAAOrE,CAEf,MAAO,IAAc,IAAV/N,QAA6C,IAAnBoS,GAAkC5gB,IAAQ4gB,EAG3E,OAAO,IAEf,CACA,OAAO,CACX,CACA,SAASxC,GAAkBuC,EAAc1f,EAAUib,EAAMve,GACrD,MAAMwf,EAAalc,EAASyc,YACtBnB,EAAWgE,GAAgBtf,EAAS+Q,UAAWkK,EAAMve,GACrDkjB,EAAY,IACXF,KACAxD,GAEDrW,EAAM,IAAIC,IAChBD,EAAI4Y,IAAI/hB,GACR,IAAIqC,EAAM8gB,GAAiBha,EAAK+Z,EAAW3E,EAAMK,GAAYL,EAAMve,GACnE,OAAY,OAARqC,SAGoB,IAAbuc,GAA4BA,IAAaL,IAChDlc,EAAM8gB,GAAiBha,EAAK+Z,EAAWtE,EAAUvc,EAAKrC,GAC1C,OAARqC,KAIDgd,GAAgBjvB,MAAMyM,KAAKsM,GAAM,CACpC,IACDqW,EAAYZ,EAAU,IAQ7B,SAAsBtb,EAAUib,EAAMve,GAClC,MAAM8iB,EAASxf,EAAS0c,aAClBzB,KAAQuE,IACVA,EAAOvE,GAAQ,CAAA,GAEnB,MAAMtc,EAAS6gB,EAAOvE,GACtB,OAAIluB,EAAQ4R,IAAW5B,EAASL,GAErBA,EAEJiC,GAAU,CAAA,CACrB,CAnBiCmhB,CAAa9f,EAAUib,EAAMve,GAC9D,CACA,SAASmjB,GAAiBha,EAAK+Z,EAAW7gB,EAAKuc,EAAUza,GACrD,KAAM9B,GACFA,EAAM0gB,GAAU5Z,EAAK+Z,EAAW7gB,EAAKuc,EAAUza,GAEnD,OAAO9B,CACX,CAsBA,SAASsd,GAAStd,EAAKid,GACnB,IAAK,MAAMzO,KAASyO,EAAO,CACvB,IAAKzO,EACD,SAEJ,MAAM7Q,EAAQ6Q,EAAMxO,GACpB,QAAqB,IAAVrC,EACP,OAAOA,CAEf,CACJ,CACA,SAAS8gB,GAAqB7e,GAC1B,IAAInG,EAAOmG,EAAOke,MAIlB,OAHKrkB,IACDA,EAAOmG,EAAOke,MAItB,SAAkCb,GAC9B,MAAMnW,EAAM,IAAIC,IAChB,IAAK,MAAMyH,KAASyO,EAChB,IAAK,MAAMjd,KAAOtG,OAAOD,KAAK+U,GAAOuR,OAAQzyB,IAAKA,EAAEwkB,WAAW,MAC3DhL,EAAI4Y,IAAI1f,GAGhB,OAAOjS,MAAMyM,KAAKsM,EACtB,CAZ8Bka,CAAyBphB,EAAO6d,UAEnDhkB,CACX,CAUA,SAASwnB,GAA4BvZ,EAAM2N,EAAMpQ,EAAO6C,GACpD,MAAME,OAAEA,GAAYN,GACd1H,IAAEA,EAAK,KAASvE,KAAKylB,SACrBC,EAAS,IAAIpzB,MAAM+Z,GACzB,IAAIna,EAAG2R,EAAMI,EAAOoC,EACpB,IAAInU,EAAI,EAAG2R,EAAOwI,EAAOna,EAAI2R,IAAQ3R,EACjC+R,EAAQ/R,EAAIsX,EACZnD,EAAOuT,EAAK3V,GACZyhB,EAAOxzB,GAAK,CACRd,EAAGmb,EAAOoZ,MAAMpgB,EAAiBc,EAAM9B,GAAMN,IAGrD,OAAOyhB,CACX,CAEA,MAAME,GAAUnjB,OAAOmjB,SAAW,MAC5BC,GAAWA,CAAC3Z,EAAQha,IAAIA,EAAIga,EAAO5N,SAAW4N,EAAOha,GAAG4zB,MAAQ5Z,EAAOha,GACvE6zB,GAAgBzR,GAA0B,MAAdA,EAAoB,IAAM,IAC5D,SAAS0R,GAAYC,EAAYC,EAAaC,EAAYnlB,GAItD,MAAMoc,EAAW6I,EAAWH,KAAOI,EAAcD,EAC3CjhB,EAAUkhB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMnd,GAAsBlE,EAASoY,GACrCkJ,EAAMpd,GAAsBkd,EAAMphB,GACxC,IAAIuhB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAMxe,MAAMwe,GAAO,EAAIA,EACvBC,EAAMze,MAAMye,GAAO,EAAIA,EACvB,MAAMC,EAAKzlB,EAAIulB,EACTG,EAAK1lB,EAAIwlB,EACf,MAAO,CACHpJ,SAAU,CACNjqB,EAAG6R,EAAQ7R,EAAIszB,GAAML,EAAKjzB,EAAIiqB,EAASjqB,GACvCmS,EAAGN,EAAQM,EAAImhB,GAAML,EAAK9gB,EAAI8X,EAAS9X,IAE3C8gB,KAAM,CACFjzB,EAAG6R,EAAQ7R,EAAIuzB,GAAMN,EAAKjzB,EAAIiqB,EAASjqB,GACvCmS,EAAGN,EAAQM,EAAIohB,GAAMN,EAAK9gB,EAAI8X,EAAS9X,IAGnD,CA2DI,SAASqhB,GAAoBza,EAAQoI,EAAY,KACjD,MAAMsS,EAAYb,GAAazR,GACzBuS,EAAY3a,EAAO5N,OACnBwoB,EAASx0B,MAAMu0B,GAAWlK,KAAK,GAC/BoK,EAAKz0B,MAAMu0B,GAEjB,IAAI30B,EAAG80B,EAAaC,EAChBC,EAAarB,GAAS3Z,EAAQ,GAClC,IAAIha,EAAI,EAAGA,EAAI20B,IAAa30B,EAIxB,GAHA80B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAAS3Z,EAAQha,EAAI,GAC7B+0B,EAAL,CAGA,GAAIC,EAAY,CACZ,MAAMC,EAAaD,EAAW5S,GAAa2S,EAAa3S,GAExDwS,EAAO50B,GAAoB,IAAfi1B,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACpG,CACAJ,EAAG70B,GAAM80B,EAA2BE,EAA6BjgB,GAAK6f,EAAO50B,EAAI,MAAQ+U,GAAK6f,EAAO50B,IAAM,GAAK40B,EAAO50B,EAAI,GAAK40B,EAAO50B,IAAM,EAA5F40B,EAAO50B,EAAI,GAArC40B,EAAO50B,EAN9B,EAtEJ,SAAwBga,EAAQ4a,EAAQC,GACxC,MAAMF,EAAY3a,EAAO5N,OACzB,IAAI8oB,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAarB,GAAS3Z,EAAQ,GAClC,IAAI,IAAIha,EAAI,EAAGA,EAAI20B,EAAY,IAAK30B,EAChC+0B,EAAeC,EACfA,EAAarB,GAAS3Z,EAAQha,EAAI,GAC7B+0B,GAAiBC,IAGlBhgB,GAAa4f,EAAO50B,GAAI,EAAG0zB,IAC3BmB,EAAG70B,GAAK60B,EAAG70B,EAAI,GAAK,GAGxBk1B,EAASL,EAAG70B,GAAK40B,EAAO50B,GACxBm1B,EAAQN,EAAG70B,EAAI,GAAK40B,EAAO50B,GAC3Bq1B,EAAmB53B,KAAKmP,IAAIsoB,EAAQ,GAAKz3B,KAAKmP,IAAIuoB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI33B,KAAKmZ,KAAKye,GACrBR,EAAG70B,GAAKk1B,EAASE,EAAOR,EAAO50B,GAC/B60B,EAAG70B,EAAI,GAAKm1B,EAAQC,EAAOR,EAAO50B,KAE1C,CAsDIs1B,CAAetb,EAAQ4a,EAAQC,GArDnC,SAAyB7a,EAAQ6a,EAAIzS,EAAY,KAC7C,MAAMsS,EAAYb,GAAazR,GACzBuS,EAAY3a,EAAO5N,OACzB,IAAIuT,EAAOmV,EAAaC,EACpBC,EAAarB,GAAS3Z,EAAQ,GAClC,IAAI,IAAIha,EAAI,EAAGA,EAAI20B,IAAa30B,EAAE,CAI9B,GAHA80B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAAS3Z,EAAQha,EAAI,IAC7B+0B,EACD,SAEJ,MAAMQ,EAASR,EAAa3S,GACtBoT,EAAST,EAAaL,GACxBI,IACAnV,GAAS4V,EAAST,EAAY1S,IAAc,EAC5C2S,EAAa,MAAM3S,KAAemT,EAAS5V,EAC3CoV,EAAa,MAAML,KAAec,EAAS7V,EAAQkV,EAAG70B,IAEtDg1B,IACArV,GAASqV,EAAW5S,GAAamT,GAAU,EAC3CR,EAAa,MAAM3S,KAAemT,EAAS5V,EAC3CoV,EAAa,MAAML,KAAec,EAAS7V,EAAQkV,EAAG70B,GAE9D,CACJ,CA6BIy1B,CAAgBzb,EAAQ6a,EAAIzS,EAChC,CACA,SAASsT,GAAgBC,EAAIh4B,EAAKD,GAC9B,OAAOD,KAAKC,IAAID,KAAKE,IAAIg4B,EAAIj4B,GAAMC,EACvC,CAwBI,SAASi4B,GAA2B5b,EAAQxH,EAASqY,EAAMpG,EAAMrC,GACjE,IAAIpiB,EAAG2R,EAAMsJ,EAAO4a,EAKpB,GAHIrjB,EAAQgI,WACRR,EAASA,EAAOoY,OAAQuD,IAAMA,EAAG/B,OAEE,aAAnCphB,EAAQsjB,uBACRrB,GAAoBza,EAAQoI,OACzB,CACH,IAAI2T,EAAOtR,EAAOzK,EAAOA,EAAO5N,OAAS,GAAK4N,EAAO,GACrD,IAAIha,EAAI,EAAG2R,EAAOqI,EAAO5N,OAAQpM,EAAI2R,IAAQ3R,EACzCib,EAAQjB,EAAOha,GACf61B,EAAgB/B,GAAYiC,EAAM9a,EAAOjB,EAAOvc,KAAKE,IAAIqC,EAAI,EAAG2R,GAAQ8S,EAAO,EAAI,IAAM9S,GAAOa,EAAQwjB,SACxG/a,EAAMsQ,KAAOsK,EAAc3K,SAASjqB,EACpCga,EAAMwQ,KAAOoK,EAAc3K,SAAS9X,EACpC6H,EAAMuQ,KAAOqK,EAAc3B,KAAKjzB,EAChCga,EAAMyQ,KAAOmK,EAAc3B,KAAK9gB,EAChC2iB,EAAO9a,CAEf,CACIzI,EAAQyjB,iBA3ChB,SAAyBjc,EAAQ6Q,GAC7B,IAAI7qB,EAAG2R,EAAMsJ,EAAOib,EAAQC,EACxBC,EAAaxL,GAAe5Q,EAAO,GAAI6Q,GAC3C,IAAI7qB,EAAI,EAAG2R,EAAOqI,EAAO5N,OAAQpM,EAAI2R,IAAQ3R,EACzCm2B,EAAaD,EACbA,EAASE,EACTA,EAAap2B,EAAI2R,EAAO,GAAKiZ,GAAe5Q,EAAOha,EAAI,GAAI6qB,GACtDqL,IAGLjb,EAAQjB,EAAOha,GACXm2B,IACAlb,EAAMsQ,KAAOmK,GAAgBza,EAAMsQ,KAAMV,EAAKvF,KAAMuF,EAAKzF,OACzDnK,EAAMwQ,KAAOiK,GAAgBza,EAAMwQ,KAAMZ,EAAK1F,IAAK0F,EAAKxF,SAExD+Q,IACAnb,EAAMuQ,KAAOkK,GAAgBza,EAAMuQ,KAAMX,EAAKvF,KAAMuF,EAAKzF,OACzDnK,EAAMyQ,KAAOgK,GAAgBza,EAAMyQ,KAAMb,EAAK1F,IAAK0F,EAAKxF,SAGpE,CAwBQ4Q,CAAgBjc,EAAQ6Q,EAEhC,CAII,SAASwL,KACT,MAAyB,oBAAX/c,QAA8C,oBAAbgd,QACnD,CAGI,SAASC,GAAeC,GACxB,IAAI1D,EAAS0D,EAAQC,WAIrB,OAHI3D,GAAgC,wBAAtBA,EAAO5iB,aACjB4iB,EAASA,EAAO4D,MAEb5D,CACX,CAII,SAAS6D,GAAcC,EAAYjW,EAAMkW,GACzC,IAAIC,EAUJ,MAT0B,iBAAfF,GACPE,EAAgBxqB,SAASsqB,EAAY,KACL,IAA5BA,EAAWtkB,QAAQ,OAEnBwkB,EAAgBA,EAAgB,IAAMnW,EAAK8V,WAAWI,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBC,GAAUA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,MAI1FG,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASC,GAAmBC,EAAQxV,EAAOyV,GACvC,MAAMC,EAAS,CAAA,EACfD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAIt3B,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAMw3B,EAAML,GAAUn3B,GACtBu3B,EAAOC,GAAOzmB,WAAWsmB,EAAOxV,EAAQ,IAAM2V,EAAMF,KAAY,CACpE,CAGA,OAFAC,EAAO/Q,MAAQ+Q,EAAOjS,KAAOiS,EAAOnS,MACpCmS,EAAOpO,OAASoO,EAAOpS,IAAMoS,EAAOlS,OAC7BkS,CACX,CAgCI,SAASE,GAAoBC,EAAOjY,GACpC,GAAI,WAAYiY,EACZ,OAAOA,EAEX,MAAM3O,OAAEA,EAAMH,wBAAGA,GAA6BnJ,EACxCoC,EAAQkV,GAAiBhO,GACzB4O,EAAgC,eAApB9V,EAAM+V,UAClBC,EAAWT,GAAmBvV,EAAO,WACrCiW,EAAUV,GAAmBvV,EAAO,SAAU,UAC9C5gB,EAAEA,EAACmS,EAAGA,EAAC2kB,IAAGA,GAnChB,SAA2Bp5B,EAAGoqB,GAC9B,MAAMiP,EAAUr5B,EAAEq5B,QACZhmB,EAASgmB,GAAWA,EAAQ5rB,OAAS4rB,EAAQ,GAAKr5B,GAClDs5B,QAAEA,EAAOC,QAAGA,GAAalmB,EAC/B,IACI/Q,EAAGmS,EADH2kB,GAAM,EAEV,GAXiBI,EAACl3B,EAAGmS,EAAGnB,KAAUhR,EAAI,GAAKmS,EAAI,MAAQnB,IAAWA,EAAOmmB,YAWrED,CAAaF,EAASC,EAASv5B,EAAEsT,QACjChR,EAAIg3B,EACJ7kB,EAAI8kB,MACD,CACH,MAAM1N,EAAOzB,EAAOsP,wBACpBp3B,EAAI+Q,EAAOsmB,QAAU9N,EAAKlF,KAC1BlS,EAAIpB,EAAOumB,QAAU/N,EAAKrF,IAC1B4S,GAAM,CACV,CACA,MAAO,CACH92B,IACAmS,IACA2kB,MAER,CAe6BS,CAAkBd,EAAO3O,GAC5CO,EAAUuO,EAASvS,MAAQyS,GAAOD,EAAQxS,MAC1CiE,EAAUsO,EAAS1S,KAAO4S,GAAOD,EAAQ3S,KAC/C,IAAIqB,MAAEA,EAAK2C,OAAGA,GAAY1J,EAK1B,OAJIkY,IACAnR,GAASqR,EAASrR,MAAQsR,EAAQtR,MAClC2C,GAAU0O,EAAS1O,OAAS2O,EAAQ3O,QAEjC,CACHloB,EAAGxD,KAAKL,OAAO6D,EAAIqoB,GAAW9C,EAAQuC,EAAOvC,MAAQoC,GACrDxV,EAAG3V,KAAKL,OAAOgW,EAAImW,GAAWJ,EAASJ,EAAOI,OAASP,GAE/D,CA0BA,MAAM6P,GAAUp7B,GAAII,KAAKL,MAAU,GAAJC,GAAU,GAEzC,SAASq7B,GAAe3P,EAAQ4P,EAASC,EAAUC,GAC/C,MAAMhX,EAAQkV,GAAiBhO,GACzB+P,EAAU1B,GAAmBvV,EAAO,UACpCyL,EAAWqJ,GAAc9U,EAAMyL,SAAUvE,EAAQ,gBAAkBvU,GACnEukB,EAAYpC,GAAc9U,EAAMkX,UAAWhQ,EAAQ,iBAAmBvU,GACtEwkB,EAhCV,SAA0BjQ,EAAQvC,EAAO2C,GACrC,IAAImE,EAAUyL,EACd,QAAcz5B,IAAVknB,QAAkClnB,IAAX6pB,EAAsB,CAC7C,MAAM8P,EAAYlQ,GAAUwN,GAAexN,GAC3C,GAAKkQ,EAGE,CACH,MAAMzO,EAAOyO,EAAUZ,wBACjBa,EAAiBnC,GAAiBkC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5D1S,EAAQgE,EAAKhE,MAAQ4S,EAAiB5S,MAAQ2S,EAAgB3S,MAC9D2C,EAASqB,EAAKrB,OAASiQ,EAAiBjQ,OAASgQ,EAAgBhQ,OACjEmE,EAAWqJ,GAAcuC,EAAe5L,SAAU2L,EAAW,eAC7DF,EAAYpC,GAAcuC,EAAeH,UAAWE,EAAW,eACnE,MAXIzS,EAAQuC,EAAOsQ,YACflQ,EAASJ,EAAOuQ,YAWxB,CACA,MAAO,CACH9S,QACA2C,SACAmE,SAAUA,GAAY9Y,GACtBukB,UAAWA,GAAavkB,GAEhC,CAQ0B+kB,CAAiBxQ,EAAQ4P,EAASC,GACxD,IAAIpS,MAAEA,EAAK2C,OAAGA,GAAY6P,EAC1B,GAAwB,gBAApBnX,EAAM+V,UAA6B,CACnC,MAAME,EAAUV,GAAmBvV,EAAO,SAAU,SAC9CgW,EAAWT,GAAmBvV,EAAO,WAC3C2E,GAASqR,EAASrR,MAAQsR,EAAQtR,MAClC2C,GAAU0O,EAAS1O,OAAS2O,EAAQ3O,MACxC,CAeA,OAdA3C,EAAQ/oB,KAAKC,IAAI,EAAG8oB,EAAQsS,EAAQtS,OACpC2C,EAAS1rB,KAAKC,IAAI,EAAGm7B,EAAcrS,EAAQqS,EAAc1P,EAAS2P,EAAQ3P,QAC1E3C,EAAQiS,GAAOh7B,KAAKE,IAAI6oB,EAAO8G,EAAU0L,EAAc1L,WACvDnE,EAASsP,GAAOh7B,KAAKE,IAAIwrB,EAAQ4P,EAAWC,EAAcD,YACtDvS,IAAU2C,IAGVA,EAASsP,GAAOjS,EAAQ,UAEOlnB,IAAZq5B,QAAsCr5B,IAAbs5B,IAC1BC,GAAeG,EAAc7P,QAAUA,EAAS6P,EAAc7P,SAChFA,EAAS6P,EAAc7P,OACvB3C,EAAQiS,GAAOh7B,KAAK8X,MAAM4T,EAAS0P,KAEhC,CACHrS,QACA2C,SAER,CAMI,SAASqQ,GAAY/Z,EAAOga,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAen8B,KAAK8X,MAAMkK,EAAM0J,OAASwQ,GACzCE,EAAcp8B,KAAK8X,MAAMkK,EAAM+G,MAAQmT,GAC7Cla,EAAM0J,OAAS1rB,KAAK8X,MAAMkK,EAAM0J,QAChC1J,EAAM+G,MAAQ/oB,KAAK8X,MAAMkK,EAAM+G,OAC/B,MAAMuC,EAAStJ,EAAMsJ,OAQrB,OAJIA,EAAOlH,QAAU6X,IAAe3Q,EAAOlH,MAAMsH,SAAWJ,EAAOlH,MAAM2E,SACrEuC,EAAOlH,MAAMsH,OAAS,GAAG1J,EAAM0J,WAC/BJ,EAAOlH,MAAM2E,MAAQ,GAAG/G,EAAM+G,YAE9B/G,EAAMmJ,0BAA4B+Q,GAAc5Q,EAAOI,SAAWyQ,GAAgB7Q,EAAOvC,QAAUqT,KACnGpa,EAAMmJ,wBAA0B+Q,EAChC5Q,EAAOI,OAASyQ,EAChB7Q,EAAOvC,MAAQqT,EACfpa,EAAMwC,IAAI6X,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,CAKI,MAAMI,GAA+B,WACrC,IAAIC,GAAmB,EACvB,IACI,MAAMxnB,EAAU,CACZ,WAAIynB,GAEA,OADAD,GAAmB,GACZ,CACX,GAEA3D,OACA/c,OAAO4gB,iBAAiB,OAAQ,KAAM1nB,GACtC8G,OAAO6gB,oBAAoB,OAAQ,KAAM3nB,GAEjD,CAAE,MAAO7T,GACb,CAEI,OAAOq7B,CACX,CAjByC,GA0BrC,SAASI,GAAapD,EAAShhB,GAC/B,MAAMhG,EA/LV,SAAkBqqB,EAAIrkB,GAClB,OAAO+gB,GAAiBsD,GAAIC,iBAAiBtkB,EACjD,CA6LkBukB,CAASvD,EAAShhB,GAC1BgY,EAAUhe,GAASA,EAAMie,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK1uB,CACnC,CAII,SAASk7B,GAAa35B,EAAIC,EAAIgO,EAAGwT,GACjC,MAAO,CACHrhB,EAAGJ,EAAGI,EAAI6N,GAAKhO,EAAGG,EAAIJ,EAAGI,GACzBmS,EAAGvS,EAAGuS,EAAItE,GAAKhO,EAAGsS,EAAIvS,EAAGuS,GAEjC,CAGI,SAASqnB,GAAsB55B,EAAIC,EAAIgO,EAAGwT,GAC1C,MAAO,CACHrhB,EAAGJ,EAAGI,EAAI6N,GAAKhO,EAAGG,EAAIJ,EAAGI,GACzBmS,EAAY,WAATkP,EAAoBxT,EAAI,GAAMjO,EAAGuS,EAAItS,EAAGsS,EAAa,UAATkP,EAAmBxT,EAAI,EAAIjO,EAAGuS,EAAItS,EAAGsS,EAAItE,EAAI,EAAIhO,EAAGsS,EAAIvS,EAAGuS,EAElH,CAGI,SAASsnB,GAAqB75B,EAAIC,EAAIgO,EAAGwT,GACzC,MAAMqY,EAAM,CACR15B,EAAGJ,EAAG2qB,KACNpY,EAAGvS,EAAG6qB,MAEJkP,EAAM,CACR35B,EAAGH,EAAGyqB,KACNnY,EAAGtS,EAAG2qB,MAEJltB,EAAIi8B,GAAa35B,EAAI85B,EAAK7rB,GAC1BtQ,EAAIg8B,GAAaG,EAAKC,EAAK9rB,GAC3BrQ,EAAI+7B,GAAaI,EAAK95B,EAAIgO,GAC1BpQ,EAAI87B,GAAaj8B,EAAGC,EAAGsQ,GACvBnQ,EAAI67B,GAAah8B,EAAGC,EAAGqQ,GAC7B,OAAO0rB,GAAa97B,EAAGC,EAAGmQ,EAC9B,CAyCA,SAAS+rB,GAAcC,EAAKC,EAAOvU,GAC/B,OAAOsU,EAxCmB,SAASC,EAAOvU,GAC1C,MAAO,CACHvlB,EAAGA,GACQ85B,EAAQA,EAAQvU,EAAQvlB,EAEnC+5B,QAAAA,CAAUl7B,GACN0mB,EAAQ1mB,CACZ,EACAmtB,UAAWrT,GACO,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,QAExCqhB,MAAKA,CAAEh6B,EAAG+O,IACC/O,EAAI+O,EAEfkrB,WAAUA,CAAEj6B,EAAGk6B,IACJl6B,EAAIk6B,EAGvB,CAmBiBC,CAAsBL,EAAOvU,GAjBnC,CACHvlB,EAAGA,GACQA,EAEX+5B,QAAAA,CAAUl7B,GAAI,EACdmtB,UAAWrT,GACAA,EAEXqhB,MAAKA,CAAEh6B,EAAG+O,IACC/O,EAAI+O,EAEfkrB,WAAUA,CAAEj6B,EAAGo6B,IACJp6B,EAMnB,CACA,SAASq6B,GAAsBrZ,EAAKsZ,GAChC,IAAI1Z,EAAO2Z,EACO,QAAdD,GAAqC,QAAdA,IACvB1Z,EAAQI,EAAI8G,OAAOlH,MACnB2Z,EAAW,CACP3Z,EAAMyY,iBAAiB,aACvBzY,EAAM4Z,oBAAoB,cAE9B5Z,EAAM6Z,YAAY,YAAaH,EAAW,aAC1CtZ,EAAI0Z,kBAAoBH,EAEhC,CACA,SAASI,GAAqB3Z,EAAKuZ,QACdl8B,IAAbk8B,WACOvZ,EAAI0Z,kBACX1Z,EAAI8G,OAAOlH,MAAM6Z,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAExE,CAEA,SAASK,GAAW7lB,GAChB,MAAiB,UAAbA,EACO,CACH8lB,QAASzkB,GACT0kB,QAAS5kB,GACT6kB,UAAW5kB,IAGZ,CACH0kB,QAAShkB,GACTikB,QAASA,CAACx9B,EAAGC,IAAID,EAAIC,EACrBw9B,UAAY/6B,GAAIA,EAExB,CACA,SAASg7B,IAAiB3kB,MAAEA,EAAKC,IAAGA,EAAG4C,MAAGA,EAAKsK,KAAGA,EAAI5C,MAAGA,IACrD,MAAO,CACHvK,MAAOA,EAAQ6C,EACf5C,IAAKA,EAAM4C,EACXsK,KAAMA,IAASlN,EAAMD,EAAQ,GAAK6C,GAAU,EAC5C0H,QAER,CA8BC,SAASqa,GAAcC,EAASniB,EAAQ0L,GACrC,IAAKA,EACD,MAAO,CACHyW,GAGR,MAAMnmB,SAAEA,EAAWsB,MAAO8kB,EAAa7kB,IAAK8kB,GAAc3W,EACpDvL,EAAQH,EAAO5N,QACf2vB,QAAEA,EAAOD,QAAGA,EAAOE,UAAGA,GAAeH,GAAW7lB,IAChDsB,MAAEA,EAAKC,IAAGA,EAAGkN,KAAGA,EAAI5C,MAAGA,GAtCjC,SAAoBsa,EAASniB,EAAQ0L,GACjC,MAAM1P,SAAEA,EAAWsB,MAAO8kB,EAAa7kB,IAAK8kB,GAAc3W,GACpDoW,QAAEA,EAAOE,UAAGA,GAAeH,GAAW7lB,GACtCmE,EAAQH,EAAO5N,OACrB,IACIpM,EAAG2R,GADH2F,MAAEA,EAAKC,IAAGA,EAAGkN,KAAGA,GAAU0X,EAE9B,GAAI1X,EAAM,CAGN,IAFAnN,GAAS6C,EACT5C,GAAO4C,EACHna,EAAI,EAAG2R,EAAOwI,EAAOna,EAAI2R,GACpBmqB,EAAQE,EAAUhiB,EAAO1C,EAAQ6C,GAAOnE,IAAYomB,EAAYC,KADpCr8B,EAIjCsX,IACAC,IAEJD,GAAS6C,EACT5C,GAAO4C,CACX,CAIA,OAHI5C,EAAMD,IACNC,GAAO4C,GAEJ,CACH7C,QACAC,MACAkN,OACA5C,MAAOsa,EAAQta,MAEvB,CAU4Cya,CAAWH,EAASniB,EAAQ0L,GAC9D6R,EAAS,GACf,IAEIvnB,EAAOiL,EAAOshB,EAFdC,GAAS,EACTC,EAAW,KAEf,MAEMC,EAAcA,IAAIF,GAFEV,EAAQM,EAAYG,EAAWvsB,IAA6C,IAAnC+rB,EAAQK,EAAYG,GAGjFI,EAAaA,KAAKH,GAF6B,IAA7BT,EAAQM,EAAUrsB,IAAgB8rB,EAAQO,EAAUE,EAAWvsB,GAGvF,IAAI,IAAIhQ,EAAIsX,EAAOye,EAAOze,EAAOtX,GAAKuX,IAAOvX,EACzCib,EAAQjB,EAAOha,EAAIma,GACfc,EAAM2Y,OAGV5jB,EAAQgsB,EAAU/gB,EAAMjF,IACpBhG,IAAUusB,IAGdC,EAASV,EAAQ9rB,EAAOosB,EAAYC,GACnB,OAAbI,GAAqBC,MACrBD,EAA0C,IAA/BV,EAAQ/rB,EAAOosB,GAAoBp8B,EAAI+1B,GAErC,OAAb0G,GAAqBE,MACrBpF,EAAO7jB,KAAKuoB,GAAiB,CACzB3kB,MAAOmlB,EACPllB,IAAKvX,EACLykB,OACAtK,QACA0H,WAEJ4a,EAAW,MAEf1G,EAAO/1B,EACPu8B,EAAYvsB,IAWhB,OATiB,OAAbysB,GACAlF,EAAO7jB,KAAKuoB,GAAiB,CACzB3kB,MAAOmlB,EACPllB,MACAkN,OACAtK,QACA0H,WAGD0V,CACX,CACC,SAASqF,GAAehR,EAAMlG,GAC3B,MAAM6R,EAAS,GACTsF,EAAWjR,EAAKiR,SACtB,IAAI,IAAI78B,EAAI,EAAGA,EAAI68B,EAASzwB,OAAQpM,IAAI,CACpC,MAAM88B,EAAMZ,GAAcW,EAAS78B,GAAI4rB,EAAK5R,OAAQ0L,GAChDoX,EAAI1wB,QACJmrB,EAAO7jB,QAAQopB,EAEvB,CACA,OAAOvF,CACX,CAkFC,SAASwF,GAAcnR,EAAMiR,EAAU7iB,EAAQgjB,GAC5C,OAAKA,GAAmBA,EAAevL,YAAezX,EAKzD,SAAyB4R,EAAMiR,EAAU7iB,EAAQgjB,GAC9C,MAAMC,EAAerR,EAAKsR,OAAOlU,aAC3BmU,EAAYC,GAAUxR,EAAKpZ,UACzB6qB,cAAevrB,EAAeU,SAASgI,SAAEA,IAAiBoR,EAC5DzR,EAAQH,EAAO5N,OACfmrB,EAAS,GACf,IAAI+F,EAAYH,EACZ7lB,EAAQulB,EAAS,GAAGvlB,MACpBtX,EAAIsX,EACR,SAASimB,EAAS99B,EAAGd,EAAGpB,EAAGigC,GACvB,MAAMC,EAAMjjB,GAAW,EAAK,EAC5B,GAAI/a,IAAMd,EAAV,CAIA,IADAc,GAAK0a,EACCH,EAAOva,EAAI0a,GAAOyZ,MACpBn0B,GAAKg+B,EAET,KAAMzjB,EAAOrb,EAAIwb,GAAOyZ,MACpBj1B,GAAK8+B,EAELh+B,EAAI0a,IAAUxb,EAAIwb,IAClBod,EAAO7jB,KAAK,CACR4D,MAAO7X,EAAI0a,EACX5C,IAAK5Y,EAAIwb,EACTsK,KAAMlnB,EACNskB,MAAO2b,IAEXF,EAAYE,EACZlmB,EAAQ3Y,EAAIwb,EAhBhB,CAkBJ,CACA,IAAK,MAAMgiB,KAAWU,EAAS,CAC3BvlB,EAAQkD,EAAWlD,EAAQ6kB,EAAQ7kB,MACnC,IACIuK,EADAkU,EAAO/b,EAAO1C,EAAQ6C,GAE1B,IAAIna,EAAIsX,EAAQ,EAAGtX,GAAKm8B,EAAQ5kB,IAAKvX,IAAI,CACrC,MAAM21B,EAAK3b,EAAOha,EAAIma,GACtB0H,EAAQub,GAAUJ,EAAevL,WAAWtC,GAAc8N,EAAc,CACpEtvB,KAAM,UACN+vB,GAAI3H,EACJl1B,GAAI80B,EACJgI,aAAc39B,EAAI,GAAKma,EACvByjB,YAAa59B,EAAIma,EACjBrI,mBAEA+rB,GAAahc,EAAOyb,IACpBC,EAASjmB,EAAOtX,EAAI,EAAGm8B,EAAQ1X,KAAM6Y,GAEzCvH,EAAOJ,EACP2H,EAAYzb,CAChB,CACIvK,EAAQtX,EAAI,GACZu9B,EAASjmB,EAAOtX,EAAI,EAAGm8B,EAAQ1X,KAAM6Y,EAE7C,CACA,OAAO/F,CACX,CA3DWuG,CAAgBlS,EAAMiR,EAAU7iB,EAAQgjB,GAFpCH,CAGf,CA2DA,SAASO,GAAU5qB,GACf,MAAO,CACH0O,gBAAiB1O,EAAQ0O,gBACzB6c,eAAgBvrB,EAAQurB,eACxBC,WAAYxrB,EAAQwrB,WACpBC,iBAAkBzrB,EAAQyrB,iBAC1BC,gBAAiB1rB,EAAQ0rB,gBACzBxT,YAAalY,EAAQkY,YACrBvJ,YAAa3O,EAAQ2O,YAE7B,CACA,SAAS0c,GAAahc,EAAOyb,GACzB,IAAKA,EACD,OAAO,EAEX,MAAMpV,EAAQ,GACRiW,EAAW,SAAS9rB,EAAKrC,GAC3B,OAAKkO,GAAoBlO,IAGpBkY,EAAM7H,SAASrQ,IAChBkY,EAAMxU,KAAK1D,GAERkY,EAAM5V,QAAQtC,IALVA,CAMf,EACA,OAAO4O,KAAKC,UAAUgD,EAAOsc,KAAcvf,KAAKC,UAAUye,EAAWa,EACzE,CAEA,SAASC,GAAerb,EAAOsb,EAAWC,GACtC,OAAOvb,EAAMvQ,QAAQmT,KAAO5C,EAAMub,GAASD,EAAUC,EACzD,CAaA,SAASC,GAAmB9e,EAAO1F,GAC/B,MAAM4L,EAAO5L,EAAKykB,MAClB,GAAI7Y,EAAK8Y,SACL,OAAO,EAEX,MAAM5T,EAjBV,SAAwB9Q,EAAMskB,GAC1B,MAAMjjB,OAAEA,EAAMC,OAAGA,GAAYtB,EAC7B,OAAIqB,GAAUC,EACH,CACHiK,KAAM8Y,GAAehjB,EAAQijB,EAAW,QACxCjZ,MAAOgZ,GAAehjB,EAAQijB,EAAW,SACzClZ,IAAKiZ,GAAe/iB,EAAQgjB,EAAW,OACvChZ,OAAQ+Y,GAAe/iB,EAAQgjB,EAAW,WAG3CA,CACX,CAMiBK,CAAe3kB,EAAM0F,EAAM4e,WACxC,MAAO,CACH/Y,MAAoB,IAAdK,EAAKL,KAAiB,EAAIuF,EAAKvF,OAAsB,IAAdK,EAAKL,KAAgB,EAAIK,EAAKL,MAC3EF,OAAsB,IAAfO,EAAKP,MAAkB3F,EAAM+G,MAAQqE,EAAKzF,QAAwB,IAAfO,EAAKP,MAAiB,EAAIO,EAAKP,OACzFD,KAAkB,IAAbQ,EAAKR,IAAgB,EAAI0F,EAAK1F,MAAoB,IAAbQ,EAAKR,IAAe,EAAIQ,EAAKR,KACvEE,QAAwB,IAAhBM,EAAKN,OAAmB5F,EAAM0J,OAAS0B,EAAKxF,SAA0B,IAAhBM,EAAKN,OAAkB,EAAIM,EAAKN,QAEtG;;;;;;SCvtFA,MAAMsZ,GACFjxB,WAAAA,GACII,KAAK8wB,SAAW,KAChB9wB,KAAK+wB,QAAU,IAAItgB,IACnBzQ,KAAKgxB,UAAW,EAChBhxB,KAAKixB,eAAYz/B,CACrB,CACH0/B,OAAAA,CAAQvf,EAAOwf,EAAOC,EAAMvxB,GACrB,MAAMwxB,EAAYF,EAAMnmB,UAAUnL,GAC5ByxB,EAAWH,EAAM1a,SACvB4a,EAAUnmB,QAAS/H,GAAKA,EAAG,CACnBwO,QACA4f,QAASJ,EAAMI,QACfD,WACAE,YAAa7hC,KAAKE,IAAIuhC,EAAOD,EAAM3nB,MAAO8nB,KAEtD,CACHG,QAAAA,GACWzxB,KAAK8wB,WAGT9wB,KAAKgxB,UAAW,EAChBhxB,KAAK8wB,SAAWvlB,GAAiBlJ,KAAKmJ,OAAQ,KAC1CxL,KAAK0xB,UACL1xB,KAAK8wB,SAAW,KACZ9wB,KAAKgxB,UACLhxB,KAAKyxB,aAGjB,CACHC,OAAAA,CAAQN,EAAOO,KAAKC,OACb,IAAIC,EAAY,EAChB7xB,KAAK+wB,QAAQ7lB,QAAQ,CAACimB,EAAOxf,KACzB,IAAKwf,EAAMW,UAAYX,EAAM/lB,MAAM9M,OAC/B,OAEJ,MAAM8M,EAAQ+lB,EAAM/lB,MACpB,IAEI/E,EAFAnU,EAAIkZ,EAAM9M,OAAS,EACnByzB,GAAO,EAEX,KAAM7/B,GAAK,IAAKA,EACZmU,EAAO+E,EAAMlZ,GACTmU,EAAK2rB,SACD3rB,EAAK4rB,OAASd,EAAM1a,WACpB0a,EAAM1a,SAAWpQ,EAAK4rB,QAE1B5rB,EAAK6rB,KAAKd,GACVW,GAAO,IAEP3mB,EAAMlZ,GAAKkZ,EAAMA,EAAM9M,OAAS,GAChC8M,EAAM+mB,OAGVJ,IACApgB,EAAMogB,OACN/xB,KAAKkxB,QAAQvf,EAAOwf,EAAOC,EAAM,aAEhChmB,EAAM9M,SACP6yB,EAAMW,SAAU,EAChB9xB,KAAKkxB,QAAQvf,EAAOwf,EAAOC,EAAM,YACjCD,EAAMI,SAAU,GAEpBM,GAAazmB,EAAM9M,SAEvB0B,KAAKixB,UAAYG,EACC,IAAdS,IACA7xB,KAAKgxB,UAAW,EAExB,CACHoB,SAAAA,CAAUzgB,GACH,MAAM0gB,EAASryB,KAAK+wB,QACpB,IAAII,EAAQkB,EAAOphB,IAAIU,GAavB,OAZKwf,IACDA,EAAQ,CACJW,SAAS,EACTP,SAAS,EACTnmB,MAAO,GACPJ,UAAW,CACPsnB,SAAU,GACVC,SAAU,KAGlBF,EAAOhnB,IAAIsG,EAAOwf,IAEfA,CACX,CACHqB,MAAAA,CAAO7gB,EAAOiY,EAAO6I,GACdzyB,KAAKoyB,UAAUzgB,GAAO3G,UAAU4e,GAAOhkB,KAAK6sB,EAChD,CACHxO,GAAAA,CAAItS,EAAOvG,GACCA,GAAUA,EAAM9M,QAGrB0B,KAAKoyB,UAAUzgB,GAAOvG,MAAMxF,QAAQwF,EACxC,CACH9E,GAAAA,CAAIqL,GACG,OAAO3R,KAAKoyB,UAAUzgB,GAAOvG,MAAM9M,OAAS,CAChD,CACHkL,KAAAA,CAAMmI,GACC,MAAMwf,EAAQnxB,KAAK+wB,QAAQ9f,IAAIU,GAC1Bwf,IAGLA,EAAMW,SAAU,EAChBX,EAAM3nB,MAAQmoB,KAAKC,MACnBT,EAAM1a,SAAW0a,EAAM/lB,MAAMsnB,OAAO,CAACC,EAAKC,IAAMjjC,KAAKC,IAAI+iC,EAAKC,EAAIC,WAAY,GAC9E7yB,KAAKyxB,WACT,CACAK,OAAAA,CAAQngB,GACJ,IAAK3R,KAAKgxB,SACN,OAAO,EAEX,MAAMG,EAAQnxB,KAAK+wB,QAAQ9f,IAAIU,GAC/B,SAAKwf,GAAUA,EAAMW,SAAYX,EAAM/lB,MAAM9M,OAIjD,CACHw0B,IAAAA,CAAKnhB,GACE,MAAMwf,EAAQnxB,KAAK+wB,QAAQ9f,IAAIU,GAC/B,IAAKwf,IAAUA,EAAM/lB,MAAM9M,OACvB,OAEJ,MAAM8M,EAAQ+lB,EAAM/lB,MACpB,IAAIlZ,EAAIkZ,EAAM9M,OAAS,EACvB,KAAMpM,GAAK,IAAKA,EACZkZ,EAAMlZ,GAAG6gC,SAEb5B,EAAM/lB,MAAQ,GACdpL,KAAKkxB,QAAQvf,EAAOwf,EAAOQ,KAAKC,MAAO,WAC3C,CACHoB,MAAAA,CAAOrhB,GACA,OAAO3R,KAAK+wB,QAAQ7M,OAAOvS,EAC/B,EAED,IAACshB,GAAQxgB,EAAA,WAAmB,IAAIoe,IAEnC,MAAMnyB,GAAc,cACdw0B,GAAgB,CAClBC,QAAOA,CAAEp0B,EAAMF,EAAIu0B,IACRA,EAAS,GAAMv0B,EAAKE,EAElCyB,KAAAA,CAAOzB,EAAMF,EAAIu0B,GACV,MAAMC,EAAK7yB,GAAMzB,GAAQL,IACnBgC,EAAK2yB,EAAGlzB,OAASK,GAAM3B,GAAMH,IACnC,OAAOgC,GAAMA,EAAGP,MAAQO,EAAGH,IAAI8yB,EAAID,GAAQjiC,YAAc0N,CAC7D,EACAy0B,OAAMA,CAAEv0B,EAAMF,EAAIu0B,IACPr0B,GAAQF,EAAKE,GAAQq0B,GAGpC,MAAMG,GACF3zB,WAAAA,CAAY4zB,EAAKrvB,EAAQsc,EAAM5hB,GAC3B,MAAM40B,EAAetvB,EAAOsc,GAC5B5hB,EAAKqiB,GAAQ,CACTsS,EAAI30B,GACJA,EACA40B,EACAD,EAAIz0B,OAER,MAAMA,EAAOmiB,GAAQ,CACjBsS,EAAIz0B,KACJ00B,EACA50B,IAEJmB,KAAKgyB,SAAU,EACfhyB,KAAK0zB,IAAMF,EAAIrwB,IAAM+vB,GAAcM,EAAI3zB,aAAed,GACtDiB,KAAK2zB,QAAUxlB,GAAQqlB,EAAI9c,SAAWvI,GAAQC,OAC9CpO,KAAK4zB,OAASjkC,KAAK8X,MAAMkqB,KAAKC,OAAS4B,EAAIhd,OAAS,IACpDxW,KAAK6yB,UAAY7yB,KAAKiyB,OAAStiC,KAAK8X,MAAM+rB,EAAI/c,UAC9CzW,KAAK6zB,QAAUL,EAAI7c,KACnB3W,KAAK8zB,QAAU3vB,EACfnE,KAAK+zB,MAAQtT,EACbzgB,KAAKg0B,MAAQj1B,EACbiB,KAAKi0B,IAAMp1B,EACXmB,KAAKk0B,eAAY1iC,CACrB,CACAqlB,MAAAA,GACI,OAAO7W,KAAKgyB,OAChB,CACAmC,MAAAA,CAAOX,EAAK30B,EAAIuyB,GACZ,GAAIpxB,KAAKgyB,QAAS,CACdhyB,KAAKkxB,SAAQ,GACb,MAAMuC,EAAezzB,KAAK8zB,QAAQ9zB,KAAK+zB,OACjCK,EAAUhD,EAAOpxB,KAAK4zB,OACtBvhB,EAASrS,KAAK6yB,UAAYuB,EAChCp0B,KAAK4zB,OAASxC,EACdpxB,KAAK6yB,UAAYljC,KAAK8X,MAAM9X,KAAKC,IAAIyiB,EAAQmhB,EAAI/c,WACjDzW,KAAKiyB,QAAUmC,EACfp0B,KAAK6zB,QAAUL,EAAI7c,KACnB3W,KAAKi0B,IAAM/S,GAAQ,CACfsS,EAAI30B,GACJA,EACA40B,EACAD,EAAIz0B,OAERiB,KAAKg0B,MAAQ9S,GAAQ,CACjBsS,EAAIz0B,KACJ00B,EACA50B,GAER,CACJ,CACAk0B,MAAAA,GACQ/yB,KAAKgyB,UACLhyB,KAAKkyB,KAAKP,KAAKC,OACf5xB,KAAKgyB,SAAU,EACfhyB,KAAKkxB,SAAQ,GAErB,CACAgB,IAAAA,CAAKd,GACD,MAAMgD,EAAUhD,EAAOpxB,KAAK4zB,OACtBnd,EAAWzW,KAAK6yB,UAChBpS,EAAOzgB,KAAK+zB,MACZh1B,EAAOiB,KAAKg0B,MACZrd,EAAO3W,KAAK6zB,MACZh1B,EAAKmB,KAAKi0B,IAChB,IAAIb,EAEJ,GADApzB,KAAKgyB,QAAUjzB,IAASF,IAAO8X,GAAQyd,EAAU3d,IAC5CzW,KAAKgyB,QAGN,OAFAhyB,KAAK8zB,QAAQrT,GAAQ5hB,OACrBmB,KAAKkxB,SAAQ,GAGbkD,EAAU,EACVp0B,KAAK8zB,QAAQrT,GAAQ1hB,GAGzBq0B,EAASgB,EAAU3d,EAAW,EAC9B2c,EAASzc,GAAQyc,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASpzB,KAAK2zB,QAAQhkC,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAGwjC,KAC9CpzB,KAAK8zB,QAAQrT,GAAQzgB,KAAK0zB,IAAI30B,EAAMF,EAAIu0B,GAC5C,CACAiB,IAAAA,GACI,MAAMC,EAAWt0B,KAAKk0B,YAAcl0B,KAAKk0B,UAAY,IACrD,OAAO,IAAIK,QAAQ,CAACC,EAAKC,KACrBH,EAAS1uB,KAAK,CACV4uB,MACAC,SAGZ,CACAvD,OAAAA,CAAQwD,GACJ,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWt0B,KAAKk0B,WAAa,GACnC,IAAI,IAAIhiC,EAAI,EAAGA,EAAIoiC,EAASh2B,OAAQpM,IAChCoiC,EAASpiC,GAAGyiC,IAEpB,EACJliB,EAAA,YAAA8gB,IAEA,MAAMqB,GACFh1B,WAAAA,CAAY+R,EAAOkjB,GACf70B,KAAKovB,OAASzd,EACd3R,KAAK80B,YAAc,IAAIrkB,IACvBzQ,KAAK+0B,UAAUF,EACnB,CACAE,SAAAA,CAAUF,GACN,IAAKtyB,EAASsyB,GACV,OAEJ,MAAMG,EAAmB/2B,OAAOD,KAAKmY,GAAShD,WACxC8hB,EAAgBj1B,KAAK80B,YAC3B72B,OAAOi3B,oBAAoBL,GAAQ3pB,QAAS3G,IACxC,MAAMivB,EAAMqB,EAAOtwB,GACnB,IAAKhC,EAASixB,GACV,OAEJ,MAAMkB,EAAW,CAAA,EACjB,IAAK,MAAMS,KAAUH,EACjBN,EAASS,GAAU3B,EAAI2B,IAE1B5iC,EAAQihC,EAAI5c,aAAe4c,EAAI5c,YAAc,CAC1CrS,IACD2G,QAASuV,IACJA,IAASlc,GAAQ0wB,EAAc3uB,IAAIma,IACnCwU,EAAc5pB,IAAIoV,EAAMiU,MAIxC,CACHU,eAAAA,CAAgBjxB,EAAQoN,GACjB,MAAM8jB,EAAa9jB,EAAO7M,QACpBA,EAwEd,SAA8BP,EAAQkxB,GAClC,IAAKA,EACD,OAEJ,IAAI3wB,EAAUP,EAAOO,QACrB,GAAKA,EAUL,OANIA,EAAQ4wB,UACRnxB,EAAOO,QAAUA,EAAUzG,OAAOoB,OAAO,CAAA,EAAIqF,EAAS,CAClD4wB,SAAS,EACTC,YAAa,CAAA,KAGd7wB,EATHP,EAAOO,QAAU2wB,CAUzB,CAxFwBG,CAAqBrxB,EAAQkxB,GAC7C,IAAK3wB,EACD,MAAO,GAEX,MAAMsS,EAAahX,KAAKy1B,kBAAkB/wB,EAAS2wB,GAOnD,OANIA,EAAWC,SAwDvB,SAAkBte,EAAYJ,GAC1B,MAAMkb,EAAU,GACV9zB,EAAOC,OAAOD,KAAK4Y,GACzB,IAAI,IAAI1kB,EAAI,EAAGA,EAAI8L,EAAKM,OAAQpM,IAAI,CAChC,MAAMwjC,EAAO1e,EAAWhZ,EAAK9L,IACzBwjC,GAAQA,EAAK7e,UACbib,EAAQlsB,KAAK8vB,EAAKrB,OAE1B,CACA,OAAOE,QAAQoB,IAAI7D,EACvB,CAjEY8D,CAASzxB,EAAOO,QAAQ6wB,YAAaF,GAAYQ,KAAK,KAClD1xB,EAAOO,QAAU2wB,GAClB,QAGAre,CACX,CACHye,iBAAAA,CAAkBtxB,EAAQoN,GACnB,MAAM0jB,EAAgBj1B,KAAK80B,YACrB9d,EAAa,GACb8a,EAAU3tB,EAAOoxB,cAAgBpxB,EAAOoxB,YAAc,CAAA,GACtDjV,EAAQriB,OAAOD,KAAKuT,GACpB6f,EAAOO,KAAKC,MAClB,IAAI1/B,EACJ,IAAIA,EAAIouB,EAAMhiB,OAAS,EAAGpM,GAAK,IAAKA,EAAE,CAClC,MAAMuuB,EAAOH,EAAMpuB,GACnB,GAAuB,MAAnBuuB,EAAKhhB,OAAO,GACZ,SAEJ,GAAa,YAATghB,EAAoB,CACpBzJ,EAAWpR,QAAQ5F,KAAKo1B,gBAAgBjxB,EAAQoN,IAChD,QACJ,CACA,MAAMrP,EAAQqP,EAAOkP,GACrB,IAAItN,EAAY2e,EAAQrR,GACxB,MAAM+S,EAAMyB,EAAchkB,IAAIwP,GAC9B,GAAItN,EAAW,CACX,GAAIqgB,GAAOrgB,EAAU0D,SAAU,CAC3B1D,EAAUghB,OAAOX,EAAKtxB,EAAOkvB,GAC7B,QACJ,CACIje,EAAU4f,QAElB,CACKS,GAAQA,EAAI/c,UAIjBqb,EAAQrR,GAAQtN,EAAY,IAAIogB,GAAUC,EAAKrvB,EAAQsc,EAAMve,GAC7D8U,EAAWpR,KAAKuN,IAJZhP,EAAOsc,GAAQve,CAKvB,CACA,OAAO8U,CACX,CACHmd,MAAAA,CAAOhwB,EAAQoN,GACR,GAA8B,IAA1BvR,KAAK80B,YAAY1uB,KAEjB,YADAnI,OAAOoB,OAAO8E,EAAQoN,GAG1B,MAAMyF,EAAahX,KAAKy1B,kBAAkBtxB,EAAQoN,GAClD,OAAIyF,EAAW1Y,QACX20B,GAAShP,IAAIjkB,KAAKovB,OAAQpY,IACnB,QAFX,CAIJ,EA+BJ,SAAS8e,GAAU7gB,EAAO8gB,GACtB,MAAMhY,EAAO9I,GAASA,EAAMvQ,SAAW,CAAA,EACjCjB,EAAUsa,EAAKta,QACf5T,OAAmB2B,IAAbusB,EAAKluB,IAAoBkmC,EAAkB,EACjDnmC,OAAmB4B,IAAbusB,EAAKnuB,IAAoBmmC,EAAkB,EACvD,MAAO,CACHvsB,MAAO/F,EAAU7T,EAAMC,EACvB4Z,IAAKhG,EAAU5T,EAAMD,EAE7B,CAgCA,SAASomC,GAAwBrkB,EAAOskB,GACpC,MAAMj4B,EAAO,GACPk4B,EAAWvkB,EAAMwkB,uBAAuBF,GAC9C,IAAI/jC,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAOqyB,EAAS53B,OAAQpM,EAAI2R,IAAQ3R,EAC3C8L,EAAK4H,KAAKswB,EAAShkC,GAAG+R,OAE1B,OAAOjG,CACX,CACA,SAASo4B,GAAWC,EAAOn0B,EAAOo0B,EAAS5xB,EAAU,CAAA,GACjD,MAAM1G,EAAOq4B,EAAMr4B,KACbu4B,EAA8B,WAAjB7xB,EAAQ8P,KAC3B,IAAItiB,EAAG2R,EAAMG,EAAcwyB,EAC3B,GAAc,OAAVt0B,EACA,OAEJ,IAAIu0B,GAAQ,EACZ,IAAIvkC,EAAI,EAAG2R,EAAO7F,EAAKM,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAEzC,GADA8R,GAAgBhG,EAAK9L,GACjB8R,IAAiBsyB,EAAS,CAE1B,GADAG,GAAQ,EACJ/xB,EAAQixB,IACR,SAEJ,KACJ,CACAa,EAAaH,EAAM9kB,OAAOvN,GACtBxB,EAAeg0B,KAAgBD,GAAwB,IAAVr0B,GAAe+E,GAAK/E,KAAW+E,GAAKuvB,MACjFt0B,GAASs0B,EAEjB,CACA,OAAKC,GAAU/xB,EAAQixB,IAGhBzzB,EAFI,CAGf,CAiBA,SAASw0B,GAAUzhB,EAAOhJ,GACtB,MAAM0qB,EAAU1hB,GAASA,EAAMvQ,QAAQiyB,QACvC,OAAOA,QAAuBnlC,IAAZmlC,QAAwCnlC,IAAfya,EAAKoqB,KACpD,CAWA,SAASO,GAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAA,EAC3D,CACA,SAASE,GAAoBZ,EAAO7pB,EAAQ0qB,EAAUr3B,GAClD,IAAK,MAAMoM,KAAQO,EAAO2qB,wBAAwBt3B,GAAM4D,UAAU,CAC9D,MAAMvB,EAAQm0B,EAAMpqB,EAAKhI,OACzB,GAAIizB,GAAYh1B,EAAQ,IAAMg1B,GAAYh1B,EAAQ,EAC9C,OAAO+J,EAAKhI,KAEpB,CACA,WACJ,CACA,SAASmzB,GAAaC,EAAY3R,GAC9B,MAAM/T,MAAEA,EAAQ2lB,YAAarrB,GAAUorB,EACjCR,EAASllB,EAAM4lB,UAAY5lB,EAAM4lB,QAAU,CAAA,IAC3ChrB,OAAEA,EAAMC,OAAGA,EAASvI,MAAOD,GAAkBiI,EAC7CurB,EAAQjrB,EAAOK,KACf6qB,EAAQjrB,EAAOI,KACfrI,EA7BV,SAAqBmzB,EAAYC,EAAY1rB,GACzC,MAAO,GAAGyrB,EAAW11B,MAAM21B,EAAW31B,MAAMiK,EAAKoqB,OAASpqB,EAAKpM,MACnE,CA2BgB+3B,CAAYrrB,EAAQC,EAAQP,GAClCpI,EAAO6hB,EAAOpnB,OACpB,IAAI+3B,EACJ,IAAI,IAAInkC,EAAI,EAAGA,EAAI2R,IAAQ3R,EAAE,CACzB,MAAMmU,EAAOqf,EAAOxzB,IACZslC,CAACA,GAAQvzB,EAAQwzB,CAACA,GAAQv1B,GAAWmE,EAE7CgwB,GADmBhwB,EAAKkxB,UAAYlxB,EAAKkxB,QAAU,CAAA,IAChCE,GAASb,GAAiBC,EAAQtyB,EAAKN,GAC1DoyB,EAAMryB,GAAgB9B,EACtBm0B,EAAMwB,KAAOZ,GAAoBZ,EAAO7pB,GAAQ,EAAMP,EAAKpM,MAC3Dw2B,EAAMyB,QAAUb,GAAoBZ,EAAO7pB,GAAQ,EAAOP,EAAKpM,OAC1Cw2B,EAAM0B,gBAAkB1B,EAAM0B,cAAgB,CAAA,IACtD/zB,GAAgB9B,CACjC,CACJ,CACA,SAAS81B,GAAgBrmB,EAAO/E,GAC5B,MAAMsI,EAASvD,EAAMuD,OACrB,OAAOjX,OAAOD,KAAKkX,GAAQoP,OAAQ/f,GAAM2Q,EAAO3Q,GAAKqI,OAASA,GAAMqrB,OACxE,CAuBA,SAASC,GAAYjsB,EAAMb,GACvB,MAAMpH,EAAeiI,EAAKorB,WAAWpzB,MAC/B2I,EAAOX,EAAKO,QAAUP,EAAKO,OAAOI,KACxC,GAAKA,EAAL,CAGAxB,EAAQA,GAASa,EAAKQ,QACtB,IAAK,MAAMiZ,KAAUta,EAAM,CACvB,MAAMyrB,EAASnR,EAAO6R,QACtB,IAAKV,QAA2BrlC,IAAjBqlC,EAAOjqB,SAAsDpb,IAA/BqlC,EAAOjqB,GAAM5I,GACtD,cAEG6yB,EAAOjqB,GAAM5I,QACexS,IAA/BqlC,EAAOjqB,GAAMmrB,oBAA4EvmC,IAA7CqlC,EAAOjqB,GAAMmrB,cAAc/zB,WAChE6yB,EAAOjqB,GAAMmrB,cAAc/zB,EAE1C,CAXA,CAYJ,CAtNAyO,EAAA,aAAAmiB,IAuNA,MAAMuD,GAAsB3jB,GAAgB,UAATA,GAA6B,SAATA,EACjD4jB,GAAmBA,CAACC,EAAQC,IAASA,EAASD,EAASp6B,OAAOoB,OAAO,CAAA,EAAIg5B,GAK/E,MAAME,GACLC,gBAAkB,CAAA,EAClBA,0BAA4B,KAC5BA,uBAAyB,KACzB54B,WAAAA,CAAY+R,EAAO3N,GACZhE,KAAK2R,MAAQA,EACb3R,KAAKqY,KAAO1G,EAAMwC,IAClBnU,KAAKiE,MAAQD,EACbhE,KAAKy4B,gBAAkB,CAAA,EACvBz4B,KAAKs3B,YAAct3B,KAAK04B,UACxB14B,KAAK24B,MAAQ34B,KAAKs3B,YAAYz3B,KAC9BG,KAAK0E,aAAUlT,EACdwO,KAAKylB,UAAW,EACjBzlB,KAAK44B,WAAQpnC,EACbwO,KAAK64B,iBAAcrnC,EACnBwO,KAAK84B,oBAAiBtnC,EACtBwO,KAAK+4B,gBAAavnC,EAClBwO,KAAKg5B,gBAAaxnC,EAClBwO,KAAKi5B,qBAAsB,EAC3Bj5B,KAAKk5B,oBAAqB,EAC1Bl5B,KAAKm5B,cAAW3nC,EAChBwO,KAAKo5B,UAAY,GACjBp5B,KAAKq5B,8BAAgCA,mBACrCr5B,KAAKs5B,2BAA6BA,gBAClCt5B,KAAKu5B,YACT,CACAA,UAAAA,GACI,MAAMttB,EAAOjM,KAAKs3B,YAClBt3B,KAAK+0B,YACL/0B,KAAKw5B,aACLvtB,EAAKwtB,SAAW/C,GAAUzqB,EAAKO,OAAQP,GACvCjM,KAAK05B,cACD15B,KAAK0E,QAAQiY,OAAS3c,KAAK2R,MAAMgoB,gBAAgB,WACjD5Y,QAAQC,KAAK,qKAErB,CACA4Y,WAAAA,CAAY51B,GACJhE,KAAKiE,QAAUD,GACfk0B,GAAYl4B,KAAKs3B,aAErBt3B,KAAKiE,MAAQD,CACjB,CACAw1B,UAAAA,GACI,MAAM7nB,EAAQ3R,KAAK2R,MACb1F,EAAOjM,KAAKs3B,YACZ3qB,EAAU3M,KAAK65B,aACfC,EAAWA,CAACltB,EAAMzZ,EAAGmS,EAAGlU,IAAa,MAATwb,EAAezZ,EAAa,MAATyZ,EAAexb,EAAIkU,EAClEy0B,EAAM9tB,EAAK+tB,QAAUn3B,EAAe8J,EAAQqtB,QAAShC,GAAgBrmB,EAAO,MAC5EsoB,EAAMhuB,EAAKiuB,QAAUr3B,EAAe8J,EAAQutB,QAASlC,GAAgBrmB,EAAO,MAC5EwoB,EAAMluB,EAAKmuB,QAAUv3B,EAAe8J,EAAQytB,QAASpC,GAAgBrmB,EAAO,MAC5E2C,EAAYrI,EAAKqI,UACjB+lB,EAAMpuB,EAAKquB,QAAUR,EAASxlB,EAAWylB,EAAKE,EAAKE,GACnDI,EAAMtuB,EAAKuuB,QAAUV,EAASxlB,EAAW2lB,EAAKF,EAAKI,GACzDluB,EAAKqB,OAAStN,KAAKy6B,cAAcV,GACjC9tB,EAAKsB,OAASvN,KAAKy6B,cAAcR,GACjChuB,EAAKyuB,OAAS16B,KAAKy6B,cAAcN,GACjCluB,EAAKM,OAASvM,KAAKy6B,cAAcJ,GACjCpuB,EAAKO,OAASxM,KAAKy6B,cAAcF,EACrC,CACAV,UAAAA,GACI,OAAO75B,KAAK2R,MAAMiI,KAAKtG,SAAStT,KAAKiE,MACzC,CACAy0B,OAAAA,GACI,OAAO14B,KAAK2R,MAAMgpB,eAAe36B,KAAKiE,MAC1C,CACHw2B,aAAAA,CAAcG,GACP,OAAO56B,KAAK2R,MAAMuD,OAAO0lB,EAC7B,CACHC,cAAAA,CAAe5lB,GACR,MAAMhJ,EAAOjM,KAAKs3B,YAClB,OAAOriB,IAAUhJ,EAAKM,OAASN,EAAKO,OAASP,EAAKM,MACtD,CACAuuB,KAAAA,GACI96B,KAAK0xB,QAAQ,QACjB,CACHqJ,QAAAA,GACO,MAAM9uB,EAAOjM,KAAKs3B,YACdt3B,KAAK44B,OACLhuB,GAAoB5K,KAAK44B,MAAO54B,MAEhCiM,EAAKwtB,UACLvB,GAAYjsB,EAEpB,CACH+uB,UAAAA,GACO,MAAMruB,EAAU3M,KAAK65B,aACfjgB,EAAOjN,EAAQiN,OAASjN,EAAQiN,KAAO,IACvCgf,EAAQ54B,KAAK44B,MACnB,GAAIr2B,EAASqX,GAAO,CAChB,MAAM3N,EAAOjM,KAAKs3B,YAClBt3B,KAAK44B,MA5MjB,SAAkChf,EAAM3N,GACpC,MAAMM,OAAEA,EAAMC,OAAGA,GAAYP,EACvBgvB,EAA2B,MAAhB1uB,EAAOK,KAAe,IAAM,IACvCsuB,EAA2B,MAAhB1uB,EAAOI,KAAe,IAAM,IACvC5O,EAAOC,OAAOD,KAAK4b,GACnBuhB,EAAQ,IAAI7oC,MAAM0L,EAAKM,QAC7B,IAAIpM,EAAG2R,EAAMU,EACb,IAAIrS,EAAI,EAAG2R,EAAO7F,EAAKM,OAAQpM,EAAI2R,IAAQ3R,EACvCqS,EAAMvG,EAAK9L,GACXipC,EAAMjpC,GAAK,CACP+oC,CAACA,GAAW12B,EACZ22B,CAACA,GAAWthB,EAAKrV,IAGzB,OAAO42B,CACX,CA6LyBC,CAAyBxhB,EAAM3N,EAChD,MAAO,GAAI2sB,IAAUhf,EAAM,CACvB,GAAIgf,EAAO,CACPhuB,GAAoBguB,EAAO54B,MAC3B,MAAMiM,EAAOjM,KAAKs3B,YAClBY,GAAYjsB,GACZA,EAAKQ,QAAU,EACnB,CACImN,GAAQ3b,OAAOo9B,aAAazhB,KD1KV/O,EC2KM7K,MD3KbiI,EC2KO2R,GD1KpB7O,SACN9C,EAAM8C,SAASC,UAAUpF,KAAKiF,IAGlC5M,OAAOq9B,eAAerzB,EAAO,WAAY,CACrCyc,cAAc,EACd1O,YAAY,EACZ9T,MAAO,CACH8I,UAAW,CACPH,MAIZF,GAAYO,QAAS3G,IACjB,MAAMowB,EAAS,UAAY5uB,GAAYxB,GACjCg3B,EAAOtzB,EAAM1D,GACnBtG,OAAOq9B,eAAerzB,EAAO1D,EAAK,CAC9BmgB,cAAc,EACd1O,YAAY,EACZ9T,KAAAA,IAAUkB,GACN,MAAMoxB,EAAM+G,EAAKj4B,MAAMtD,KAAMoD,GAM7B,OALA6E,EAAM8C,SAASC,UAAUE,QAASswB,IACA,mBAAnBA,EAAO7G,IACd6G,EAAO7G,MAAWvxB,KAGnBoxB,CACX,QCiJAx0B,KAAKo5B,UAAY,GACjBp5B,KAAK44B,MAAQhf,CACjB,CD/KR,IAA2B3R,EAAO4C,CCgL9B,CACA6uB,WAAAA,GACI,MAAMztB,EAAOjM,KAAKs3B,YAClBt3B,KAAKg7B,aACDh7B,KAAKq5B,qBACLptB,EAAKU,QAAU,IAAI3M,KAAKq5B,mBAEhC,CACAoC,qBAAAA,CAAsBC,GAClB,MAAMzvB,EAAOjM,KAAKs3B,YACZ3qB,EAAU3M,KAAK65B,aACrB,IAAI8B,GAAe,EACnB37B,KAAKg7B,aACL,MAAMY,EAAa3vB,EAAKwtB,SACxBxtB,EAAKwtB,SAAW/C,GAAUzqB,EAAKO,OAAQP,GACnCA,EAAKoqB,QAAU1pB,EAAQ0pB,QACvBsF,GAAe,EACfzD,GAAYjsB,GACZA,EAAKoqB,MAAQ1pB,EAAQ0pB,OAEzBr2B,KAAK67B,gBAAgBH,IACjBC,GAAgBC,IAAe3vB,EAAKwtB,YACpCrC,GAAap3B,KAAMiM,EAAKQ,SACxBR,EAAKwtB,SAAW/C,GAAUzqB,EAAKO,OAAQP,GAE/C,CACH8oB,SAAAA,GACO,MAAMF,EAAS70B,KAAK2R,MAAMkjB,OACpBiH,EAAYjH,EAAOkH,iBAAiB/7B,KAAK24B,OACzCnX,EAASqT,EAAOmH,gBAAgBh8B,KAAK65B,aAAciC,GAAW,GACpE97B,KAAK0E,QAAUmwB,EAAOoH,eAAeza,EAAQxhB,KAAKkb,cAClDlb,KAAKylB,SAAWzlB,KAAK0E,QAAQoQ,QAC7B9U,KAAKy4B,gBAAkB,CAAA,CAC3B,CACH9S,KAAAA,CAAMnc,EAAO6C,GACN,MAAQirB,YAAarrB,EAAO2sB,MAAOhf,GAAU5Z,MACvCuM,OAAEA,EAAMktB,SAAGA,GAAcxtB,EACzBurB,EAAQjrB,EAAOK,KACrB,IAEI1a,EAAG0gC,EAAKlN,EAFRwW,EAAmB,IAAV1yB,GAAe6C,IAAUuN,EAAKtb,QAAgB2N,EAAKK,QAC5D2b,EAAOze,EAAQ,GAAKyC,EAAKQ,QAAQjD,EAAQ,GAE7C,IAAsB,IAAlBxJ,KAAKylB,SACLxZ,EAAKQ,QAAUmN,EACf3N,EAAKK,SAAU,EACfoZ,EAAS9L,MACN,CAEC8L,EADAnzB,EAAQqnB,EAAKpQ,IACJxJ,KAAKm8B,eAAelwB,EAAM2N,EAAMpQ,EAAO6C,GACzC9J,EAASqX,EAAKpQ,IACZxJ,KAAKo8B,gBAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAExCrM,KAAKq8B,mBAAmBpwB,EAAM2N,EAAMpQ,EAAO6C,GAExD,MAAMiwB,EAA6BA,IAAmB,OAAf1J,EAAI4E,IAAmBvP,GAAQ2K,EAAI4E,GAASvP,EAAKuP,GACxF,IAAItlC,EAAI,EAAGA,EAAIma,IAASna,EACpB+Z,EAAKQ,QAAQva,EAAIsX,GAASopB,EAAMlN,EAAOxzB,GACnCgqC,IACII,MACAJ,GAAS,GAEbjU,EAAO2K,GAGf3mB,EAAKK,QAAU4vB,CACnB,CACIzC,GACArC,GAAap3B,KAAM0lB,EAE3B,CACH2W,kBAAAA,CAAmBpwB,EAAM2N,EAAMpQ,EAAO6C,GAC/B,MAAME,OAAEA,EAAMC,OAAGA,GAAYP,EACvBurB,EAAQjrB,EAAOK,KACf6qB,EAAQjrB,EAAOI,KACf2vB,EAAShwB,EAAOiwB,YAChBC,EAAclwB,IAAWC,EACzBkZ,EAAS,IAAIpzB,MAAM+Z,GACzB,IAAIna,EAAG2R,EAAMI,EACb,IAAI/R,EAAI,EAAG2R,EAAOwI,EAAOna,EAAI2R,IAAQ3R,EACjC+R,EAAQ/R,EAAIsX,EACZkc,EAAOxzB,GAAK,CACRslC,CAACA,GAAQiF,GAAelwB,EAAOoZ,MAAM4W,EAAOt4B,GAAQA,GACpDwzB,CAACA,GAAQjrB,EAAOmZ,MAAM/L,EAAK3V,GAAQA,IAG3C,OAAOyhB,CACX,CACHyW,cAAAA,CAAelwB,EAAM2N,EAAMpQ,EAAO6C,GAC3B,MAAMiB,OAAEA,EAAMC,OAAGA,GAAYtB,EACvByZ,EAAS,IAAIpzB,MAAM+Z,GACzB,IAAIna,EAAG2R,EAAMI,EAAOoC,EACpB,IAAInU,EAAI,EAAG2R,EAAOwI,EAAOna,EAAI2R,IAAQ3R,EACjC+R,EAAQ/R,EAAIsX,EACZnD,EAAOuT,EAAK3V,GACZyhB,EAAOxzB,GAAK,CACRiB,EAAGma,EAAOqY,MAAMtf,EAAK,GAAIpC,GACzBqB,EAAGiI,EAAOoY,MAAMtf,EAAK,GAAIpC,IAGjC,OAAOyhB,CACX,CACH0W,eAAAA,CAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAC5B,MAAMiB,OAAEA,EAAMC,OAAGA,GAAYtB,GACvBywB,SAAEA,EAAU,IAAGC,SAAGA,EAAU,KAAS38B,KAAKylB,SAC1CC,EAAS,IAAIpzB,MAAM+Z,GACzB,IAAIna,EAAG2R,EAAMI,EAAOoC,EACpB,IAAInU,EAAI,EAAG2R,EAAOwI,EAAOna,EAAI2R,IAAQ3R,EACjC+R,EAAQ/R,EAAIsX,EACZnD,EAAOuT,EAAK3V,GACZyhB,EAAOxzB,GAAK,CACRiB,EAAGma,EAAOqY,MAAMpgB,EAAiBc,EAAMq2B,GAAWz4B,GAClDqB,EAAGiI,EAAOoY,MAAMpgB,EAAiBc,EAAMs2B,GAAW14B,IAG1D,OAAOyhB,CACX,CACHkX,SAAAA,CAAU34B,GACH,YAAYqzB,YAAY7qB,QAAQxI,EACpC,CACH44B,cAAAA,CAAe54B,GACR,OAAOjE,KAAKs3B,YAAY1d,KAAK3V,EACjC,CACHmyB,UAAAA,CAAWnhB,EAAOyQ,EAAQlR,GACnB,MAAM7C,EAAQ3R,KAAK2R,MACb1F,EAAOjM,KAAKs3B,YACZp1B,EAAQwjB,EAAOzQ,EAAMrI,MAK3B,OAAOwpB,GAJO,CACVp4B,KAAMg4B,GAAwBrkB,GAAO,GACrCJ,OAAQmU,EAAO6R,QAAQtiB,EAAMrI,MAAMmrB,eAEd71B,EAAO+J,EAAKhI,MAAO,CACxCuQ,QAER,CACHsoB,qBAAAA,CAAsBx1B,EAAO2N,EAAOyQ,EAAQ2Q,GACrC,MAAM0G,EAAcrX,EAAOzQ,EAAMrI,MACjC,IAAI1K,EAAwB,OAAhB66B,EAAuBC,IAAMD,EACzC,MAAMxrB,EAAS8kB,GAAS3Q,EAAO6R,QAAQtiB,EAAMrI,MACzCypB,GAAS9kB,IACT8kB,EAAM9kB,OAASA,EACfrP,EAAQk0B,GAAWC,EAAO0G,EAAa/8B,KAAKs3B,YAAYrzB,QAE5DqD,EAAMzX,IAAMF,KAAKE,IAAIyX,EAAMzX,IAAKqS,GAChCoF,EAAM1X,IAAMD,KAAKC,IAAI0X,EAAM1X,IAAKsS,EACpC,CACH+6B,SAAAA,CAAUhoB,EAAOioB,GACV,MAAMjxB,EAAOjM,KAAKs3B,YACZ7qB,EAAUR,EAAKQ,QACfyvB,EAASjwB,EAAKK,SAAW2I,IAAUhJ,EAAKM,OACxC1I,EAAO4I,EAAQnO,OACf6+B,EAAan9B,KAAK66B,eAAe5lB,GACjCohB,EAlQM+G,EAACF,EAAUjxB,EAAM0F,IAAQurB,IAAajxB,EAAKoxB,QAAUpxB,EAAKwtB,UAAY,CAClFz7B,KAAMg4B,GAAwBrkB,GAAO,GACrCJ,OAAQ,MAgQM6rB,CAAYF,EAAUjxB,EAAMjM,KAAK2R,OACzCrK,EAAQ,CACVzX,IAAK4S,OAAOkE,kBACZ/W,IAAK6S,OAAO66B,oBAERztC,IAAK0tC,EAAW3tC,IAAK4tC,GA9VrC,SAAuBvoB,GACnB,MAAMplB,IAAEA,EAAGD,IAAGA,EAAGid,WAAGA,EAAUC,WAAGA,GAAgBmI,EAAMlI,gBACvD,MAAO,CACHld,IAAKgd,EAAahd,EAAM4S,OAAO66B,kBAC/B1tC,IAAKkd,EAAald,EAAM6S,OAAOkE,kBAEvC,CAwVmDoG,CAAcowB,GACzD,IAAIjrC,EAAGwzB,EACP,SAAS+X,IACL/X,EAASjZ,EAAQva,GACjB,MAAMskC,EAAa9Q,EAAOyX,EAAWvwB,MACrC,OAAQpK,EAAekjB,EAAOzQ,EAAMrI,QAAU2wB,EAAW/G,GAAcgH,EAAWhH,CACtF,CACA,IAAItkC,EAAI,EAAGA,EAAI2R,IACP45B,MAGJz9B,KAAK88B,sBAAsBx1B,EAAO2N,EAAOyQ,EAAQ2Q,IAC7C6F,MALehqC,GASvB,GAAIgqC,EACA,IAAIhqC,EAAI2R,EAAO,EAAG3R,GAAK,IAAKA,EACxB,IAAIurC,IAAJ,CAGAz9B,KAAK88B,sBAAsBx1B,EAAO2N,EAAOyQ,EAAQ2Q,GACjD,KAFA,CAKR,OAAO/uB,CACX,CACAo2B,kBAAAA,CAAmBzoB,GACf,MAAMyQ,EAAS1lB,KAAKs3B,YAAY7qB,QAC1B8E,EAAS,GACf,IAAIrf,EAAG2R,EAAM3B,EACb,IAAIhQ,EAAI,EAAG2R,EAAO6hB,EAAOpnB,OAAQpM,EAAI2R,IAAQ3R,EACzCgQ,EAAQwjB,EAAOxzB,GAAG+iB,EAAMrI,MACpBpK,EAAeN,IACfqP,EAAO3L,KAAK1D,GAGpB,OAAOqP,CACX,CACHosB,cAAAA,GACO,OAAO,CACX,CACHC,gBAAAA,CAAiB35B,GACV,MAAMgI,EAAOjM,KAAKs3B,YACZ/qB,EAASN,EAAKM,OACdC,EAASP,EAAKO,OACdkZ,EAAS1lB,KAAK48B,UAAU34B,GAC9B,MAAO,CACH45B,MAAOtxB,EAAS,GAAKA,EAAOuxB,iBAAiBpY,EAAOnZ,EAAOK,OAAS,GACpE1K,MAAOsK,EAAS,GAAKA,EAAOsxB,iBAAiBpY,EAAOlZ,EAAOI,OAAS,GAE5E,CACH8kB,OAAAA,CAAQld,GACD,MAAMvI,EAAOjM,KAAKs3B,YAClBt3B,KAAKm0B,OAAO3f,GAAQ,WACpBvI,EAAKykB,MAleb,SAAgBxuB,GACZ,IAAIlB,EAAG5P,EAAGV,EAAGjB,EASb,OARI8S,EAASL,IACTlB,EAAIkB,EAAMmV,IACVjmB,EAAI8Q,EAAMoV,MACV5mB,EAAIwR,EAAMqV,OACV9nB,EAAIyS,EAAMsV,MAEVxW,EAAI5P,EAAIV,EAAIjB,EAAIyS,EAEb,CACHmV,IAAKrW,EACLsW,MAAOlmB,EACPmmB,OAAQ7mB,EACR8mB,KAAM/nB,EACNkhC,UAAoB,IAAVzuB,EAElB,CAidqB67B,CAAOl7B,EAAe7C,KAAK0E,QAAQmT,KA/exD,SAAqBvK,EAAQC,EAAQwoB,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAM5iC,EAAI2iC,GAAUxoB,EAAQyoB,GACtBzwB,EAAIwwB,GAAUvoB,EAAQwoB,GAC5B,MAAO,CACH1e,IAAK/R,EAAEmE,IACP6N,MAAOnkB,EAAEsW,IACT8N,OAAQjS,EAAEkE,MACVgO,KAAMrkB,EAAEqW,MAEhB,CAme8Dw0B,CAAY/xB,EAAKqB,OAAQrB,EAAKsB,OAAQvN,KAAK29B,mBACrG,CACHxJ,MAAAA,CAAO3f,GAAO,CACXud,IAAAA,GACI,MAAM5d,EAAMnU,KAAKqY,KACX1G,EAAQ3R,KAAK2R,MACb1F,EAAOjM,KAAKs3B,YACZ3jB,EAAW1H,EAAK2N,MAAQ,GACxBmD,EAAOpL,EAAM4e,UACb1Z,EAAS,GACTrN,EAAQxJ,KAAK+4B,YAAc,EAC3B1sB,EAAQrM,KAAKg5B,YAAcrlB,EAASrV,OAASkL,EAC7C4L,EAA0BpV,KAAK0E,QAAQ0Q,wBAC7C,IAAIljB,EAIJ,IAHI+Z,EAAKU,SACLV,EAAKU,QAAQolB,KAAK5d,EAAK4I,EAAMvT,EAAO6C,GAEpCna,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,IAASna,EAAE,CAClC,MAAMg3B,EAAUvV,EAASzhB,GACrBg3B,EAAQmU,SAGRnU,EAAQrS,QAAUzB,EAClByB,EAAOjR,KAAKsjB,GAEZA,EAAQ6I,KAAK5d,EAAK4I,GAE1B,CACA,IAAI7qB,EAAI,EAAGA,EAAI2kB,EAAOvY,SAAUpM,EAC5B2kB,EAAO3kB,GAAG6/B,KAAK5d,EAAK4I,EAE5B,CACH0P,QAAAA,CAASxoB,EAAO4S,GACT,MAAMrC,EAAOqC,EAAS,SAAW,UACjC,YAAiBrlB,IAAVyS,GAAuBjE,KAAKs3B,YAAY3qB,QAAU3M,KAAKi+B,6BAA6BzpB,GAAQxU,KAAKk+B,0BAA0Bj6B,GAAS,EAAGuQ,EAClJ,CACH0G,UAAAA,CAAWjX,EAAO4S,EAAQrC,GACnB,MAAM7H,EAAU3M,KAAK65B,aACrB,IAAIrmB,EACJ,GAAIvP,GAAS,GAAKA,EAAQjE,KAAKs3B,YAAY1d,KAAKtb,OAAQ,CACpD,MAAM4qB,EAAUlpB,KAAKs3B,YAAY1d,KAAK3V,GACtCuP,EAAU0V,EAAQiQ,WAAajQ,EAAQiQ,SAvYnD,SAA2BnU,EAAQ/gB,EAAOilB,GACtC,OAAO7H,GAAc2D,EAAQ,CACzBnO,QAAQ,EACRsnB,UAAWl6B,EACXyhB,YAAQl0B,EACR4sC,SAAK5sC,EACL03B,UACAjlB,QACAuQ,KAAM,UACN3U,KAAM,QAEd,CA4X8Dw+B,CAAkBr+B,KAAKkb,aAAcjX,EAAOilB,IAC9F1V,EAAQkS,OAAS1lB,KAAK48B,UAAU34B,GAChCuP,EAAQ4qB,IAAMzxB,EAAQiN,KAAK3V,GAC3BuP,EAAQvP,MAAQuP,EAAQ2qB,UAAYl6B,CACxC,MACIuP,EAAUxT,KAAKm5B,WAAan5B,KAAKm5B,SAtZ7C,SAA8BnU,EAAQ/gB,GAClC,OAAOod,GAAc2D,EAAQ,CACzBnO,QAAQ,EACRlK,aAASnb,EACTwS,aAAcC,EACdA,QACAuQ,KAAM,UACN3U,KAAM,WAEd,CA6YwDy+B,CAAqBt+B,KAAK2R,MAAMuJ,aAAclb,KAAKiE,QAC/FuP,EAAQ7G,QAAUA,EAClB6G,EAAQvP,MAAQuP,EAAQxP,aAAehE,KAAKiE,MAIhD,OAFAuP,EAAQqD,SAAWA,EACnBrD,EAAQgB,KAAOA,EACRhB,CACX,CACHyqB,4BAAAA,CAA6BzpB,GACtB,OAAOxU,KAAKu+B,uBAAuBv+B,KAAKq5B,mBAAmBr3B,GAAIwS,EACnE,CACH0pB,yBAAAA,CAA0Bj6B,EAAOuQ,GAC1B,OAAOxU,KAAKu+B,uBAAuBv+B,KAAKs5B,gBAAgBt3B,GAAIwS,EAAMvQ,EACtE,CACHs6B,sBAAAA,CAAuBC,EAAahqB,EAAO,UAAWvQ,GAC/C,MAAM4S,EAAkB,WAATrC,EACT4F,EAAQpa,KAAKy4B,gBACb5nB,EAAW2tB,EAAc,IAAMhqB,EAC/B6jB,EAASje,EAAMvJ,GACf4tB,EAAUz+B,KAAKi5B,qBAAuBhzB,GAAQhC,GACpD,GAAIo0B,EACA,OAAOD,GAAiBC,EAAQoG,GAEpC,MAAM5J,EAAS70B,KAAK2R,MAAMkjB,OACpBiH,EAAYjH,EAAO6J,wBAAwB1+B,KAAK24B,MAAO6F,GACvD/c,EAAW5K,EAAS,CACtB,GAAG2nB,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEEhd,EAASqT,EAAOmH,gBAAgBh8B,KAAK65B,aAAciC,GACnDj+B,EAAQI,OAAOD,KAAKmY,GAASxC,SAAS6qB,IAEtCjtB,EAASsjB,EAAO8J,oBAAoBnd,EAAQ3jB,EADlC2V,IAAIxT,KAAKkb,WAAWjX,EAAO4S,EAAQrC,GACeiN,GAKlE,OAJIlQ,EAAO+jB,UACP/jB,EAAO+jB,QAAUmJ,EACjBrkB,EAAMvJ,GAAY5S,OAAO2gC,OAAOxG,GAAiB7mB,EAAQktB,KAEtDltB,CACX,CACHstB,kBAAAA,CAAmB56B,EAAO66B,EAAYjoB,GAC/B,MAAMlF,EAAQ3R,KAAK2R,MACbyI,EAAQpa,KAAKy4B,gBACb5nB,EAAW,aAAaiuB,IACxBzG,EAASje,EAAMvJ,GACrB,GAAIwnB,EACA,OAAOA,EAEX,IAAI3zB,EACJ,IAAgC,IAA5BiN,EAAMjN,QAAQyO,UAAqB,CACnC,MAAM0hB,EAAS70B,KAAK2R,MAAMkjB,OACpBiH,EAAYjH,EAAOkK,0BAA0B/+B,KAAK24B,MAAOmG,GACzDtd,EAASqT,EAAOmH,gBAAgBh8B,KAAK65B,aAAciC,GACzDp3B,EAAUmwB,EAAOoH,eAAeza,EAAQxhB,KAAKkb,WAAWjX,EAAO4S,EAAQioB,GAC3E,CACA,MAAM9nB,EAAa,IAAI4d,GAAWjjB,EAAOjN,GAAWA,EAAQsS,YAI5D,OAHItS,GAAWA,EAAQqd,aACnB3H,EAAMvJ,GAAY5S,OAAO2gC,OAAO5nB,IAE7BA,CACX,CACHgoB,gBAAAA,CAAiBt6B,GACV,GAAKA,EAAQ4wB,QAGb,OAAOt1B,KAAK84B,iBAAmB94B,KAAK84B,eAAiB76B,OAAOoB,OAAO,GAAIqF,GAC3E,CACHu6B,cAAAA,CAAezqB,EAAM0qB,GACd,OAAQA,GAAiB/G,GAAmB3jB,IAASxU,KAAK2R,MAAMwtB,mBACpE,CACHC,iBAAAA,CAAkB51B,EAAOgL,GAClB,MAAM6qB,EAAYr/B,KAAKk+B,0BAA0B10B,EAAOgL,GAClD8qB,EAA0Bt/B,KAAK84B,eAC/BoG,EAAgBl/B,KAAKg/B,iBAAiBK,GACtCJ,EAAiBj/B,KAAKi/B,eAAezqB,EAAM0qB,IAAkBA,IAAkBI,EAErF,OADAt/B,KAAKu/B,oBAAoBL,EAAe1qB,EAAM6qB,GACvC,CACHH,gBACAD,iBAER,CACHO,aAAAA,CAActW,EAASjlB,EAAO2S,EAAYpC,GAC/B2jB,GAAmB3jB,GACnBvW,OAAOoB,OAAO6pB,EAAStS,GAEvB5W,KAAK6+B,mBAAmB56B,EAAOuQ,GAAM2f,OAAOjL,EAAStS,EAE7D,CACH2oB,mBAAAA,CAAoBL,EAAe1qB,EAAM6gB,GAC9B6J,IAAkB/G,GAAmB3jB,IACrCxU,KAAK6+B,wBAAmBrtC,EAAWgjB,GAAM2f,OAAO+K,EAAe7J,EAEvE,CACHoK,SAAAA,CAAUvW,EAASjlB,EAAOuQ,EAAMqC,GACzBqS,EAAQrS,OAASA,EACjB,MAAMnS,EAAU1E,KAAKysB,SAASxoB,EAAO4S,GACrC7W,KAAK6+B,mBAAmB56B,EAAOuQ,EAAMqC,GAAQsd,OAAOjL,EAAS,CACzDxkB,SAAUmS,GAAU7W,KAAKg/B,iBAAiBt6B,IAAYA,GAE9D,CACAg7B,gBAAAA,CAAiBxW,EAASllB,EAAcC,GACpCjE,KAAKy/B,UAAUvW,EAASjlB,EAAO,UAAU,EAC7C,CACA07B,aAAAA,CAAczW,EAASllB,EAAcC,GACjCjE,KAAKy/B,UAAUvW,EAASjlB,EAAO,UAAU,EAC7C,CACH27B,wBAAAA,GACO,MAAM1W,EAAUlpB,KAAKs3B,YAAY3qB,QAC7Buc,GACAlpB,KAAKy/B,UAAUvW,OAAS13B,EAAW,UAAU,EAErD,CACHquC,qBAAAA,GACO,MAAM3W,EAAUlpB,KAAKs3B,YAAY3qB,QAC7Buc,GACAlpB,KAAKy/B,UAAUvW,OAAS13B,EAAW,UAAU,EAErD,CACHqqC,eAAAA,CAAgBH,GACT,MAAM9hB,EAAO5Z,KAAK44B,MACZjlB,EAAW3T,KAAKs3B,YAAY1d,KAClC,IAAK,MAAO+a,EAAQmL,EAAMC,KAAS//B,KAAKo5B,UACpCp5B,KAAK20B,GAAQmL,EAAMC,GAEvB//B,KAAKo5B,UAAY,GACjB,MAAM4G,EAAUrsB,EAASrV,OACnB2hC,EAAUrmB,EAAKtb,OACf+N,EAAQ1c,KAAKE,IAAIowC,EAASD,GAC5B3zB,GACArM,KAAK2lB,MAAM,EAAGtZ,GAEd4zB,EAAUD,EACVhgC,KAAKkgC,gBAAgBF,EAASC,EAAUD,EAAStE,GAC1CuE,EAAUD,GACjBhgC,KAAKmgC,gBAAgBF,EAASD,EAAUC,EAEhD,CACHC,eAAAA,CAAgB12B,EAAO6C,EAAOqvB,GAAmB,GAC1C,MAAMzvB,EAAOjM,KAAKs3B,YACZ1d,EAAO3N,EAAK2N,KACZnQ,EAAMD,EAAQ6C,EACpB,IAAIna,EACJ,MAAMkuC,EAAQ/b,IAEV,IADAA,EAAI/lB,QAAU+N,EACVna,EAAImyB,EAAI/lB,OAAS,EAAGpM,GAAKuX,EAAKvX,IAC9BmyB,EAAInyB,GAAKmyB,EAAInyB,EAAIma,IAIzB,IADA+zB,EAAKxmB,GACD1nB,EAAIsX,EAAOtX,EAAIuX,IAAOvX,EACtB0nB,EAAK1nB,GAAK,IAAI8N,KAAKs5B,gBAEnBt5B,KAAKylB,UACL2a,EAAKn0B,EAAKQ,SAEdzM,KAAK2lB,MAAMnc,EAAO6C,GACdqvB,GACA17B,KAAKqgC,eAAezmB,EAAMpQ,EAAO6C,EAAO,QAEhD,CACAg0B,cAAAA,CAAenX,EAAS1f,EAAO6C,EAAOmI,GAAO,CAChD2rB,eAAAA,CAAgB32B,EAAO6C,GAChB,MAAMJ,EAAOjM,KAAKs3B,YAClB,GAAIt3B,KAAKylB,SAAU,CACf,MAAM6a,EAAUr0B,EAAKQ,QAAQxB,OAAOzB,EAAO6C,GACvCJ,EAAKwtB,UACLvB,GAAYjsB,EAAMq0B,EAE1B,CACAr0B,EAAK2N,KAAK3O,OAAOzB,EAAO6C,EAC5B,CACHk0B,KAAAA,CAAMn9B,GACC,GAAIpD,KAAKylB,SACLzlB,KAAKo5B,UAAUxzB,KAAKxC,OACjB,CACH,MAAOuxB,EAAQmL,EAAMC,GAAQ38B,EAC7BpD,KAAK20B,GAAQmL,EAAMC,EACvB,CACA//B,KAAK2R,MAAM6uB,aAAa56B,KAAK,CACzB5F,KAAKiE,SACFb,GAEX,CACAq9B,WAAAA,GACI,MAAMp0B,EAAQq0B,UAAUpiC,OACxB0B,KAAKugC,MAAM,CACP,kBACAvgC,KAAK65B,aAAajgB,KAAKtb,OAAS+N,EAChCA,GAER,CACAs0B,UAAAA,GACI3gC,KAAKugC,MAAM,CACP,kBACAvgC,KAAKs3B,YAAY1d,KAAKtb,OAAS,EAC/B,GAER,CACAsiC,YAAAA,GACI5gC,KAAKugC,MAAM,CACP,kBACA,EACA,GAER,CACAM,aAAAA,CAAcr3B,EAAO6C,GACbA,GACArM,KAAKugC,MAAM,CACP,kBACA/2B,EACA6C,IAGR,MAAMy0B,EAAWJ,UAAUpiC,OAAS,EAChCwiC,GACA9gC,KAAKugC,MAAM,CACP,kBACA/2B,EACAs3B,GAGZ,CACAC,cAAAA,GACI/gC,KAAKugC,MAAM,CACP,kBACA,EACAG,UAAUpiC,QAElB,EAcH,SAAS0iC,GAAqB/0B,GAC3B,MAAMgJ,EAAQhJ,EAAKM,OACbgF,EAbV,SAA2B0D,EAAOpV,GAC9B,IAAKoV,EAAMgsB,OAAOC,KAAM,CACpB,MAAMC,EAAelsB,EAAMkiB,wBAAwBt3B,GACnD,IAAI0R,EAAS,GACb,IAAI,IAAIrf,EAAI,EAAG2R,EAAOs9B,EAAa7iC,OAAQpM,EAAI2R,EAAM3R,IACjDqf,EAASA,EAAO6vB,OAAOD,EAAajvC,GAAGmlC,WAAWqG,mBAAmBzoB,IAEzEA,EAAMgsB,OAAOC,KAAO/1B,GAAaoG,EAAO8vB,KAAK,CAAC5wC,EAAGC,IAAID,EAAIC,GAC7D,CACA,OAAOukB,EAAMgsB,OAAOC,IACxB,CAGmBI,CAAkBrsB,EAAOhJ,EAAKpM,MAC7C,IACI3N,EAAG2R,EAAM09B,EAAMtZ,EADfp4B,EAAMolB,EAAMusB,QAEhB,MAAMC,EAAmBA,KACR,QAATF,YAAkBA,IAGlBt7B,GAAQgiB,KACRp4B,EAAMF,KAAKE,IAAIA,EAAKF,KAAKyX,IAAIm6B,EAAOtZ,IAASp4B,IAEjDo4B,EAAOsZ,IAEX,IAAIrvC,EAAI,EAAG2R,EAAO0N,EAAOjT,OAAQpM,EAAI2R,IAAQ3R,EACzCqvC,EAAOtsB,EAAMjI,iBAAiBuE,EAAOrf,IACrCuvC,IAGJ,IADAxZ,OAAOz2B,EACHU,EAAI,EAAG2R,EAAOoR,EAAMvD,MAAMpT,OAAQpM,EAAI2R,IAAQ3R,EAC9CqvC,EAAOtsB,EAAMysB,gBAAgBxvC,GAC7BuvC,IAEJ,OAAO5xC,CACX,CA0DA,SAAS8xC,GAAWC,EAAOv7B,EAAMmG,EAAQta,GAMrC,OALIK,EAAQqvC,GAtBhB,SAAuBA,EAAOv7B,EAAMmG,EAAQta,GACxC,MAAM2vC,EAAar1B,EAAOmZ,MAAMic,EAAM,GAAI1vC,GACpC4vC,EAAWt1B,EAAOmZ,MAAMic,EAAM,GAAI1vC,GAClCrC,EAAMF,KAAKE,IAAIgyC,EAAYC,GAC3BlyC,EAAMD,KAAKC,IAAIiyC,EAAYC,GACjC,IAAIC,EAAWlyC,EACXmyC,EAASpyC,EACTD,KAAKyX,IAAIvX,GAAOF,KAAKyX,IAAIxX,KACzBmyC,EAAWnyC,EACXoyC,EAASnyC,GAEbwW,EAAKmG,EAAOI,MAAQo1B,EACpB37B,EAAK47B,QAAU,CACXF,WACAC,SACAx4B,MAAOq4B,EACPp4B,IAAKq4B,EACLjyC,MACAD,MAER,CAGQsyC,CAAcN,EAAOv7B,EAAMmG,EAAQta,GAEnCmU,EAAKmG,EAAOI,MAAQJ,EAAOmZ,MAAMic,EAAO1vC,GAErCmU,CACX,CACA,SAAS87B,GAAsBl2B,EAAM2N,EAAMpQ,EAAO6C,GAC9C,MAAME,EAASN,EAAKM,OACdC,EAASP,EAAKO,OACd+vB,EAAShwB,EAAOiwB,YAChBC,EAAclwB,IAAWC,EACzBkZ,EAAS,GACf,IAAIxzB,EAAG2R,EAAMwC,EAAMu7B,EACnB,IAAI1vC,EAAIsX,EAAO3F,EAAO2F,EAAQ6C,EAAOna,EAAI2R,IAAQ3R,EAC7C0vC,EAAQhoB,EAAK1nB,GACbmU,EAAO,CAAA,EACPA,EAAKkG,EAAOK,MAAQ6vB,GAAelwB,EAAOoZ,MAAM4W,EAAOrqC,GAAIA,GAC3DwzB,EAAO9f,KAAK+7B,GAAWC,EAAOv7B,EAAMmG,EAAQta,IAEhD,OAAOwzB,CACX,CACA,SAAS0c,GAAWC,GAChB,OAAOA,QAA8B7wC,IAApB6wC,EAAON,eAA4CvwC,IAAlB6wC,EAAOL,MAC7D,CAiCA,SAASM,GAAiB1rB,EAAYlS,EAAS2xB,EAAOpyB,GAClD,IAAIs+B,EAAO79B,EAAQ89B,cACnB,MAAMhO,EAAM,CAAA,EACZ,IAAK+N,EAED,YADA3rB,EAAW4rB,cAAgBhO,GAG/B,IAAa,IAAT+N,EAOA,YANA3rB,EAAW4rB,cAAgB,CACvBnrB,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,IAId,MAAMhO,MAAEA,EAAKC,IAAGA,EAAGhG,QAAGA,EAAO4T,IAAGA,EAAGE,OAAGA,GA1C1C,SAAqBX,GACjB,IAAInT,EAAS+F,EAAOC,EAAK4N,EAAKE,EAiB9B,OAhBIX,EAAW6rB,YACXh/B,EAAUmT,EAAW2kB,KAAO3kB,EAAWzjB,EACvCqW,EAAQ,OACRC,EAAM,UAENhG,EAAUmT,EAAW2kB,KAAO3kB,EAAWtR,EACvCkE,EAAQ,SACRC,EAAM,OAENhG,GACA4T,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEN,CACH/N,QACAC,MACAhG,UACA4T,MACAE,SAER,CAiBsDmrB,CAAY9rB,GACjD,WAAT2rB,GAAqBlM,IACrBzf,EAAW+rB,oBAAqB,GAC3BtM,EAAMwB,MAAQ,KAAO5zB,EACtBs+B,EAAOlrB,GACCgf,EAAMyB,SAAW,KAAO7zB,EAChCs+B,EAAOhrB,GAEPid,EAAIoO,GAAUrrB,EAAQ/N,EAAOC,EAAKhG,KAAY,EAC9C8+B,EAAOlrB,IAGfmd,EAAIoO,GAAUL,EAAM/4B,EAAOC,EAAKhG,KAAY,EAC5CmT,EAAW4rB,cAAgBhO,CAC/B,CACA,SAASoO,GAAUL,EAAM9xC,EAAGC,EAAG+S,GAS/B,IAAco/B,EAAM9+B,EAAI++B,EAFpB,OANIr/B,GAQgBq/B,EAPKpyC,EACrB6xC,EAAOQ,GADPR,GAOMM,EAPMN,MAOAx+B,EAPMtT,GAQDqyC,EAAKD,IAASC,EAAK/+B,EAAK8+B,EAPnBnyC,EAAGD,IAEzB8xC,EAAOQ,GAASR,EAAM9xC,EAAGC,GAEtB6xC,CACX,CAIA,SAASQ,GAASxzC,EAAGia,EAAOC,GACxB,MAAa,UAANla,EAAgBia,EAAc,QAANja,EAAcka,EAAMla,CACvD,CACA,SAASyzC,GAAiBpsB,GAAYqsB,cAAEA,GAAkBhkC,GACtD2X,EAAWqsB,cAAkC,SAAlBA,EAAqC,IAAVhkC,EAAc,IAAO,EAAIgkC,CACnF,CAzMAxwB,EAAA,oBAAA8lB,IA0MA,MAAM2K,WAAsB3K,GACxBC,UAAY,MACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjB6J,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACTrsB,WAAY,CACR1G,QAAS,CACLzQ,KAAM,SACN+W,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnB4hB,iBAAmB,CACZtjB,OAAQ,CACJouB,QAAS,CACLzjC,KAAM,WACN6X,QAAQ,EACRK,KAAM,CACFL,QAAQ,IAGhB6rB,QAAS,CACL1jC,KAAM,SACN8X,aAAa,KAI5B0kB,kBAAAA,CAAmBpwB,EAAM2N,EAAMpQ,EAAO6C,GAC/B,OAAO81B,GAAsBl2B,EAAM2N,EAAMpQ,EAAO6C,EACpD,CACH8vB,cAAAA,CAAelwB,EAAM2N,EAAMpQ,EAAO6C,GAC3B,OAAO81B,GAAsBl2B,EAAM2N,EAAMpQ,EAAO6C,EACpD,CACH+vB,eAAAA,CAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAC5B,MAAME,OAAEA,EAAMC,OAAGA,GAAYP,GACvBywB,SAAEA,EAAU,IAAGC,SAAGA,EAAU,KAAS38B,KAAKylB,SAC1CwV,EAA2B,MAAhB1uB,EAAOK,KAAe8vB,EAAWC,EAC5CzB,EAA2B,MAAhB1uB,EAAOI,KAAe8vB,EAAWC,EAC5CjX,EAAS,GACf,IAAIxzB,EAAG2R,EAAMwC,EAAMjG,EACnB,IAAIlO,EAAIsX,EAAO3F,EAAO2F,EAAQ6C,EAAOna,EAAI2R,IAAQ3R,EAC7CkO,EAAMwZ,EAAK1nB,GACXmU,EAAO,CAAA,EACPA,EAAKkG,EAAOK,MAAQL,EAAOoZ,MAAMpgB,EAAiBnF,EAAK66B,GAAW/oC,GAClEwzB,EAAO9f,KAAK+7B,GAAWp8B,EAAiBnF,EAAK86B,GAAW70B,EAAMmG,EAAQta,IAE1E,OAAOwzB,CACX,CACHoX,qBAAAA,CAAsBx1B,EAAO2N,EAAOyQ,EAAQ2Q,GACrCmN,MAAM1G,sBAAsBx1B,EAAO2N,EAAOyQ,EAAQ2Q,GAClD,MAAMgM,EAAS3c,EAAOuc,QAClBI,GAAUptB,IAAUjV,KAAKs3B,YAAY9qB,SACrClF,EAAMzX,IAAMF,KAAKE,IAAIyX,EAAMzX,IAAKwyC,EAAOxyC,KACvCyX,EAAM1X,IAAMD,KAAKC,IAAI0X,EAAM1X,IAAKyyC,EAAOzyC,KAE/C,CACH+tC,cAAAA,GACO,OAAO,CACX,CACHC,gBAAAA,CAAiB35B,GACV,MAAMgI,EAAOjM,KAAKs3B,aACZ/qB,OAAEA,EAAMC,OAAGA,GAAYP,EACvByZ,EAAS1lB,KAAK48B,UAAU34B,GACxBo+B,EAAS3c,EAAOuc,QAChB//B,EAAQkgC,GAAWC,GAAU,IAAMA,EAAO74B,MAAQ,KAAO64B,EAAO54B,IAAM,IAAM,GAAK+C,EAAOsxB,iBAAiBpY,EAAOlZ,EAAOI,OAC7H,MAAO,CACHixB,MAAO,GAAKtxB,EAAOuxB,iBAAiBpY,EAAOnZ,EAAOK,OAClD1K,QAER,CACAq3B,UAAAA,GACIv5B,KAAKi5B,qBAAsB,EAC3BuK,MAAMjK,aACOv5B,KAAKs3B,YACbjB,MAAQr2B,KAAK65B,aAAaxD,KACnC,CACAlC,MAAAA,CAAO3f,GACH,MAAMvI,EAAOjM,KAAKs3B,YAClBt3B,KAAKqgC,eAAep0B,EAAK2N,KAAM,EAAG3N,EAAK2N,KAAKtb,OAAQkW,EACxD,CACA6rB,cAAAA,CAAeoD,EAAMj6B,EAAO6C,EAAOmI,GAC/B,MAAMsmB,EAAiB,UAATtmB,GACRvQ,MAAEA,EAAQqzB,aAAa9qB,OAAEA,IAAexM,KACxCu7B,EAAO/uB,EAAOk3B,eACdjB,EAAaj2B,EAAOm3B,eACpBC,EAAQ5jC,KAAK6jC,aACb3E,cAAEA,EAAaD,eAAGA,GAAoBj/B,KAAKo/B,kBAAkB51B,EAAOgL,GAC1E,IAAI,IAAItiB,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,EAAOna,IAAI,CACtC,MAAMwzB,EAAS1lB,KAAK48B,UAAU1qC,GACxB4xC,EAAUhJ,GAAS74B,EAAcyjB,EAAOlZ,EAAOI,OAAS,CAC1D2uB,OACAwI,KAAMxI,GACNv7B,KAAKgkC,yBAAyB9xC,GAC5B+xC,EAAUjkC,KAAKkkC,yBAAyBhyC,EAAG0xC,GAC3CvN,GAAS3Q,EAAO6R,SAAW,CAAA,GAAI/qB,EAAOI,MACtCgK,EAAa,CACf6rB,aACAlH,KAAMuI,EAAQvI,KACdoH,oBAAqBtM,GAAS+L,GAAW1c,EAAOuc,UAAYh+B,IAAUoyB,EAAMwB,MAAQ5zB,IAAUoyB,EAAMyB,QACpG3kC,EAAGsvC,EAAaqB,EAAQC,KAAOE,EAAQE,OACvC7+B,EAAGm9B,EAAawB,EAAQE,OAASL,EAAQC,KACzC1oB,OAAQonB,EAAawB,EAAQ79B,KAAOzW,KAAKyX,IAAI08B,EAAQ19B,MACrDsS,MAAO+pB,EAAa9yC,KAAKyX,IAAI08B,EAAQ19B,MAAQ69B,EAAQ79B,MAErD64B,IACAroB,EAAWlS,QAAUw6B,GAAiBl/B,KAAKk+B,0BAA0BhsC,EAAGuxC,EAAKvxC,GAAG2kB,OAAS,SAAWrC,IAExG,MAAM9P,EAAUkS,EAAWlS,SAAW++B,EAAKvxC,GAAGwS,QAC9C49B,GAAiB1rB,EAAYlS,EAAS2xB,EAAOpyB,GAC7C++B,GAAiBpsB,EAAYlS,EAASk/B,EAAM3kC,OAC5Ce,KAAKw/B,cAAciE,EAAKvxC,GAAIA,EAAG0kB,EAAYpC,EAC/C,CACJ,CACH4vB,UAAAA,CAAW55B,EAAM2zB,GACV,MAAM5xB,OAAEA,GAAYvM,KAAKs3B,YACnBpB,EAAW3pB,EAAO4qB,wBAAwBn3B,KAAK24B,OAAOrU,OAAQrY,GAAOA,EAAKorB,WAAW3yB,QAAQ2+B,SAC7F1M,EAAUpqB,EAAO7H,QAAQiyB,QACzBE,EAAS,GACTwN,EAAgBrkC,KAAKs3B,YAAYD,WAAWuF,UAAUuB,GACtDmG,EAAcD,GAAiBA,EAAc93B,EAAOK,MACpD23B,EAAYt4B,IACd,MAAMyZ,EAASzZ,EAAKQ,QAAQ+3B,KAAMn+B,GAAOA,EAAKkG,EAAOK,QAAU03B,GACzDjjC,EAAMqkB,GAAUA,EAAOzZ,EAAKO,OAAOI,MACzC,GAAI3K,EAAcZ,IAAQ0G,MAAM1G,GAC5B,OAAO,GAGf,IAAK,MAAM4K,KAAQiqB,EACf,SAAkB1kC,IAAd2sC,IAA2BoG,EAASt4B,QAGxB,IAAZ0qB,IAAoD,IAA/BE,EAAOryB,QAAQyH,EAAKoqB,aAA6B7kC,IAAZmlC,QAAwCnlC,IAAfya,EAAKoqB,QACxFQ,EAAOjxB,KAAKqG,EAAKoqB,OAEjBpqB,EAAKhI,QAAUuG,GACf,MAMR,OAHKqsB,EAAOv4B,QACRu4B,EAAOjxB,UAAKpU,GAETqlC,CACX,CACH4N,cAAAA,CAAexgC,GACR,OAAOjE,KAAKokC,gBAAW5yC,EAAWyS,GAAO3F,MAC7C,CACAomC,aAAAA,GACI,OAAO1kC,KAAK2kC,WAAWrmC,MAC3B,CACAsmC,2BAAAA,GACI,MAAM1vB,EAASlV,KAAK2R,MAAMuD,OACpB2vB,EAAe7kC,KAAK2R,MAAMjN,QAAQ4P,UACxC,OAAOrW,OAAOD,KAAKkX,GAAQoP,OAAQ/f,GAAM2Q,EAAO3Q,GAAKqI,OAASi4B,GAAc5M,OAChF,CACA0M,QAAAA,GACI,MAAM/3B,EAAO,CAAA,EACPk4B,EAAmB9kC,KAAK4kC,8BAC9B,IAAK,MAAMj4B,KAAW3M,KAAK2R,MAAMiI,KAAKtG,SAClC1G,EAAK/J,EAAgD,MAAjC7C,KAAK2R,MAAMjN,QAAQ4P,UAAoB3H,EAAQqtB,QAAUrtB,EAAQutB,QAAS4K,KAAqB,EAEvH,OAAO7mC,OAAOD,KAAK4O,EACvB,CACHm4B,cAAAA,CAAe/gC,EAAcwR,EAAM2oB,GAC5B,MAAMtH,EAAS72B,KAAKokC,WAAWpgC,EAAcm6B,GACvCl6B,OAAiBzS,IAATgkB,EAAqBqhB,EAAOryB,QAAQgR,IAAQ,EAC1D,OAAiB,IAAVvR,EAAe4yB,EAAOv4B,OAAS,EAAI2F,CAC9C,CACH4/B,SAAAA,GACO,MAAM9lB,EAAO/d,KAAK0E,QACZuH,EAAOjM,KAAKs3B,YACZ/qB,EAASN,EAAKM,OACdy4B,EAAS,GACf,IAAI9yC,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAOoI,EAAK2N,KAAKtb,OAAQpM,EAAI2R,IAAQ3R,EAC5C8yC,EAAOp/B,KAAK2G,EAAOS,iBAAiBhN,KAAK48B,UAAU1qC,GAAGqa,EAAOK,MAAO1a,IAExE,MAAM+yC,EAAelnB,EAAKknB,aAE1B,MAAO,CACHp1C,IAFQo1C,GAAgBjE,GAAqB/0B,GAG7C+4B,SACAx7B,MAAO+C,EAAO24B,YACdz7B,IAAK8C,EAAO44B,UACZC,WAAYplC,KAAKykC,iBACjBxvB,MAAO1I,EACP82B,QAAStlB,EAAKslB,QACdpkC,MAAOgmC,EAAe,EAAIlnB,EAAKolB,mBAAqBplB,EAAKqlB,cAEjE,CACHY,wBAAAA,CAAyB//B,GAClB,MAAQqzB,aAAa9qB,OAAEA,EAAMitB,SAAGA,EAAWx1B,MAAOD,GAAkBU,SAAW62B,KAAM8J,EAASC,aAAGA,IAAqBtlC,KAChHulC,EAAaF,GAAa,EAC1B3f,EAAS1lB,KAAK48B,UAAU34B,GACxBo+B,EAAS3c,EAAOuc,QAChBuD,EAAWpD,GAAWC,GAC5B,IAGI0B,EAAM39B,EAHNlE,EAAQwjB,EAAOlZ,EAAOI,MACtBpD,EAAQ,EACRlL,EAASm7B,EAAWz5B,KAAKo2B,WAAW5pB,EAAQkZ,EAAQ+T,GAAYv3B,EAEhE5D,IAAW4D,IACXsH,EAAQlL,EAAS4D,EACjB5D,EAAS4D,GAETsjC,IACAtjC,EAAQmgC,EAAON,SACfzjC,EAAS+jC,EAAOL,OAASK,EAAON,SAClB,IAAV7/B,GAAe+E,GAAK/E,KAAW+E,GAAKo7B,EAAOL,UAC3Cx4B,EAAQ,GAEZA,GAAStH,GAEb,MAAM2/B,EAAc5/B,EAAcojC,IAAeG,EAAuBh8B,EAAZ67B,EAC5D,IAAI9J,EAAO/uB,EAAOQ,iBAAiB60B,GAOnC,GALIkC,EADA/jC,KAAK2R,MAAM8zB,kBAAkBxhC,GACtBuI,EAAOQ,iBAAiBxD,EAAQlL,GAEhCi9B,EAEXn1B,EAAO29B,EAAOxI,EACV5rC,KAAKyX,IAAIhB,GAAQk/B,EAAc,CAC/Bl/B,EAtTZ,SAAiBA,EAAMoG,EAAQ+4B,GAC3B,OAAa,IAATn/B,EACOa,GAAKb,IAERoG,EAAOm3B,eAAiB,GAAI,IAAOn3B,EAAO3c,KAAO01C,EAAa,KAC1E,CAiTmBG,CAAQt/B,EAAMoG,EAAQ+4B,GAAcD,EACvCpjC,IAAUqjC,IACVhK,GAAQn1B,EAAO,GAEnB,MAAMu/B,EAAan5B,EAAOo5B,mBAAmB,GACvCC,EAAWr5B,EAAOo5B,mBAAmB,GACrC/1C,EAAMF,KAAKE,IAAI81C,EAAYE,GAC3Bj2C,EAAMD,KAAKC,IAAI+1C,EAAYE,GACjCtK,EAAO5rC,KAAKC,IAAID,KAAKE,IAAI0rC,EAAM3rC,GAAMC,GACrCk0C,EAAOxI,EAAOn1B,EACVqzB,IAAa+L,IACb9f,EAAO6R,QAAQ/qB,EAAOI,MAAMmrB,cAAc/zB,GAAgBwI,EAAOs5B,iBAAiB/B,GAAQv3B,EAAOs5B,iBAAiBvK,GAE1H,CACA,GAAIA,IAAS/uB,EAAOQ,iBAAiBu4B,GAAa,CAC9C,MAAMQ,EAAW9+B,GAAKb,GAAQoG,EAAOw5B,qBAAqBT,GAAc,EACxEhK,GAAQwK,EACR3/B,GAAQ2/B,CACZ,CACA,MAAO,CACH3/B,OACAm1B,OACAwI,OACAI,OAAQJ,EAAO39B,EAAO,EAE9B,CACH89B,wBAAAA,CAAyBjgC,EAAO2/B,GACzB,MAAM3uB,EAAQ2uB,EAAM3uB,MACdvQ,EAAU1E,KAAK0E,QACf6/B,EAAW7/B,EAAQ6/B,SACnB0B,EAAkBpjC,EAAe6B,EAAQuhC,gBAAiBC,KAChE,IAAI/B,EAAQ/9B,EACZ,MAAM+/B,EAAYnmC,KAAK0kC,gBACvB,GAAId,EAAMP,QAAS,CACf,MAAM+B,EAAab,EAAWvkC,KAAKykC,eAAexgC,GAAS2/B,EAAMwB,WAC3D99B,EAAiC,SAAzB5C,EAAQugC,aA5ZjC,SAAmChhC,EAAO2/B,EAAOl/B,EAAS0gC,GACvD,MAAMJ,EAASpB,EAAMoB,OACfzD,EAAOyD,EAAO/gC,GACpB,IAAIgkB,EAAOhkB,EAAQ,EAAI+gC,EAAO/gC,EAAQ,GAAK,KACvCmiB,EAAOniB,EAAQ+gC,EAAO1mC,OAAS,EAAI0mC,EAAO/gC,EAAQ,GAAK,KAC3D,MAAMmiC,EAAU1hC,EAAQy+B,mBACX,OAATlb,IACAA,EAAOsZ,GAAiB,OAATnb,EAAgBwd,EAAMn6B,IAAMm6B,EAAMp6B,MAAQ4c,EAAOmb,IAEvD,OAATnb,IACAA,EAAOmb,EAAOA,EAAOtZ,GAEzB,MAAMze,EAAQ+3B,GAAQA,EAAO5xC,KAAKE,IAAIo4B,EAAM7B,IAAS,EAAIggB,EAEzD,MAAO,CACHC,MAFS12C,KAAKyX,IAAIgf,EAAO6B,GAAQ,EAAIme,EAEvBhB,EACdnmC,MAAOyF,EAAQ0+B,cACf55B,QAER,CAyY4D88B,CAA0BriC,EAAO2/B,EAAOl/B,EAAS0gC,EAAae,GA5azH,SAAkCliC,EAAO2/B,EAAOl/B,EAAS0gC,GACtD,MAAMmB,EAAY7hC,EAAQugC,aAC1B,IAAI7+B,EAAMnH,EAQV,OAPIgD,EAAcskC,IACdngC,EAAOw9B,EAAM/zC,IAAM6U,EAAQy+B,mBAC3BlkC,EAAQyF,EAAQ0+B,gBAEhBh9B,EAAOmgC,EAAYnB,EACnBnmC,EAAQ,GAEL,CACHonC,MAAOjgC,EAAOg/B,EACdnmC,QACAuK,MAAOo6B,EAAMoB,OAAO/gC,GAASmC,EAAO,EAE5C,CA6ZuIogC,CAAyBviC,EAAO2/B,EAAOl/B,EAAS0gC,EAAae,GAClLM,EAA0C,MAAjCzmC,KAAK2R,MAAMjN,QAAQ4P,UAAoBtU,KAAK65B,aAAaG,QAAUh6B,KAAK65B,aAAaK,QAC9FwM,EAAa1mC,KAAK2kC,WAAWngC,QAAQ3B,EAAe4jC,EAAQzmC,KAAK4kC,gCACjE+B,EAAa3mC,KAAK+kC,eAAe/kC,KAAKiE,MAAOjE,KAAKs3B,YAAYjB,MAAOkO,EAAWtgC,OAAQzS,GAAak1C,EAC3GvC,EAAS78B,EAAMkC,MAAQlC,EAAM++B,MAAQM,EAAar/B,EAAM++B,MAAQ,EAChEjgC,EAAOzW,KAAKE,IAAIo2C,EAAiB3+B,EAAM++B,MAAQ/+B,EAAMrI,MACzD,MACIklC,EAASlvB,EAAMjI,iBAAiBhN,KAAK48B,UAAU34B,GAAOgR,EAAMrI,MAAO3I,GACnEmC,EAAOzW,KAAKE,IAAIo2C,EAAiBrC,EAAM/zC,IAAM+zC,EAAM3kC,OAEvD,MAAO,CACHs8B,KAAM4I,EAAS/9B,EAAO,EACtB29B,KAAMI,EAAS/9B,EAAO,EACtB+9B,SACA/9B,OAER,CACA2rB,IAAAA,GACI,MAAM9lB,EAAOjM,KAAKs3B,YACZ9qB,EAASP,EAAKO,OACdo6B,EAAQ36B,EAAK2N,KACb/V,EAAO+iC,EAAMtoC,OACnB,IAAIpM,EAAI,EACR,KAAMA,EAAI2R,IAAQ3R,EACyB,OAAnC8N,KAAK48B,UAAU1qC,GAAGsa,EAAOI,OAAmBg6B,EAAM10C,GAAGmrC,QACrDuJ,EAAM10C,GAAG6/B,KAAK/xB,KAAKqY,KAG/B,EACJ5F,EAAA,gBAAAywB,IAEA,MAAM2D,WAAyBtO,GAC3BC,UAAY,SACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjBtiB,WAAY,CACR1G,QAAS,CACLzQ,KAAM,SACN+W,WAAY,CACR,IACA,IACA,cACA,aAKnB4hB,iBAAmB,CACZtjB,OAAQ,CACJ/hB,EAAG,CACC0M,KAAM,UAEVyF,EAAG,CACCzF,KAAM,YAIlB05B,UAAAA,GACIv5B,KAAKi5B,qBAAsB,EAC3BuK,MAAMjK,YACV,CACH8C,kBAAAA,CAAmBpwB,EAAM2N,EAAMpQ,EAAO6C,GAC/B,MAAMqZ,EAAS8d,MAAMnH,mBAAmBpwB,EAAM2N,EAAMpQ,EAAO6C,GAC3D,IAAI,IAAIna,EAAI,EAAGA,EAAIwzB,EAAOpnB,OAAQpM,IAC9BwzB,EAAOxzB,GAAG+vC,QAAUjiC,KAAKk+B,0BAA0BhsC,EAAIsX,GAAOuS,OAElE,OAAO2J,CACX,CACHyW,cAAAA,CAAelwB,EAAM2N,EAAMpQ,EAAO6C,GAC3B,MAAMqZ,EAAS8d,MAAMrH,eAAelwB,EAAM2N,EAAMpQ,EAAO6C,GACvD,IAAI,IAAIna,EAAI,EAAGA,EAAIwzB,EAAOpnB,OAAQpM,IAAI,CAClC,MAAMmU,EAAOuT,EAAKpQ,EAAQtX,GAC1BwzB,EAAOxzB,GAAG+vC,QAAUp/B,EAAewD,EAAK,GAAIrG,KAAKk+B,0BAA0BhsC,EAAIsX,GAAOuS,OAC1F,CACA,OAAO2J,CACX,CACH0W,eAAAA,CAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAC5B,MAAMqZ,EAAS8d,MAAMpH,gBAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GACxD,IAAI,IAAIna,EAAI,EAAGA,EAAIwzB,EAAOpnB,OAAQpM,IAAI,CAClC,MAAMmU,EAAOuT,EAAKpQ,EAAQtX,GAC1BwzB,EAAOxzB,GAAG+vC,QAAUp/B,EAAewD,GAAQA,EAAKjV,IAAMiV,EAAKjV,EAAG4O,KAAKk+B,0BAA0BhsC,EAAIsX,GAAOuS,OAC5G,CACA,OAAO2J,CACX,CACHiY,cAAAA,GACO,MAAM/jB,EAAO5Z,KAAKs3B,YAAY1d,KAC9B,IAAIhqB,EAAM,EACV,IAAI,IAAIsC,EAAI0nB,EAAKtb,OAAS,EAAGpM,GAAK,IAAKA,EACnCtC,EAAMD,KAAKC,IAAIA,EAAKgqB,EAAK1nB,GAAGkU,KAAKpG,KAAKk+B,0BAA0BhsC,IAAM,GAE1E,OAAOtC,EAAM,GAAKA,CACtB,CACHguC,gBAAAA,CAAiB35B,GACV,MAAMgI,EAAOjM,KAAKs3B,YACZiF,EAASv8B,KAAK2R,MAAMiI,KAAK2iB,QAAU,IACnCjvB,OAAEA,EAAMC,OAAGA,GAAYtB,EACvByZ,EAAS1lB,KAAK48B,UAAU34B,GACxB9Q,EAAIma,EAAOwwB,iBAAiBpY,EAAOvyB,GACnCmS,EAAIiI,EAAOuwB,iBAAiBpY,EAAOpgB,GACnClU,EAAIs0B,EAAOuc,QACjB,MAAO,CACHpE,MAAOtB,EAAOt4B,IAAU,GACxB/B,MAAO,IAAM/O,EAAI,KAAOmS,GAAKlU,EAAI,KAAOA,EAAI,IAAM,IAE1D,CACA+iC,MAAAA,CAAO3f,GACH,MAAMtI,EAASlM,KAAKs3B,YAAY1d,KAChC5Z,KAAKqgC,eAAen0B,EAAQ,EAAGA,EAAO5N,OAAQkW,EAClD,CACA6rB,cAAAA,CAAen0B,EAAQ1C,EAAO6C,EAAOmI,GACjC,MAAMsmB,EAAiB,UAATtmB,GACRjI,OAAEA,EAAMC,OAAGA,GAAYxM,KAAKs3B,aAC5B4H,cAAEA,EAAaD,eAAGA,GAAoBj/B,KAAKo/B,kBAAkB51B,EAAOgL,GACpEgjB,EAAQjrB,EAAOK,KACf6qB,EAAQjrB,EAAOI,KACrB,IAAI,IAAI1a,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,EAAOna,IAAI,CACtC,MAAMib,EAAQjB,EAAOha,GACfwzB,GAAUoV,GAAS96B,KAAK48B,UAAU1qC,GAClC0kB,EAAa,CAAA,EACb6Q,EAAS7Q,EAAW4gB,GAASsD,EAAQvuB,EAAOq5B,mBAAmB,IAAOr5B,EAAOS,iBAAiB0Y,EAAO8R,IACrG9P,EAAS9Q,EAAW6gB,GAASqD,EAAQtuB,EAAOk3B,eAAiBl3B,EAAOQ,iBAAiB0Y,EAAO+R,IAClG7gB,EAAWkP,KAAO/d,MAAM0f,IAAW1f,MAAM2f,GACrCuX,IACAroB,EAAWlS,QAAUw6B,GAAiBl/B,KAAKk+B,0BAA0BhsC,EAAGib,EAAM0J,OAAS,SAAWrC,GAC9FsmB,IACAlkB,EAAWlS,QAAQqX,OAAS,IAGpC/b,KAAKw/B,cAAcryB,EAAOjb,EAAG0kB,EAAYpC,EAC7C,CACJ,CACH0pB,yBAAAA,CAA0Bj6B,EAAOuQ,GAC1B,MAAMkR,EAAS1lB,KAAK48B,UAAU34B,GAC9B,IAAIsN,EAASiyB,MAAMtF,0BAA0Bj6B,EAAOuQ,GAChDjD,EAAO+jB,UACP/jB,EAAStT,OAAOoB,OAAO,CAAA,EAAIkS,EAAQ,CAC/B+jB,SAAS,KAGjB,MAAMvZ,EAASxK,EAAOwK,OAKtB,MAJa,WAATvH,IACAjD,EAAOwK,OAAS,GAEpBxK,EAAOwK,QAAUlZ,EAAe6iB,GAAUA,EAAOuc,QAASlmB,GACnDxK,CACX,EACJkB,EAAA,mBAAAo0B,IAgCA,MAAMC,WAA2BvO,GAC7BC,UAAY,WACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjBnmB,UAAW,CACP4zB,eAAe,EACfC,cAAc,GAElBhwB,WAAY,CACR1G,QAAS,CACLzQ,KAAM,SACN+W,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZqwB,OAAQ,MACRnrB,SAAU,EACVorB,cAAe,IACfnrB,OAAQ,OACRorB,QAAS,EACT7yB,UAAW,KAEfkkB,mBAAqB,CACjBpiB,YAAcZ,GAAgB,YAATA,EACrBc,WAAad,GAAgB,YAATA,IAAuBA,EAAKa,WAAW,gBAAkBb,EAAKa,WAAW,oBAEpGmiB,iBAAmB,CACZzN,YAAa,EACbhW,QAAS,CACLqyB,OAAQ,CACJ7K,OAAQ,CACJ8K,cAAAA,CAAgB11B,GACZ,MAAMiI,EAAOjI,EAAMiI,KACnB,GAAIA,EAAK2iB,OAAOj+B,QAAUsb,EAAKtG,SAAShV,OAAQ,CAC5C,MAAQi+B,QAAQ1gB,WAAEA,EAAUrb,MAAGA,IAAcmR,EAAMy1B,OAAO1iC,QAC1D,OAAOkV,EAAK2iB,OAAO/pC,IAAI,CAACqrC,EAAO3rC,KAC3B,MACM6hB,EADOpC,EAAMgpB,eAAe,GACftD,WAAW5K,SAASv6B,GACvC,MAAO,CACH0mB,KAAMilB,EACNpf,UAAW1K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnBi0B,UAAW9mC,EACXwX,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZwhB,QAAS1rB,EAAM8zB,kBAAkBvzC,GACjC+R,MAAO/R,IAGnB,CACA,MAAO,EACX,GAEJ2iB,OAAAA,CAAShkB,EAAG02C,EAAYH,GACpBA,EAAOz1B,MAAM61B,qBAAqBD,EAAWtjC,OAC7CmjC,EAAOz1B,MAAMwiB,QACjB,KAIZv0B,WAAAA,CAAY+R,EAAO3N,GACfw/B,MAAM7xB,EAAO3N,GACbhE,KAAKi5B,qBAAsB,EAC3Bj5B,KAAKynC,iBAAcj2C,EACnBwO,KAAK0nC,iBAAcl2C,EACnBwO,KAAKmqB,aAAU34B,EACfwO,KAAKoqB,aAAU54B,CACnB,CACAgoC,UAAAA,GAAc,CACjB7T,KAAAA,CAAMnc,EAAO6C,GACN,MAAMuN,EAAO5Z,KAAK65B,aAAajgB,KACzB3N,EAAOjM,KAAKs3B,YAClB,IAAsB,IAAlBt3B,KAAKylB,SACLxZ,EAAKQ,QAAUmN,MACZ,CACH,IAKI1nB,EAAG2R,EALH8jC,EAAUz1C,IAAK0nB,EAAK1nB,GACxB,GAAIqQ,EAASqX,EAAKpQ,IAAS,CACvB,MAAMjF,IAAEA,EAAK,SAAavE,KAAKylB,SAC/BkiB,EAAUz1C,IAAKqT,EAAiBqU,EAAK1nB,GAAIqS,EAC7C,CAEA,IAAIrS,EAAIsX,EAAO3F,EAAO2F,EAAQ6C,EAAOna,EAAI2R,IAAQ3R,EAC7C+Z,EAAKQ,QAAQva,GAAKy1C,EAAOz1C,EAEjC,CACJ,CACH01C,YAAAA,GACO,OAAOz/B,GAAUnI,KAAK0E,QAAQoX,SAAW,GAC7C,CACH+rB,iBAAAA,GACO,OAAO1/B,GAAUnI,KAAK0E,QAAQwiC,cAClC,CACHY,mBAAAA,GACO,IAAIj4C,EAAM2W,GACN5W,GAAO4W,GACX,IAAI,IAAItU,EAAI,EAAGA,EAAI8N,KAAK2R,MAAMiI,KAAKtG,SAAShV,SAAUpM,EAClD,GAAI8N,KAAK2R,MAAMo2B,iBAAiB71C,IAAM8N,KAAK2R,MAAMgpB,eAAezoC,GAAG2N,OAASG,KAAK24B,MAAO,CACpF,MAAMtB,EAAar3B,KAAK2R,MAAMgpB,eAAezoC,GAAGmlC,WAC1Cvb,EAAWub,EAAWuQ,eACtBV,EAAgB7P,EAAWwQ,oBACjCh4C,EAAMF,KAAKE,IAAIA,EAAKisB,GACpBlsB,EAAMD,KAAKC,IAAIA,EAAKksB,EAAWorB,EACnC,CAEJ,MAAO,CACHprB,SAAUjsB,EACVq3C,cAAet3C,EAAMC,EAE7B,CACHskC,MAAAA,CAAO3f,GACA,MAAM7C,EAAQ3R,KAAK2R,OACb4e,UAAEA,GAAe5e,EACjB1F,EAAOjM,KAAKs3B,YACZ0Q,EAAO/7B,EAAK2N,KACZutB,EAAUnnC,KAAKioC,oBAAsBjoC,KAAKkoC,aAAaF,GAAQhoC,KAAK0E,QAAQyiC,QAC5EgB,EAAUx4C,KAAKC,KAAKD,KAAKE,IAAI0gC,EAAU7X,MAAO6X,EAAUlV,QAAU8rB,GAAW,EAAG,GAChFF,EAASt3C,KAAKE,KD90DNqS,EC80DuBlC,KAAK0E,QAAQuiC,OD90D7BlkC,EC80DqColC,ED90DR,iBAAVjmC,GAAsBA,EAAMc,SAAS,KAAOC,WAAWf,GAAS,KAAOA,EAAQa,GC80DnD,GD90DvDqlC,IAAClmC,EAAOa,EC+0DrB,MAAMslC,EAAcroC,KAAKsoC,eAAetoC,KAAKiE,QACvCijC,cAAEA,EAAaprB,SAAGA,GAAc9b,KAAK8nC,uBACrCS,OAAEA,EAAMC,OAAGA,EAAMre,QAAGA,EAAOC,QAAGA,GAhK5C,SAA2BtO,EAAUorB,EAAeD,GAChD,IAAIsB,EAAS,EACTC,EAAS,EACTre,EAAU,EACVC,EAAU,EACd,GAAI8c,EAAgB1gC,GAAK,CACrB,MAAMiiC,EAAa3sB,EACb4sB,EAAWD,EAAavB,EACxByB,EAASh5C,KAAKuf,IAAIu5B,GAClBG,EAASj5C,KAAKse,IAAIw6B,GAClBI,EAAOl5C,KAAKuf,IAAIw5B,GAChBI,EAAOn5C,KAAKse,IAAIy6B,GAChBK,EAAUA,CAAChgC,EAAOtY,EAAGC,IAAI6Y,GAAcR,EAAO0/B,EAAYC,GAAU,GAAQ,EAAI/4C,KAAKC,IAAIa,EAAGA,EAAIw2C,EAAQv2C,EAAGA,EAAIu2C,GAC/G+B,EAAUA,CAACjgC,EAAOtY,EAAGC,IAAI6Y,GAAcR,EAAO0/B,EAAYC,GAAU,MAAa/4C,KAAKE,IAAIY,EAAGA,EAAIw2C,EAAQv2C,EAAGA,EAAIu2C,GAChHgC,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQliC,GAAS+hC,EAAQE,GAChCK,EAAOH,EAAQziC,GAAIoiC,EAAQE,GAC3BO,EAAOJ,EAAQziC,GAAKM,GAAS+hC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBjf,IAAY8e,EAAOE,GAAQ,EAC3B/e,IAAY8e,EAAOE,GAAQ,CAC/B,CACA,MAAO,CACHb,SACAC,SACAre,UACAC,UAER,CAmIyDif,CAAkBvtB,EAAUorB,EAAeD,GACtFznB,GAAY+Q,EAAU7X,MAAQyuB,GAAWoB,EACzCtd,GAAasF,EAAUlV,OAAS8rB,GAAWqB,EAC3Cc,EAAY35C,KAAKC,IAAID,KAAKE,IAAI2vB,EAAUyL,GAAa,EAAG,GACxDyc,EAAc5kC,EAAY9C,KAAK0E,QAAQqX,OAAQutB,GAE/CC,GAAgB7B,EADF/3C,KAAKC,IAAI83C,EAAcT,EAAQ,IACAjnC,KAAKwpC,gCACxDxpC,KAAKmqB,QAAUA,EAAUud,EACzB1nC,KAAKoqB,QAAUA,EAAUsd,EACzBz7B,EAAKw9B,MAAQzpC,KAAK0pC,iBAClB1pC,KAAK0nC,YAAcA,EAAc6B,EAAevpC,KAAK2pC,qBAAqB3pC,KAAKiE,OAC/EjE,KAAKynC,YAAc93C,KAAKC,IAAIoQ,KAAK0nC,YAAc6B,EAAelB,EAAa,GAC3EroC,KAAKqgC,eAAe2H,EAAM,EAAGA,EAAK1pC,OAAQkW,EAC9C,CACHo1B,cAAAA,CAAe13C,EAAG4oC,GACX,MAAM/c,EAAO/d,KAAK0E,QACZuH,EAAOjM,KAAKs3B,YACZ4P,EAAgBlnC,KAAK6nC,oBAC3B,OAAI/M,GAAS/c,EAAK5K,UAAU4zB,gBAAkB/mC,KAAK2R,MAAM8zB,kBAAkBvzC,IAA0B,OAApB+Z,EAAKQ,QAAQva,IAAe+Z,EAAK2N,KAAK1nB,GAAGmrC,OAC/G,EAEJr9B,KAAK6pC,uBAAuB59B,EAAKQ,QAAQva,GAAKg1C,EAAgB1gC,GACzE,CACA65B,cAAAA,CAAe2H,EAAMx+B,EAAO6C,EAAOmI,GAC/B,MAAMsmB,EAAiB,UAATtmB,EACR7C,EAAQ3R,KAAK2R,MACb4e,EAAY5e,EAAM4e,UAElBuZ,EADOn4B,EAAMjN,QACQyO,UACrB42B,GAAWxZ,EAAU/Y,KAAO+Y,EAAUjZ,OAAS,EAC/C0yB,GAAWzZ,EAAUlZ,IAAMkZ,EAAUhZ,QAAU,EAC/CyvB,EAAelM,GAASgP,EAAc9C,aACtCS,EAAcT,EAAe,EAAIhnC,KAAKynC,YACtCC,EAAcV,EAAe,EAAIhnC,KAAK0nC,aACtCxI,cAAEA,EAAaD,eAAGA,GAAoBj/B,KAAKo/B,kBAAkB51B,EAAOgL,GAC1E,IACItiB,EADAu2C,EAAazoC,KAAK4nC,eAEtB,IAAI11C,EAAI,EAAGA,EAAIsX,IAAStX,EACpBu2C,GAAczoC,KAAK4pC,eAAe13C,EAAG4oC,GAEzC,IAAI5oC,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,IAASna,EAAE,CAClC,MAAMg1C,EAAgBlnC,KAAK4pC,eAAe13C,EAAG4oC,GACvCze,EAAM2rB,EAAK91C,GACX0kB,EAAa,CACfzjB,EAAG42C,EAAU/pC,KAAKmqB,QAClB7kB,EAAG0kC,EAAUhqC,KAAKoqB,QAClBqe,aACAC,SAAUD,EAAavB,EACvBA,gBACAQ,cACAD,eAEAxI,IACAroB,EAAWlS,QAAUw6B,GAAiBl/B,KAAKk+B,0BAA0BhsC,EAAGmqB,EAAIxF,OAAS,SAAWrC,IAEpGi0B,GAAcvB,EACdlnC,KAAKw/B,cAAcnjB,EAAKnqB,EAAG0kB,EAAYpC,EAC3C,CACJ,CACAk1B,cAAAA,GACI,MAAMz9B,EAAOjM,KAAKs3B,YACZ2S,EAAWh+B,EAAK2N,KACtB,IACI1nB,EADAu3C,EAAQ,EAEZ,IAAIv3C,EAAI,EAAGA,EAAI+3C,EAAS3rC,OAAQpM,IAAI,CAChC,MAAMgQ,EAAQ+J,EAAKQ,QAAQva,GACb,OAAVgQ,GAAmB6F,MAAM7F,KAAUlC,KAAK2R,MAAM8zB,kBAAkBvzC,IAAO+3C,EAAS/3C,GAAGmrC,SACnFoM,GAAS95C,KAAKyX,IAAIlF,GAE1B,CACA,OAAOunC,CACX,CACAI,sBAAAA,CAAuB3nC,GACnB,MAAMunC,EAAQzpC,KAAKs3B,YAAYmS,MAC/B,OAAIA,EAAQ,IAAM1hC,MAAM7F,GACbsE,IAAO7W,KAAKyX,IAAIlF,GAASunC,GAE7B,CACX,CACA7L,gBAAAA,CAAiB35B,GACb,MAAMgI,EAAOjM,KAAKs3B,YACZ3lB,EAAQ3R,KAAK2R,MACb4qB,EAAS5qB,EAAMiI,KAAK2iB,QAAU,GAC9Br6B,EAAQwO,GAAazE,EAAKQ,QAAQxI,GAAQ0N,EAAMjN,QAAQkM,QAC9D,MAAO,CACHitB,MAAOtB,EAAOt4B,IAAU,GACxB/B,QAER,CACA+lC,iBAAAA,CAAkBD,GACd,IAAIp4C,EAAM,EACV,MAAM+hB,EAAQ3R,KAAK2R,MACnB,IAAIzf,EAAG2R,EAAMoI,EAAMorB,EAAY3yB,EAC/B,IAAKsjC,EACD,IAAI91C,EAAI,EAAG2R,EAAO8N,EAAMiI,KAAKtG,SAAShV,OAAQpM,EAAI2R,IAAQ3R,EACtD,GAAIyf,EAAMo2B,iBAAiB71C,GAAI,CAC3B+Z,EAAO0F,EAAMgpB,eAAezoC,GAC5B81C,EAAO/7B,EAAK2N,KACZyd,EAAaprB,EAAKorB,WAClB,KACJ,CAGR,IAAK2Q,EACD,SAEJ,IAAI91C,EAAI,EAAG2R,EAAOmkC,EAAK1pC,OAAQpM,EAAI2R,IAAQ3R,EACvCwS,EAAU2yB,EAAW6G,0BAA0BhsC,GACnB,UAAxBwS,EAAQwlC,cACRt6C,EAAMD,KAAKC,IAAIA,EAAK8U,EAAQkY,aAAe,EAAGlY,EAAQylC,kBAAoB,IAGlF,OAAOv6C,CACX,CACAs4C,YAAAA,CAAaF,GACT,IAAIp4C,EAAM,EACV,IAAI,IAAIsC,EAAI,EAAG2R,EAAOmkC,EAAK1pC,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC7C,MAAMwS,EAAU1E,KAAKk+B,0BAA0BhsC,GAC/CtC,EAAMD,KAAKC,IAAIA,EAAK8U,EAAQgT,QAAU,EAAGhT,EAAQ0lC,aAAe,EACpE,CACA,OAAOx6C,CACX,CACH+5C,oBAAAA,CAAqB3lC,GACd,IAAIqmC,EAAmB,EACvB,IAAI,IAAIn4C,EAAI,EAAGA,EAAI8R,IAAgB9R,EAC3B8N,KAAK2R,MAAMo2B,iBAAiB71C,KAC5Bm4C,GAAoBrqC,KAAKsoC,eAAep2C,IAGhD,OAAOm4C,CACX,CACH/B,cAAAA,CAAetkC,GACR,OAAOrU,KAAKC,IAAIiT,EAAe7C,KAAK2R,MAAMiI,KAAKtG,SAAStP,GAAcvD,OAAQ,GAAI,EACtF,CACH+oC,6BAAAA,GACO,OAAOxpC,KAAK2pC,qBAAqB3pC,KAAK2R,MAAMiI,KAAKtG,SAAShV,SAAW,CACzE,EACJmU,EAAA,qBAAAq0B,IAEA,MAAMwD,WAAuB/R,GACzBC,UAAY,OACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjBnkB,UAAU,EACVzI,UAAU,GAEjB8rB,iBAAmB,CACZtjB,OAAQ,CACJouB,QAAS,CACLzjC,KAAM,YAEV0jC,QAAS,CACL1jC,KAAM,YAIlB05B,UAAAA,GACIv5B,KAAKi5B,qBAAsB,EAC3Bj5B,KAAKk5B,oBAAqB,EAC1BsK,MAAMjK,YACV,CACApF,MAAAA,CAAO3f,GACH,MAAMvI,EAAOjM,KAAKs3B,aACV3qB,QAASmR,EAAOlE,KAAM1N,EAAS,GAAEq+B,SAAGA,GAAct+B,EACpDE,EAAqBnM,KAAK2R,MAAMwtB,oBACtC,IAAI31B,MAAEA,EAAK6C,MAAGA,GAAWL,GAAiCC,EAAMC,EAAQC,GACxEnM,KAAK+4B,WAAavvB,EAClBxJ,KAAKg5B,WAAa3sB,EACdgB,GAAoBpB,KACpBzC,EAAQ,EACR6C,EAAQH,EAAO5N,QAEnBwf,EAAKsR,OAASpvB,KAAK2R,MACnBmM,EAAKyR,cAAgBvvB,KAAKiE,MAC1B6Z,EAAK0sB,aAAeD,EAASC,WAC7B1sB,EAAK5R,OAASA,EACd,MAAMxH,EAAU1E,KAAKi+B,6BAA6BzpB,GAC7CxU,KAAK0E,QAAQyQ,WACdzQ,EAAQkY,YAAc,GAE1BlY,EAAQ2pB,QAAUruB,KAAK0E,QAAQ2pB,QAC/BruB,KAAKw/B,cAAc1hB,OAAMtsB,EAAW,CAChCi5C,UAAWt+B,EACXzH,WACD8P,GACHxU,KAAKqgC,eAAen0B,EAAQ1C,EAAO6C,EAAOmI,EAC9C,CACA6rB,cAAAA,CAAen0B,EAAQ1C,EAAO6C,EAAOmI,GACjC,MAAMsmB,EAAiB,UAATtmB,GACRjI,OAAEA,EAAMC,OAAGA,EAAMitB,SAAGA,EAAQ8Q,SAAGA,GAAcvqC,KAAKs3B,aAClD4H,cAAEA,EAAaD,eAAGA,GAAoBj/B,KAAKo/B,kBAAkB51B,EAAOgL,GACpEgjB,EAAQjrB,EAAOK,KACf6qB,EAAQjrB,EAAOI,MACfF,SAAEA,EAAQ2hB,QAAGA,GAAaruB,KAAK0E,QAC/BgmC,EAAe/iC,GAAS+E,GAAYA,EAAWjK,OAAOkE,kBACtDgkC,EAAe3qC,KAAK2R,MAAMwtB,qBAAuBrE,GAAkB,SAATtmB,EAC1D/K,EAAMD,EAAQ6C,EACdu+B,EAAc1+B,EAAO5N,OAC3B,IAAIusC,EAAarhC,EAAQ,GAAKxJ,KAAK48B,UAAUpzB,EAAQ,GACrD,IAAI,IAAItX,EAAI,EAAGA,EAAI04C,IAAe14C,EAAE,CAChC,MAAMib,EAAQjB,EAAOha,GACf0kB,EAAa+zB,EAAex9B,EAAQ,CAAA,EAC1C,GAAIjb,EAAIsX,GAAStX,GAAKuX,EAAK,CACvBmN,EAAWkP,MAAO,EAClB,QACJ,CACA,MAAMJ,EAAS1lB,KAAK48B,UAAU1qC,GACxB44C,EAAW7oC,EAAcyjB,EAAO+R,IAChChQ,EAAS7Q,EAAW4gB,GAASjrB,EAAOS,iBAAiB0Y,EAAO8R,GAAQtlC,GACpEw1B,EAAS9Q,EAAW6gB,GAASqD,GAASgQ,EAAWt+B,EAAOk3B,eAAiBl3B,EAAOQ,iBAAiBysB,EAAWz5B,KAAKo2B,WAAW5pB,EAAQkZ,EAAQ+T,GAAY/T,EAAO+R,GAAQvlC,GAC7K0kB,EAAWkP,KAAO/d,MAAM0f,IAAW1f,MAAM2f,IAAWojB,EACpDl0B,EAAWkc,KAAO5gC,EAAI,GAAKvC,KAAKyX,IAAIse,EAAO8R,GAASqT,EAAWrT,IAAUkT,EACrErc,IACAzX,EAAW8O,OAASA,EACpB9O,EAAWwnB,IAAMmM,EAAS3wB,KAAK1nB,IAE/B+sC,IACAroB,EAAWlS,QAAUw6B,GAAiBl/B,KAAKk+B,0BAA0BhsC,EAAGib,EAAM0J,OAAS,SAAWrC,IAEjGm2B,GACD3qC,KAAKw/B,cAAcryB,EAAOjb,EAAG0kB,EAAYpC,GAE7Cq2B,EAAanlB,CACjB,CACJ,CACHiY,cAAAA,GACO,MAAM1xB,EAAOjM,KAAKs3B,YACZ3qB,EAAUV,EAAKU,QACf4L,EAAS5L,EAAQjI,SAAWiI,EAAQjI,QAAQkY,aAAe,EAC3DhD,EAAO3N,EAAK2N,MAAQ,GAC1B,IAAKA,EAAKtb,OACN,OAAOia,EAEX,MAAM0N,EAAarM,EAAK,GAAGxT,KAAKpG,KAAKk+B,0BAA0B,IACzD6M,EAAYnxB,EAAKA,EAAKtb,OAAS,GAAG8H,KAAKpG,KAAKk+B,0BAA0BtkB,EAAKtb,OAAS,IAC1F,OAAO3O,KAAKC,IAAI2oB,EAAQ0N,EAAY8kB,GAAa,CACrD,CACAhZ,IAAAA,GACI,MAAM9lB,EAAOjM,KAAKs3B,YAClBrrB,EAAKU,QAAQq+B,oBAAoBhrC,KAAK2R,MAAM4e,UAAWtkB,EAAKM,OAAOK,MACnE42B,MAAMzR,MACV,EACJtf,EAAA,iBAAA63B,IAEA,MAAMW,WAA4B1S,GAC9BC,UAAY,YACfA,gBAAkB,CACXc,gBAAiB,MACjBnmB,UAAW,CACP4zB,eAAe,EACfC,cAAc,GAElBhwB,WAAY,CACR1G,QAAS,CACLzQ,KAAM,SACN+W,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZtC,UAAW,IACXm0B,WAAY,GAEnBjQ,iBAAmB,CACZzN,YAAa,EACbhW,QAAS,CACLqyB,OAAQ,CACJ7K,OAAQ,CACJ8K,cAAAA,CAAgB11B,GACZ,MAAMiI,EAAOjI,EAAMiI,KACnB,GAAIA,EAAK2iB,OAAOj+B,QAAUsb,EAAKtG,SAAShV,OAAQ,CAC5C,MAAQi+B,QAAQ1gB,WAAEA,EAAUrb,MAAGA,IAAcmR,EAAMy1B,OAAO1iC,QAC1D,OAAOkV,EAAK2iB,OAAO/pC,IAAI,CAACqrC,EAAO3rC,KAC3B,MACM6hB,EADOpC,EAAMgpB,eAAe,GACftD,WAAW5K,SAASv6B,GACvC,MAAO,CACH0mB,KAAMilB,EACNpf,UAAW1K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnBi0B,UAAW9mC,EACXwX,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZwhB,QAAS1rB,EAAM8zB,kBAAkBvzC,GACjC+R,MAAO/R,IAGnB,CACA,MAAO,EACX,GAEJ2iB,OAAAA,CAAShkB,EAAG02C,EAAYH,GACpBA,EAAOz1B,MAAM61B,qBAAqBD,EAAWtjC,OAC7CmjC,EAAOz1B,MAAMwiB,QACjB,IAGRjf,OAAQ,CACJ9jB,EAAG,CACCyO,KAAM,eACNqrC,WAAY,CACRzzB,SAAS,GAEbE,aAAa,EACbI,KAAM,CACFozB,UAAU,GAEdC,YAAa,CACT3zB,SAAS,GAEbgxB,WAAY,KAIxB7oC,WAAAA,CAAY+R,EAAO3N,GACfw/B,MAAM7xB,EAAO3N,GACbhE,KAAKynC,iBAAcj2C,EACnBwO,KAAK0nC,iBAAcl2C,CACvB,CACAosC,gBAAAA,CAAiB35B,GACb,MAAMgI,EAAOjM,KAAKs3B,YACZ3lB,EAAQ3R,KAAK2R,MACb4qB,EAAS5qB,EAAMiI,KAAK2iB,QAAU,GAC9Br6B,EAAQwO,GAAazE,EAAKQ,QAAQxI,GAAO7S,EAAGugB,EAAMjN,QAAQkM,QAChE,MAAO,CACHitB,MAAOtB,EAAOt4B,IAAU,GACxB/B,QAER,CACAk6B,eAAAA,CAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAC/B,OAAOmZ,GAA4B6lB,KAAKrrC,KAAjCwlB,CAAuCvZ,EAAM2N,EAAMpQ,EAAO6C,EACrE,CACA8nB,MAAAA,CAAO3f,GACH,MAAMwzB,EAAOhoC,KAAKs3B,YAAY1d,KAC9B5Z,KAAKsrC,gBACLtrC,KAAKqgC,eAAe2H,EAAM,EAAGA,EAAK1pC,OAAQkW,EAC9C,CACHyoB,SAAAA,GACO,MAAMhxB,EAAOjM,KAAKs3B,YACZhwB,EAAQ,CACVzX,IAAK4S,OAAOkE,kBACZ/W,IAAK6S,OAAO66B,mBAahB,OAXArxB,EAAK2N,KAAK1O,QAAQ,CAACge,EAASjlB,KACxB,MAAMyhB,EAAS1lB,KAAK48B,UAAU34B,GAAO7S,GAChC2W,MAAM2d,IAAW1lB,KAAK2R,MAAM8zB,kBAAkBxhC,KAC3CyhB,EAASpe,EAAMzX,MACfyX,EAAMzX,IAAM61B,GAEZA,EAASpe,EAAM1X,MACf0X,EAAM1X,IAAM81B,MAIjBpe,CACX,CACHgkC,aAAAA,GACO,MAAM35B,EAAQ3R,KAAK2R,MACb4e,EAAY5e,EAAM4e,UAClBxS,EAAOpM,EAAMjN,QACb6mC,EAAU57C,KAAKE,IAAI0gC,EAAUjZ,MAAQiZ,EAAU/Y,KAAM+Y,EAAUhZ,OAASgZ,EAAUlZ,KAClFqwB,EAAc/3C,KAAKC,IAAI27C,EAAU,EAAG,GAEpChC,GAAgB7B,EADF/3C,KAAKC,IAAImuB,EAAKytB,iBAAmB9D,EAAc,IAAM3pB,EAAKytB,iBAAmB,EAAG,IACjD75B,EAAM85B,yBACzDzrC,KAAK0nC,YAAcA,EAAc6B,EAAevpC,KAAKiE,MACrDjE,KAAKynC,YAAcznC,KAAK0nC,YAAc6B,CAC1C,CACAlJ,cAAAA,CAAe2H,EAAMx+B,EAAO6C,EAAOmI,GAC/B,MAAMsmB,EAAiB,UAATtmB,EACR7C,EAAQ3R,KAAK2R,MAEbm4B,EADOn4B,EAAMjN,QACQyO,UACrB8B,EAAQjV,KAAKs3B,YAAYoD,OACzBqP,EAAU90B,EAAMy2B,QAChB1B,EAAU/0B,EAAM02B,QAChBC,EAAoB32B,EAAM42B,cAAc,GAAK,GAAMtlC,GACzD,IACIrU,EADA6W,EAAQ6iC,EAEZ,MAAME,EAAe,IAAM9rC,KAAK+rC,uBAChC,IAAI75C,EAAI,EAAGA,EAAIsX,IAAStX,EACpB6W,GAAS/I,KAAKgsC,cAAc95C,EAAGsiB,EAAMs3B,GAEzC,IAAI55C,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,EAAOna,IAAI,CAClC,MAAMmqB,EAAM2rB,EAAK91C,GACjB,IAAIu2C,EAAa1/B,EACb2/B,EAAW3/B,EAAQ/I,KAAKgsC,cAAc95C,EAAGsiB,EAAMs3B,GAC/CpE,EAAc/1B,EAAM8zB,kBAAkBvzC,GAAK+iB,EAAMg3B,8BAA8BjsC,KAAK48B,UAAU1qC,GAAGd,GAAK,EAC1G2X,EAAQ2/B,EACJ5N,IACIgP,EAAc9C,eACdU,EAAc,GAEdoC,EAAc/C,gBACd0B,EAAaC,EAAWkD,IAGhC,MAAMh1B,EAAa,CACfzjB,EAAG42C,EACHzkC,EAAG0kC,EACHvC,YAAa,EACbC,cACAe,aACAC,WACAhkC,QAAS1E,KAAKk+B,0BAA0BhsC,EAAGmqB,EAAIxF,OAAS,SAAWrC,IAEvExU,KAAKw/B,cAAcnjB,EAAKnqB,EAAG0kB,EAAYpC,EAC3C,CACJ,CACAu3B,oBAAAA,GACI,MAAM9/B,EAAOjM,KAAKs3B,YAClB,IAAIjrB,EAAQ,EAMZ,OALAJ,EAAK2N,KAAK1O,QAAQ,CAACge,EAASjlB,MACnB8D,MAAM/H,KAAK48B,UAAU34B,GAAO7S,IAAM4O,KAAK2R,MAAM8zB,kBAAkBxhC,IAChEoI,MAGDA,CACX,CACH2/B,aAAAA,CAAc/nC,EAAOuQ,EAAMs3B,GACpB,OAAO9rC,KAAK2R,MAAM8zB,kBAAkBxhC,GAASkE,GAAUnI,KAAKk+B,0BAA0Bj6B,EAAOuQ,GAAMzL,OAAS+iC,GAAgB,CAChI,EACJr5B,EAAA,sBAAAw4B,IAEA,MAAMiB,WAAsBpF,GACxBtO,UAAY,MACfA,gBAAkB,CACXyO,OAAQ,EACRnrB,SAAU,EACVorB,cAAe,IACfnrB,OAAQ,QAEhBtJ,EAAA,gBAAAy5B,IAEA,MAAMC,WAAwB5T,GAC1BC,UAAY,QACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjBhlB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACNmK,KAAM,CACFnB,KAAM,WAIrB6b,iBAAmB,CACZzN,YAAa,EACb7V,OAAQ,CACJ9jB,EAAG,CACCyO,KAAM,kBAIrB+9B,gBAAAA,CAAiB35B,GACV,MAAMuI,EAASxM,KAAKs3B,YAAY9qB,OAC1BkZ,EAAS1lB,KAAK48B,UAAU34B,GAC9B,MAAO,CACH45B,MAAOrxB,EAAOgwB,YAAYv4B,GAC1B/B,MAAO,GAAKsK,EAAOsxB,iBAAiBpY,EAAOlZ,EAAOI,OAE1D,CACAwvB,eAAAA,CAAgBnwB,EAAM2N,EAAMpQ,EAAO6C,GAC/B,OAAOmZ,GAA4B6lB,KAAKrrC,KAAjCwlB,CAAuCvZ,EAAM2N,EAAMpQ,EAAO6C,EACrE,CACA8nB,MAAAA,CAAO3f,GACH,MAAMvI,EAAOjM,KAAKs3B,YACZxZ,EAAO7R,EAAKU,QACZT,EAASD,EAAK2N,MAAQ,GACtB2iB,EAAStwB,EAAKM,OAAOiwB,YAE3B,GADA1e,EAAK5R,OAASA,EACD,WAATsI,EAAmB,CACnB,MAAM9P,EAAU1E,KAAKi+B,6BAA6BzpB,GAC7CxU,KAAK0E,QAAQyQ,WACdzQ,EAAQkY,YAAc,GAE1B,MAAMhG,EAAa,CACfid,OAAO,EACPuY,UAAW7P,EAAOj+B,SAAW4N,EAAO5N,OACpCoG,WAEJ1E,KAAKw/B,cAAc1hB,OAAMtsB,EAAWolB,EAAYpC,EACpD,CACAxU,KAAKqgC,eAAen0B,EAAQ,EAAGA,EAAO5N,OAAQkW,EAClD,CACA6rB,cAAAA,CAAen0B,EAAQ1C,EAAO6C,EAAOmI,GACjC,MAAMS,EAAQjV,KAAKs3B,YAAYoD,OACzBI,EAAiB,UAATtmB,EACd,IAAI,IAAItiB,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,EAAOna,IAAI,CACtC,MAAMib,EAAQjB,EAAOha,GACfwS,EAAU1E,KAAKk+B,0BAA0BhsC,EAAGib,EAAM0J,OAAS,SAAWrC,GACtE63B,EAAgBp3B,EAAMq3B,yBAAyBp6C,EAAG8N,KAAK48B,UAAU1qC,GAAGd,GACpE+B,EAAI2nC,EAAQ7lB,EAAMy2B,QAAUW,EAAcl5C,EAC1CmS,EAAIw1B,EAAQ7lB,EAAM02B,QAAUU,EAAc/mC,EAC1CsR,EAAa,CACfzjB,IACAmS,IACAyD,MAAOsjC,EAActjC,MACrB+c,KAAM/d,MAAM5U,IAAM4U,MAAMzC,GACxBZ,WAEJ1E,KAAKw/B,cAAcryB,EAAOjb,EAAG0kB,EAAYpC,EAC7C,CACJ,EACJ/B,EAAA,kBAAA05B,IAEA,MAAMI,WAA0BhU,GAC5BC,UAAY,UACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjBnkB,UAAU,EACVwH,MAAM,GAEb6b,iBAAmB,CACZjkB,YAAa,CACTC,KAAM,SAEVU,OAAQ,CACJ/hB,EAAG,CACC0M,KAAM,UAEVyF,EAAG,CACCzF,KAAM,YAIrB+9B,gBAAAA,CAAiB35B,GACV,MAAMgI,EAAOjM,KAAKs3B,YACZiF,EAASv8B,KAAK2R,MAAMiI,KAAK2iB,QAAU,IACnCjvB,OAAEA,EAAMC,OAAGA,GAAYtB,EACvByZ,EAAS1lB,KAAK48B,UAAU34B,GACxB9Q,EAAIma,EAAOwwB,iBAAiBpY,EAAOvyB,GACnCmS,EAAIiI,EAAOuwB,iBAAiBpY,EAAOpgB,GACzC,MAAO,CACHu4B,MAAOtB,EAAOt4B,IAAU,GACxB/B,MAAO,IAAM/O,EAAI,KAAOmS,EAAI,IAEpC,CACA6uB,MAAAA,CAAO3f,GACH,MAAMvI,EAAOjM,KAAKs3B,aACV1d,KAAM1N,EAAS,IAAQD,EACzBE,EAAqBnM,KAAK2R,MAAMwtB,oBACtC,IAAI31B,MAAEA,EAAK6C,MAAGA,GAAWL,GAAiCC,EAAMC,EAAQC,GAOxE,GANAnM,KAAK+4B,WAAavvB,EAClBxJ,KAAKg5B,WAAa3sB,EACdgB,GAAoBpB,KACpBzC,EAAQ,EACR6C,EAAQH,EAAO5N,QAEf0B,KAAK0E,QAAQyQ,SAAU,CAClBnV,KAAKq5B,oBACNr5B,KAAK05B,cAET,MAAQ/sB,QAASmR,EAAIysB,SAAGA,GAAct+B,EACtC6R,EAAKsR,OAASpvB,KAAK2R,MACnBmM,EAAKyR,cAAgBvvB,KAAKiE,MAC1B6Z,EAAK0sB,aAAeD,EAASC,WAC7B1sB,EAAK5R,OAASA,EACd,MAAMxH,EAAU1E,KAAKi+B,6BAA6BzpB,GAClD9P,EAAQ2pB,QAAUruB,KAAK0E,QAAQ2pB,QAC/BruB,KAAKw/B,cAAc1hB,OAAMtsB,EAAW,CAChCi5C,UAAWt+B,EACXzH,WACD8P,EACP,MAAWxU,KAAKq5B,4BACLptB,EAAKU,QACZ3M,KAAKq5B,oBAAqB,GAE9Br5B,KAAKqgC,eAAen0B,EAAQ1C,EAAO6C,EAAOmI,EAC9C,CACAklB,WAAAA,GACI,MAAMvkB,SAAEA,GAAcnV,KAAK0E,SACtB1E,KAAKq5B,oBAAsBlkB,IAC5BnV,KAAKq5B,mBAAqBr5B,KAAK2R,MAAM66B,SAASC,WAAW,SAE7DjJ,MAAM9J,aACV,CACA2G,cAAAA,CAAen0B,EAAQ1C,EAAO6C,EAAOmI,GACjC,MAAMsmB,EAAiB,UAATtmB,GACRjI,OAAEA,EAAMC,OAAGA,EAAMitB,SAAGA,EAAQ8Q,SAAGA,GAAcvqC,KAAKs3B,YAClD+H,EAAYr/B,KAAKk+B,0BAA0B10B,EAAOgL,GAClD0qB,EAAgBl/B,KAAKg/B,iBAAiBK,GACtCJ,EAAiBj/B,KAAKi/B,eAAezqB,EAAM0qB,GAC3C1H,EAAQjrB,EAAOK,KACf6qB,EAAQjrB,EAAOI,MACfF,SAAEA,EAAQ2hB,QAAGA,GAAaruB,KAAK0E,QAC/BgmC,EAAe/iC,GAAS+E,GAAYA,EAAWjK,OAAOkE,kBACtDgkC,EAAe3qC,KAAK2R,MAAMwtB,qBAAuBrE,GAAkB,SAATtmB,EAChE,IAAIq2B,EAAarhC,EAAQ,GAAKxJ,KAAK48B,UAAUpzB,EAAQ,GACrD,IAAI,IAAItX,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,IAASna,EAAE,CACtC,MAAMib,EAAQjB,EAAOha,GACfwzB,EAAS1lB,KAAK48B,UAAU1qC,GACxB0kB,EAAa+zB,EAAex9B,EAAQ,CAAA,EACpC29B,EAAW7oC,EAAcyjB,EAAO+R,IAChChQ,EAAS7Q,EAAW4gB,GAASjrB,EAAOS,iBAAiB0Y,EAAO8R,GAAQtlC,GACpEw1B,EAAS9Q,EAAW6gB,GAASqD,GAASgQ,EAAWt+B,EAAOk3B,eAAiBl3B,EAAOQ,iBAAiBysB,EAAWz5B,KAAKo2B,WAAW5pB,EAAQkZ,EAAQ+T,GAAY/T,EAAO+R,GAAQvlC,GAC7K0kB,EAAWkP,KAAO/d,MAAM0f,IAAW1f,MAAM2f,IAAWojB,EACpDl0B,EAAWkc,KAAO5gC,EAAI,GAAKvC,KAAKyX,IAAIse,EAAO8R,GAASqT,EAAWrT,IAAUkT,EACrErc,IACAzX,EAAW8O,OAASA,EACpB9O,EAAWwnB,IAAMmM,EAAS3wB,KAAK1nB,IAE/B+sC,IACAroB,EAAWlS,QAAUw6B,GAAiBl/B,KAAKk+B,0BAA0BhsC,EAAGib,EAAM0J,OAAS,SAAWrC,IAEjGm2B,GACD3qC,KAAKw/B,cAAcryB,EAAOjb,EAAG0kB,EAAYpC,GAE7Cq2B,EAAanlB,CACjB,CACA1lB,KAAKu/B,oBAAoBL,EAAe1qB,EAAM6qB,EAClD,CACH1B,cAAAA,GACO,MAAM1xB,EAAOjM,KAAKs3B,YACZ1d,EAAO3N,EAAK2N,MAAQ,GAC1B,IAAK5Z,KAAK0E,QAAQyQ,SAAU,CACxB,IAAIvlB,EAAM,EACV,IAAI,IAAIsC,EAAI0nB,EAAKtb,OAAS,EAAGpM,GAAK,IAAKA,EACnCtC,EAAMD,KAAKC,IAAIA,EAAKgqB,EAAK1nB,GAAGkU,KAAKpG,KAAKk+B,0BAA0BhsC,IAAM,GAE1E,OAAOtC,EAAM,GAAKA,CACtB,CACA,MAAM+c,EAAUV,EAAKU,QACf4L,EAAS5L,EAAQjI,SAAWiI,EAAQjI,QAAQkY,aAAe,EACjE,IAAKhD,EAAKtb,OACN,OAAOia,EAEX,MAAM0N,EAAarM,EAAK,GAAGxT,KAAKpG,KAAKk+B,0BAA0B,IACzD6M,EAAYnxB,EAAKA,EAAKtb,OAAS,GAAG8H,KAAKpG,KAAKk+B,0BAA0BtkB,EAAKtb,OAAS,IAC1F,OAAO3O,KAAKC,IAAI2oB,EAAQ0N,EAAY8kB,GAAa,CACrD,EACJt4B,EAAA,oBAAA85B,IAEG,IAACG,GAAWj6B,EAAA,cAAgBxU,OAAO2gC,OAAO,CAC7C+N,UAAW,KACXzJ,cAAeA,GACf2D,iBAAkBA,GAClBC,mBAAoBA,GACpBwD,eAAgBA,GAChB4B,cAAeA,GACfjB,oBAAqBA,GACrBkB,gBAAiBA,GACjBI,kBAAmBA,MAOf,SAASK,KACT,MAAM,IAAI7oB,MAAM,kFACpB,CAMI,MAAM8oB,GAUJ,eAAOv3B,CAASw3B,GACd7uC,OAAOoB,OAAOwtC,GAAgB1qC,UAAW2qC,EAC7C,CACApoC,QACA9E,WAAAA,CAAY8E,GACR1E,KAAK0E,QAAUA,GAAW,CAAA,CAC9B,CAEAqoC,IAAAA,GAAQ,CACRC,OAAAA,GACI,OAAOJ,IACX,CACAjnB,KAAAA,GACI,OAAOinB,IACX,CACAv7B,MAAAA,GACI,OAAOu7B,IACX,CACA3oB,GAAAA,GACI,OAAO2oB,IACX,CACAK,IAAAA,GACI,OAAOL,IACX,CACAM,OAAAA,GACI,OAAON,IACX,CACAO,KAAAA,GACI,OAAOP,IACX,EAED,IAACQ,GAAQ36B,EAAA,YAAG,CACX46B,MAAOR,KAGX,SAASS,GAAaC,EAAS3gC,EAAM1K,EAAOuS,GACxC,MAAM4iB,WAAEA,EAAUzd,KAAGA,EAAItN,QAAGA,GAAaihC,EACnChhC,EAAS8qB,EAAWC,YAAY/qB,OAChCG,EAAW6gC,EAAQ5gC,SAAU4gC,EAAQ5gC,QAAQjI,QAAU6oC,EAAQ5gC,QAAQjI,QAAQgI,SAAkB,KACvG,GAAIH,GAAUK,IAASL,EAAOK,MAAiB,MAATA,GAAgBN,GAAWsN,EAAKtb,OAAQ,CAC1E,MAAMkvC,EAAejhC,EAAOkhC,eAAiB/iC,GAAgBH,GAC7D,IAAKkK,EAAW,CACZ,MAAMgV,EAAS+jB,EAAa5zB,EAAMhN,EAAM1K,GACxC,GAAIwK,EAAU,CACV,MAAMF,OAAEA,GAAY6qB,EAAWC,aACzB7qB,QAAEA,GAAa8gC,EACftgC,EAAsBR,EAAQnK,MAAM,EAAGmnB,EAAOnf,GAAK,GAAG7G,UAAUyJ,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACrH6c,EAAOnf,IAAM3a,KAAKC,IAAI,EAAGqd,GACzB,MAAMG,EAAsBX,EAAQnK,MAAMmnB,EAAOpf,IAAI6C,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACpG6c,EAAOpf,IAAM1a,KAAKC,IAAI,EAAGwd,EAC7B,CACA,OAAOqc,CACX,CAAO,GAAI4N,EAAWyB,eAAgB,CAClC,MAAMvM,EAAK3S,EAAK,GACVtS,EAA+B,mBAAhBilB,EAAGmhB,UAA2BnhB,EAAGmhB,SAAS9gC,GAC/D,GAAItF,EAAO,CACP,MAAMkC,EAAQgkC,EAAa5zB,EAAMhN,EAAM1K,EAAQoF,GACzCmC,EAAM+jC,EAAa5zB,EAAMhN,EAAM1K,EAAQoF,GAC7C,MAAO,CACHgD,GAAId,EAAMc,GACVD,GAAIZ,EAAIY,GAEhB,CACJ,CACJ,CACA,MAAO,CACHC,GAAI,EACJD,GAAIuP,EAAKtb,OAAS,EAE1B,CACC,SAASqvC,GAAyBh8B,EAAO/E,EAAMghC,EAAUC,EAASp5B,GAC/D,MAAMyhB,EAAWvkB,EAAMm8B,+BACjB5rC,EAAQ0rC,EAAShhC,GACvB,IAAI,IAAI1a,EAAI,EAAG2R,EAAOqyB,EAAS53B,OAAQpM,EAAI2R,IAAQ3R,EAAE,CACjD,MAAM+R,MAAEA,EAAK2V,KAAGA,GAAUsc,EAAShkC,IAC7BoY,GAAEA,EAAED,GAAGA,GAAQijC,GAAapX,EAAShkC,GAAI0a,EAAM1K,EAAOuS,GAC5D,IAAI,IAAItW,EAAImM,EAAInM,GAAKkM,IAAMlM,EAAE,CACzB,MAAM+qB,EAAUtP,EAAKzb,GAChB+qB,EAAQpD,MACT+nB,EAAQ3kB,EAASjlB,EAAO9F,EAEhC,CACJ,CACJ,CAUC,SAAS4vC,GAAkBp8B,EAAOi8B,EAAUhhC,EAAMohC,EAAkBt5B,GACjE,MAAMtJ,EAAQ,GACd,OAAKsJ,GAAqB/C,EAAMs8B,cAAcL,IAe9CD,GAAyBh8B,EAAO/E,EAAMghC,EAZf,SAAS1kB,EAASllB,EAAcC,IAC9CyQ,GAAqBoI,GAAeoM,EAASvX,EAAM4e,UAAW,KAG/DrH,EAAQglB,QAAQN,EAASz6C,EAAGy6C,EAAStoC,EAAG0oC,IACxC5iC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GACgE,GACzDmH,GAfIA,CAgBf,CAuBC,SAAS+iC,GAAyBx8B,EAAOi8B,EAAUhhC,EAAM6H,EAAWu5B,EAAkBt5B,GACnF,IAAItJ,EAAQ,GACZ,MAAMgjC,EArDT,SAAkCxhC,GAC/B,MAAMyhC,GAA6B,IAAtBzhC,EAAKpI,QAAQ,KACpB8pC,GAA6B,IAAtB1hC,EAAKpI,QAAQ,KAC1B,gBAAgB2E,EAAKC,GACjB,MAAMmlC,EAASF,EAAO1+C,KAAKyX,IAAI+B,EAAIhW,EAAIiW,EAAIjW,GAAK,EAC1Cq7C,EAASF,EAAO3+C,KAAKyX,IAAI+B,EAAI7D,EAAI8D,EAAI9D,GAAK,EAChD,OAAO3V,KAAKmZ,KAAKnZ,KAAKmP,IAAIyvC,EAAQ,GAAK5+C,KAAKmP,IAAI0vC,EAAQ,GAC5D,CACJ,CA6C2BC,CAAyB7hC,GAChD,IAAI8hC,EAAcjsC,OAAOkE,kBA8BzB,OADAgnC,GAAyBh8B,EAAO/E,EAAMghC,EA5BtC,SAAwB1kB,EAASllB,EAAcC,GAC3C,MAAMiqC,EAAUhlB,EAAQglB,QAAQN,EAASz6C,EAAGy6C,EAAStoC,EAAG0oC,GACxD,GAAIv5B,IAAcy5B,EACd,OAEJ,MAAM/J,EAASjb,EAAQylB,eAAeX,GAEtC,IADsBt5B,IAAoB/C,EAAMs8B,cAAc9J,KACzC+J,EACjB,OAEJ,MAAMjlC,EAAWmlC,EAAeR,EAAUzJ,GACtCl7B,EAAWylC,GACXtjC,EAAQ,CACJ,CACI8d,UACAllB,eACAC,UAGRyqC,EAAczlC,GACPA,IAAaylC,GACpBtjC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GAEOmH,CACX,CACC,SAASwjC,GAAgBj9B,EAAOi8B,EAAUhhC,EAAM6H,EAAWu5B,EAAkBt5B,GAC1E,OAAKA,GAAqB/C,EAAMs8B,cAAcL,GAG9B,MAAThhC,GAAiB6H,EAA6E05B,GAAyBx8B,EAAOi8B,EAAUhhC,EAAM6H,EAAWu5B,EAAkBt5B,GA7DrL,SAA+B/C,EAAOi8B,EAAUhhC,EAAMohC,GACnD,IAAI5iC,EAAQ,GAmBZ,OADAuiC,GAAyBh8B,EAAO/E,EAAMghC,EAjBtC,SAAwB1kB,EAASllB,EAAcC,GAC3C,MAAMwkC,WAAEA,EAAUC,SAAGA,GAAcxf,EAAQ2lB,SAAS,CAChD,aACA,YACDb,IACGjlC,MAAEA,GAAWP,GAAkB0gB,EAAS,CAC1C/1B,EAAGy6C,EAASz6C,EACZmS,EAAGsoC,EAAStoC,IAEZiE,GAAcR,EAAO0/B,EAAYC,IACjCt9B,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GAEOmH,CACX,CAwCwC0jC,CAAsBn9B,EAAOi8B,EAAUhhC,EAAMohC,GAFtE,EAGf,CACC,SAASe,GAAap9B,EAAOi8B,EAAUhhC,EAAM6H,EAAWu5B,GACrD,MAAM5iC,EAAQ,GACR4jC,EAAuB,MAATpiC,EAAe,WAAa,WAChD,IAAIqiC,GAAiB,EAWrB,OAVAtB,GAAyBh8B,EAAO/E,EAAMghC,EAAU,CAAC1kB,EAASllB,EAAcC,KAChEilB,EAAQ8lB,IAAgB9lB,EAAQ8lB,GAAapB,EAAShhC,GAAOohC,KAC7D5iC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,UAEJgrC,EAAiBA,GAAkB/lB,EAAQglB,QAAQN,EAASz6C,EAAGy6C,EAAStoC,EAAG0oC,MAG/Ev5B,IAAcw6B,EACP,GAEJ7jC,CACX,CACI,IAAC8jC,GAAWz8B,EAAA,cAAG,CACfk7B,4BACAwB,MAAO,CACVlrC,KAAAA,CAAO0N,EAAO9gB,EAAG6T,EAASspC,GACf,MAAMJ,EAAWjkB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,IACvB8H,EAAmBhQ,EAAQgQ,mBAAoB,EAC/CtJ,EAAQ1G,EAAQ+P,UAAYs5B,GAAkBp8B,EAAOi8B,EAAUhhC,EAAMohC,EAAkBt5B,GAAoBk6B,GAAgBj9B,EAAOi8B,EAAUhhC,GAAM,EAAOohC,EAAkBt5B,GAC3Kf,EAAW,GACjB,OAAKvI,EAAM9M,QAGXqT,EAAMm8B,+BAA+B5iC,QAASe,IAC1C,MAAMhI,EAAQmH,EAAM,GAAGnH,MACjBilB,EAAUjd,EAAK2N,KAAK3V,GACtBilB,IAAYA,EAAQpD,MACpBnS,EAAS/N,KAAK,CACVsjB,UACAllB,aAAciI,EAAKhI,MACnBA,YAIL0P,GAbI,EAcf,EACPhH,OAAAA,CAASgF,EAAO9gB,EAAG6T,EAASspC,GACjB,MAAMJ,EAAWjkB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,KACvB8H,EAAmBhQ,EAAQgQ,mBAAoB,EACrD,IAAItJ,EAAQ1G,EAAQ+P,UAAYs5B,GAAkBp8B,EAAOi8B,EAAUhhC,EAAMohC,EAAkBt5B,GAAoBk6B,GAAgBj9B,EAAOi8B,EAAUhhC,GAAM,EAAOohC,EAAkBt5B,GAC/K,GAAItJ,EAAM9M,OAAS,EAAG,CAClB,MAAM0F,EAAeoH,EAAM,GAAGpH,aACxB4V,EAAOjI,EAAMgpB,eAAe32B,GAAc4V,KAChDxO,EAAQ,GACR,IAAI,IAAIlZ,EAAI,EAAGA,EAAI0nB,EAAKtb,SAAUpM,EAC9BkZ,EAAMxF,KAAK,CACPsjB,QAAStP,EAAK1nB,GACd8R,eACAC,MAAO/R,GAGnB,CACA,OAAOkZ,CACX,EACP+B,MAAKA,CAAEwE,EAAO9gB,EAAG6T,EAASspC,IAIRD,GAAkBp8B,EAHRgY,GAAoB94B,EAAG8gB,GAC3BjN,EAAQkI,MAAQ,KAEmBohC,EADvBtpC,EAAQgQ,mBAAoB,GAGhE06B,OAAAA,CAASz9B,EAAO9gB,EAAG6T,EAASspC,GACjB,MAAMJ,EAAWjkB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,KACvB8H,EAAmBhQ,EAAQgQ,mBAAoB,EACrD,OAAOk6B,GAAgBj9B,EAAOi8B,EAAUhhC,EAAMlI,EAAQ+P,UAAWu5B,EAAkBt5B,EACvF,EACPvhB,EAACA,CAAEwe,EAAO9gB,EAAG6T,EAASspC,IAEJe,GAAap9B,EADHgY,GAAoB94B,EAAG8gB,GACH,IAAKjN,EAAQ+P,UAAWu5B,GAExE1oC,EAACA,CAAEqM,EAAO9gB,EAAG6T,EAASspC,IAEJe,GAAap9B,EADHgY,GAAoB94B,EAAG8gB,GACH,IAAKjN,EAAQ+P,UAAWu5B,MAKzE,MAAMqB,GAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,GAAiBrnC,EAAO2lC,GAC7B,OAAO3lC,EAAMqc,OAAQ/0B,GAAIA,EAAEm6B,MAAQkkB,EACvC,CACA,SAAS2B,GAA4BtnC,EAAO2E,GACxC,OAAO3E,EAAMqc,OAAQ/0B,IAAwC,IAApC8/C,GAAiB7qC,QAAQjV,EAAEm6B,MAAen6B,EAAE06B,IAAIrd,OAASA,EACtF,CACA,SAAS4iC,GAAavnC,EAAOxE,GACzB,OAAOwE,EAAMo5B,KAAK,CAAC5wC,EAAGC,KAClB,MAAMoT,EAAKL,EAAU/S,EAAID,EACnBsT,EAAKN,EAAUhT,EAAIC,EACzB,OAAOoT,EAAGrD,SAAWsD,EAAGtD,OAASqD,EAAGG,MAAQF,EAAGE,MAAQH,EAAGrD,OAASsD,EAAGtD,QAE9E,CAqCC,SAASgvC,GAAcC,EAASC,GAC7B,MAAM9Y,EAnBV,SAAqB6Y,GACjB,MAAM7Y,EAAS,CAAA,EACf,IAAK,MAAM+Y,KAAQF,EAAQ,CACvB,MAAMrZ,MAAEA,EAAK3M,IAAGA,EAAGmmB,YAAGA,GAAiBD,EACvC,IAAKvZ,IAAUgZ,GAAiB98B,SAASmX,GACrC,SAEJ,MAAMhG,EAASmT,EAAOR,KAAWQ,EAAOR,GAAS,CAC7ChqB,MAAO,EACPyjC,OAAQ,EACRrvC,OAAQ,EACR2F,KAAM,IAEVsd,EAAOrX,QACPqX,EAAOjjB,QAAUovC,CACrB,CACA,OAAOhZ,CACX,CAEmBkZ,CAAYL,IACrBM,aAAEA,EAAYC,cAAGA,GAAmBN,EAC1C,IAAIz9C,EAAG2R,EAAMqsC,EACb,IAAIh+C,EAAI,EAAG2R,EAAO6rC,EAAQpxC,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC5Cg+C,EAASR,EAAQx9C,GACjB,MAAMi+C,SAAEA,GAAcD,EAAOjmB,IACvBoM,EAAQQ,EAAOqZ,EAAO7Z,OACtBjD,EAASiD,GAAS6Z,EAAOL,YAAcxZ,EAAM51B,OAC/CyvC,EAAOzN,YACPyN,EAAOx3B,MAAQ0a,EAASA,EAAS4c,EAAeG,GAAYR,EAAOS,eACnEF,EAAO70B,OAAS40B,IAEhBC,EAAOx3B,MAAQs3B,EACfE,EAAO70B,OAAS+X,EAASA,EAAS6c,EAAgBE,GAAYR,EAAOU,gBAE7E,CACA,OAAOxZ,CACX,CAmBA,SAASyZ,GAAeC,EAAYhgB,EAAW9/B,EAAGC,GAC9C,OAAOf,KAAKC,IAAI2gD,EAAW9/C,GAAI8/B,EAAU9/B,IAAMd,KAAKC,IAAI2gD,EAAW7/C,GAAI6/B,EAAU7/B,GACrF,CACA,SAAS8/C,GAAiBD,EAAYE,GAClCF,EAAWl5B,IAAM1nB,KAAKC,IAAI2gD,EAAWl5B,IAAKo5B,EAAWp5B,KACrDk5B,EAAW/4B,KAAO7nB,KAAKC,IAAI2gD,EAAW/4B,KAAMi5B,EAAWj5B,MACvD+4B,EAAWh5B,OAAS5nB,KAAKC,IAAI2gD,EAAWh5B,OAAQk5B,EAAWl5B,QAC3Dg5B,EAAWj5B,MAAQ3nB,KAAKC,IAAI2gD,EAAWj5B,MAAOm5B,EAAWn5B,MAC7D,CACA,SAASo5B,GAAWngB,EAAWof,EAAQO,EAAQrZ,GAC3C,MAAMnN,IAAEA,EAAGO,IAAGA,GAASimB,EACjBK,EAAahgB,EAAUggB,WAC7B,IAAKhuC,EAASmnB,GAAM,CACZwmB,EAAO9pC,OACPmqB,EAAU7G,IAAQwmB,EAAO9pC,MAE7B,MAAMiwB,EAAQQ,EAAOqZ,EAAO7Z,QAAU,CAClCjwB,KAAM,EACNiG,MAAO,GAEXgqB,EAAMjwB,KAAOzW,KAAKC,IAAIymC,EAAMjwB,KAAM8pC,EAAOzN,WAAaxY,EAAI5O,OAAS4O,EAAIvR,OACvEw3B,EAAO9pC,KAAOiwB,EAAMjwB,KAAOiwB,EAAMhqB,MACjCkkB,EAAU7G,IAAQwmB,EAAO9pC,IAC7B,CACI6jB,EAAI0mB,YACJH,GAAiBD,EAAYtmB,EAAI0mB,cAErC,MAAMC,EAAWjhD,KAAKC,IAAI,EAAG+/C,EAAOkB,WAAaP,GAAeC,EAAYhgB,EAAW,OAAQ,UACzFugB,EAAYnhD,KAAKC,IAAI,EAAG+/C,EAAOoB,YAAcT,GAAeC,EAAYhgB,EAAW,MAAO,WAC1FygB,EAAeJ,IAAargB,EAAUv+B,EACtCi/C,EAAgBH,IAAcvgB,EAAU7gC,EAG9C,OAFA6gC,EAAUv+B,EAAI4+C,EACdrgB,EAAU7gC,EAAIohD,EACPZ,EAAOzN,WAAa,CACvByO,KAAMF,EACNG,MAAOF,GACP,CACAC,KAAMD,EACNE,MAAOH,EAEf,CAaA,SAASI,GAAW3O,EAAYlS,GAC5B,MAAMggB,EAAahgB,EAAUggB,WAC7B,SAASc,EAAmBhoB,GACxB,MAAMrM,EAAS,CACXxF,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GAKZ,OAHA8R,EAAUne,QAASwe,IACf1M,EAAO0M,GAAO/5B,KAAKC,IAAI2gC,EAAU7G,GAAM6mB,EAAW7mB,MAE/C1M,CACX,CACA,OAAoBq0B,EAAb5O,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAAS6O,GAASC,EAAOhhB,EAAWof,EAAQ9Y,GACxC,MAAM2a,EAAa,GACnB,IAAIt/C,EAAG2R,EAAMqsC,EAAQjmB,EAAKwnB,EAAO3jC,EACjC,IAAI5b,EAAI,EAAG2R,EAAO0tC,EAAMjzC,OAAQmzC,EAAQ,EAAGv/C,EAAI2R,IAAQ3R,EAAE,CACrDg+C,EAASqB,EAAMr/C,GACf+3B,EAAMimB,EAAOjmB,IACbA,EAAIkK,OAAO+b,EAAOx3B,OAAS6X,EAAUv+B,EAAGk+C,EAAO70B,QAAUkV,EAAU7gC,EAAG0hD,GAAWlB,EAAOzN,WAAYlS,IACpG,MAAM2gB,KAAEA,EAAIC,MAAGA,GAAWT,GAAWngB,EAAWof,EAAQO,EAAQrZ,GAChE4a,GAASP,GAAQM,EAAWlzC,OAC5BwP,EAAUA,GAAWqjC,EAChBlnB,EAAIkmB,UACLqB,EAAW5rC,KAAKsqC,EAExB,CACA,OAAOuB,GAASH,GAASE,EAAYjhB,EAAWof,EAAQ9Y,IAAW/oB,CACvE,CACA,SAAS4jC,GAAWznB,EAAKzS,EAAMH,EAAKqB,EAAO2C,GACvC4O,EAAI5S,IAAMA,EACV4S,EAAIzS,KAAOA,EACXyS,EAAI3S,MAAQE,EAAOkB,EACnBuR,EAAI1S,OAASF,EAAMgE,EACnB4O,EAAIvR,MAAQA,EACZuR,EAAI5O,OAASA,CACjB,CACA,SAASs2B,GAAWJ,EAAOhhB,EAAWof,EAAQ9Y,GAC1C,MAAM+a,EAAcjC,EAAOv4B,QAC3B,IAAIjkB,EAAEA,EAACmS,EAAGA,GAAOirB,EACjB,IAAK,MAAM2f,KAAUqB,EAAM,CACvB,MAAMtnB,EAAMimB,EAAOjmB,IACboM,EAAQQ,EAAOqZ,EAAO7Z,QAAU,CAElCyZ,OAAQ,EACRrvC,OAAQ,GAENA,EAASyvC,EAAOL,YAAcxZ,EAAM51B,QAAU,EACpD,GAAIyvC,EAAOzN,WAAY,CACnB,MAAM/pB,EAAQ6X,EAAUv+B,EAAIyO,EACtB4a,EAASgb,EAAMjwB,MAAQ6jB,EAAI5O,OAC7BpV,GAAQowB,EAAM7sB,SACdlE,EAAI+wB,EAAM7sB,OAEVygB,EAAIkmB,SACJuB,GAAWznB,EAAK2nB,EAAYp6B,KAAMlS,EAAGqqC,EAAOkB,WAAae,EAAYt6B,MAAQs6B,EAAYp6B,KAAM6D,GAE/Fq2B,GAAWznB,EAAKsG,EAAU/Y,KAAO6e,EAAMyZ,OAAQxqC,EAAGoT,EAAO2C,GAE7Dgb,EAAM7sB,MAAQlE,EACd+wB,EAAMyZ,QAAUp3B,EAChBpT,EAAI2kB,EAAI1S,MACZ,KAAO,CACH,MAAM8D,EAASkV,EAAU7gC,EAAI+Q,EACvBiY,EAAQ2d,EAAMjwB,MAAQ6jB,EAAIvR,MAC5BzS,GAAQowB,EAAM7sB,SACdrW,EAAIkjC,EAAM7sB,OAEVygB,EAAIkmB,SACJuB,GAAWznB,EAAK92B,EAAGy+C,EAAYv6B,IAAKqB,EAAOi3B,EAAOoB,YAAca,EAAYr6B,OAASq6B,EAAYv6B,KAEjGq6B,GAAWznB,EAAK92B,EAAGo9B,EAAUlZ,IAAMgf,EAAMyZ,OAAQp3B,EAAO2C,GAE5Dgb,EAAM7sB,MAAQrW,EACdkjC,EAAMyZ,QAAUz0B,EAChBloB,EAAI82B,EAAI3S,KACZ,CACJ,CACAiZ,EAAUp9B,EAAIA,EACdo9B,EAAUjrB,EAAIA,CAClB,CACG,IAACoqC,GAAOj9B,EAAA,UAAG,CACbo/B,MAAAA,CAAQlgC,EAAOtL,GACHsL,EAAM4/B,QACP5/B,EAAM4/B,MAAQ,IAElBlrC,EAAK8pC,SAAW9pC,EAAK8pC,WAAY,EACjC9pC,EAAKunC,SAAWvnC,EAAKunC,UAAY,MACjCvnC,EAAK5F,OAAS4F,EAAK5F,QAAU,EAC7B4F,EAAKyrC,QAAUzrC,EAAKyrC,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACHhgB,IAAAA,CAAMxB,GACFlqB,EAAK0rB,KAAKxB,EACd,GAGZ,EACA5e,EAAM4/B,MAAM3rC,KAAKS,EACrB,EACH2rC,SAAAA,CAAWrgC,EAAOsgC,GACX,MAAMhuC,EAAQ0N,EAAM4/B,MAAQ5/B,EAAM4/B,MAAM/sC,QAAQytC,IAAc,GAChD,IAAVhuC,GACA0N,EAAM4/B,MAAMtmC,OAAOhH,EAAO,EAElC,EACH8wB,SAAAA,CAAWpjB,EAAOtL,EAAM3B,GACjB2B,EAAK8pC,SAAWzrC,EAAQyrC,SACxB9pC,EAAKunC,SAAWlpC,EAAQkpC,SACxBvnC,EAAK5F,OAASiE,EAAQjE,MAC1B,EACH0zB,MAAAA,CAAQxiB,EAAO+G,EAAO2C,EAAQ62B,GACvB,IAAKvgC,EACD,OAEJ,MAAMyF,EAAUwJ,GAAUjP,EAAMjN,QAAQwrC,OAAO94B,SACzCg5B,EAAiBzgD,KAAKC,IAAI8oB,EAAQtB,EAAQsB,MAAO,GACjD23B,EAAkB1gD,KAAKC,IAAIyrB,EAASjE,EAAQiE,OAAQ,GACpDk2B,EAvMd,SAA0BA,GACtB,MAAMY,EAxDV,SAAmBZ,GACf,MAAMY,EAAc,GACpB,IAAIjgD,EAAG2R,EAAMomB,EAAKP,EAAK2M,EAAOwZ,EAC9B,IAAI39C,EAAI,EAAG2R,GAAQ0tC,GAAS,IAAIjzC,OAAQpM,EAAI2R,IAAQ3R,EAChD+3B,EAAMsnB,EAAMr/C,KACT07C,SAAUlkB,EAAMhlB,SAAW2xB,QAAQwZ,cAAa,IAAU5lB,GAC7DkoB,EAAYvsC,KAAK,CACb3B,MAAO/R,EACP+3B,MACAP,MACA+Y,WAAYxY,EAAI0Z,eAChBljC,OAAQwpB,EAAIxpB,OACZ41B,MAAOA,GAAS3M,EAAM2M,EACtBwZ,gBAGR,OAAOsC,CACX,CAuCwBC,CAAUb,GACxBpB,EAAWX,GAAa2C,EAAY7tB,OAAQsrB,GAAOA,EAAK3lB,IAAIkmB,WAAW,GACvE34B,EAAOg4B,GAAaF,GAAiB6C,EAAa,SAAS,GAC3D76B,EAAQk4B,GAAaF,GAAiB6C,EAAa,UACnD96B,EAAMm4B,GAAaF,GAAiB6C,EAAa,QAAQ,GACzD56B,EAASi4B,GAAaF,GAAiB6C,EAAa,WACpDE,EAAmB9C,GAA4B4C,EAAa,KAC5DG,EAAiB/C,GAA4B4C,EAAa,KAChE,MAAO,CACHhC,WACAoC,WAAY/6B,EAAK4pB,OAAO/pB,GACxBm7B,eAAgBl7B,EAAM8pB,OAAOkR,GAAgBlR,OAAO7pB,GAAQ6pB,OAAOiR,GACnE9hB,UAAW+e,GAAiB6C,EAAa,aACzCM,SAAUj7B,EAAK4pB,OAAO9pB,GAAO8pB,OAAOkR,GACpC7P,WAAYprB,EAAI+pB,OAAO7pB,GAAQ6pB,OAAOiR,GAE9C,CAsLsBK,CAAiB/gC,EAAM4/B,OAC/BoB,EAAgBpB,EAAMkB,SACtBG,EAAkBrB,EAAM9O,WAC9Bl/B,EAAKoO,EAAM4/B,MAAQtnB,IACiB,mBAArBA,EAAI4oB,cACX5oB,EAAI4oB,iBAGZ,MAAMC,EAA0BH,EAAcjgB,OAAO,CAAC+W,EAAOmG,IAAOA,EAAK3lB,IAAIvlB,UAAwC,IAA7BkrC,EAAK3lB,IAAIvlB,QAAQ+S,QAAoBgyB,EAAQA,EAAQ,EAAG,IAAM,EAChJkG,EAAS1xC,OAAO2gC,OAAO,CACzBiS,WAAYn4B,EACZq4B,YAAa11B,EACbjE,UACAg5B,iBACAC,kBACAL,aAAcI,EAAiB,EAAI0C,EACnC7C,cAAeI,EAAkB,IAE/BE,EAAatyC,OAAOoB,OAAO,CAAA,EAAI+X,GACrCo5B,GAAiBD,EAAY3vB,GAAUsxB,IACvC,MAAM3hB,EAAYtyB,OAAOoB,OAAO,CAC5BkxC,aACAv+C,EAAGo+C,EACH1gD,EAAG2gD,EACHl9C,EAAGikB,EAAQI,KACXlS,EAAG8R,EAAQC,KACZD,GACGyf,EAAS4Y,GAAckD,EAAcvR,OAAOwR,GAAkBjD,GACpE2B,GAASC,EAAMpB,SAAU5f,EAAWof,EAAQ9Y,GAC5Cya,GAASqB,EAAepiB,EAAWof,EAAQ9Y,GACvCya,GAASsB,EAAiBriB,EAAWof,EAAQ9Y,IAC7Cya,GAASqB,EAAepiB,EAAWof,EAAQ9Y,GA3KvD,SAA0BtG,GACtB,MAAMggB,EAAahgB,EAAUggB,WAC7B,SAASwC,EAAUrpB,GACf,MAAMspB,EAASrjD,KAAKC,IAAI2gD,EAAW7mB,GAAO6G,EAAU7G,GAAM,GAE1D,OADA6G,EAAU7G,IAAQspB,EACXA,CACX,CACAziB,EAAUjrB,GAAKytC,EAAU,OACzBxiB,EAAUp9B,GAAK4/C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiB1iB,GACjBohB,GAAWJ,EAAMgB,WAAYhiB,EAAWof,EAAQ9Y,GAChDtG,EAAUp9B,GAAKo9B,EAAUv+B,EACzBu+B,EAAUjrB,GAAKirB,EAAU7gC,EACzBiiD,GAAWJ,EAAMiB,eAAgBjiB,EAAWof,EAAQ9Y,GACpDllB,EAAM4e,UAAY,CACd/Y,KAAM+Y,EAAU/Y,KAChBH,IAAKkZ,EAAUlZ,IACfC,MAAOiZ,EAAU/Y,KAAO+Y,EAAUv+B,EAClCulB,OAAQgZ,EAAUlZ,IAAMkZ,EAAU7gC,EAClC2rB,OAAQkV,EAAU7gC,EAClBgpB,MAAO6X,EAAUv+B,GAErBuR,EAAKguC,EAAMhhB,UAAY2f,IACnB,MAAMjmB,EAAMimB,EAAOjmB,IACnBhsB,OAAOoB,OAAO4qB,EAAKtY,EAAM4e,WACzBtG,EAAIkK,OAAO5D,EAAUv+B,EAAGu+B,EAAU7gC,EAAG,CACjC8nB,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,KAGpB,IAGJ,MAAM27B,GACLC,cAAAA,CAAel4B,EAAQ8P,GAAc,CACrCqoB,cAAAA,CAAe5/B,GACR,OAAO,CACX,CACH4Y,gBAAAA,CAAiBza,EAAO9R,EAAMgL,GAAW,CACzCwhB,mBAAAA,CAAoB1a,EAAO9R,EAAMgL,GAAW,CAC5C6I,mBAAAA,GACO,QACJ,CACHkX,cAAAA,CAAe1B,EAASxQ,EAAO2C,EAAQ0P,GAGhC,OAFArS,EAAQ/oB,KAAKC,IAAI,EAAG8oB,GAASwQ,EAAQxQ,OACrC2C,EAASA,GAAU6N,EAAQ7N,OACpB,CACH3C,QACA2C,OAAQ1rB,KAAKC,IAAI,EAAGm7B,EAAcp7B,KAAK8X,MAAMiR,EAAQqS,GAAe1P,GAE5E,CACHg4B,UAAAA,CAAWp4B,GACJ,OAAO,CACX,CACHq4B,YAAAA,CAAaze,GACV,EACJpiB,EAAA,eAAAygC,IAEA,MAAMK,WAAsBL,GACxBC,cAAAA,CAAe9sC,GACX,OAAOA,GAAQA,EAAK6U,YAAc7U,EAAK6U,WAAW,OAAS,IAC/D,CACAo4B,YAAAA,CAAaze,GACTA,EAAOnwB,QAAQyO,WAAY,CAC/B,EACJV,EAAA,gBAAA8gC,IAEA,MAAMC,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBjyC,GAAkB,OAAVA,GAA4B,KAAVA,EAoC3CkyC,KAAuBnoB,IAA+B,CACxDE,SAAS,GAOb,SAASkoB,GAAe1iC,EAAO9R,EAAMgL,GAC7B8G,GAASA,EAAMsJ,QACftJ,EAAMsJ,OAAOoR,oBAAoBxsB,EAAMgL,EAAUupC,GAEzD,CAYA,SAASE,GAAiBC,EAAUt5B,GAChC,IAAK,MAAMpI,KAAQ0hC,EACf,GAAI1hC,IAASoI,GAAUpI,EAAK2hC,SAASv5B,GACjC,OAAO,CAGnB,CACA,SAASw5B,GAAqB9iC,EAAO9R,EAAMgL,GACvC,MAAMoQ,EAAStJ,EAAMsJ,OACfy5B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMjT,KAASgT,EAChBC,EAAUA,GAAWP,GAAiB1S,EAAMkT,WAAY75B,GACxD45B,EAAUA,IAAYP,GAAiB1S,EAAMmT,aAAc95B,GAE3D45B,GACAhqC,MAOR,OAJA6pC,EAASM,QAAQxsB,SAAU,CACvBysB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,SAASS,GAAqBxjC,EAAO9R,EAAMgL,GACvC,MAAMoQ,EAAStJ,EAAMsJ,OACfy5B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMjT,KAASgT,EAChBC,EAAUA,GAAWP,GAAiB1S,EAAMmT,aAAc95B,GAC1D45B,EAAUA,IAAYP,GAAiB1S,EAAMkT,WAAY75B,GAEzD45B,GACAhqC,MAOR,OAJA6pC,EAASM,QAAQxsB,SAAU,CACvBysB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,MAAMU,GAAqB,IAAI3kC,IAC/B,IAAI4kC,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAM/pC,OAAO+H,iBACfgiC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBlqC,QAAQ,CAAC4L,EAAQnF,KAC5BA,EAAMmJ,0BAA4By6B,GAClCz+B,MAGZ,CAaA,SAAS0+B,GAAqB7jC,EAAO9R,EAAMgL,GACvC,MAAMoQ,EAAStJ,EAAMsJ,OACfkQ,EAAYlQ,GAAUwN,GAAexN,GAC3C,IAAKkQ,EACD,OAEJ,MAAMrU,EAASpL,GAAU,CAACgN,EAAO2C,KAC7B,MAAMrpB,EAAIm5B,EAAUI,YACpB1gB,EAAS6N,EAAO2C,GACZrpB,EAAIm5B,EAAUI,aACd1gB,KAELW,QACGkpC,EAAW,IAAIe,eAAgBb,IACjC,MAAMhT,EAAQgT,EAAQ,GAChBl8B,EAAQkpB,EAAM8T,YAAYh9B,MAC1B2C,EAASumB,EAAM8T,YAAYr6B,OACnB,IAAV3C,GAA0B,IAAX2C,GAGnBvE,EAAO4B,EAAO2C,KAIlB,OAFAq5B,EAASM,QAAQ7pB,GAlCrB,SAAuCxZ,EAAOmF,GACrCs+B,GAAmBhvC,MACpBoF,OAAO4gB,iBAAiB,SAAUkpB,IAEtCF,GAAmB/pC,IAAIsG,EAAOmF,EAClC,CA8BI6+B,CAA8BhkC,EAAOmF,GAC9B49B,CACX,CACA,SAASkB,GAAgBjkC,EAAO9R,EAAM60C,GAC9BA,GACAA,EAASmB,aAEA,WAATh2C,GApCR,SAAyC8R,GACrCyjC,GAAmBlxB,OAAOvS,GACrByjC,GAAmBhvC,MACpBoF,OAAO6gB,oBAAoB,SAAUipB,GAE7C,CAgCQQ,CAAgCnkC,EAExC,CACA,SAASokC,GAAqBpkC,EAAO9R,EAAMgL,GACvC,MAAMoQ,EAAStJ,EAAMsJ,OACfsH,EAAQ7W,GAAWke,IACH,OAAdjY,EAAMwC,KACNtJ,EAtHZ,SAAyB+e,EAAOjY,GAC5B,MAAM9R,EAAO4zC,GAAY7pB,EAAM/pB,OAAS+pB,EAAM/pB,MACxC1M,EAAEA,EAACmS,EAAGA,GAAOqkB,GAAoBC,EAAOjY,GAC9C,MAAO,CACH9R,OACA8R,QACAqkC,OAAQpsB,EACRz2B,OAAS3B,IAAN2B,EAAkBA,EAAI,KACzBmS,OAAS9T,IAAN8T,EAAkBA,EAAI,KAEjC,CA4GqB2wC,CAAgBrsB,EAAOjY,KAErCA,GAEH,OApIJ,SAAqBkB,EAAMhT,EAAMgL,GACzBgI,GACAA,EAAKuZ,iBAAiBvsB,EAAMgL,EAAUupC,GAE9C,CA+HI8B,CAAYj7B,EAAQpb,EAAM0iB,GACnBA,CACX,CACC,MAAM4zB,WAAoBjD,GAC1BC,cAAAA,CAAel4B,EAAQ8P,GAChB,MAAMvX,EAAUyH,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAI1H,GAAWA,EAAQyH,SAAWA,GA/KzC,SAAoBA,EAAQ8P,GACzB,MAAMhX,EAAQkH,EAAOlH,MACfqiC,EAAen7B,EAAOo7B,aAAa,UACnCC,EAAcr7B,EAAOo7B,aAAa,SAcxC,GAbAp7B,EAAOu4B,IAAe,CAClBjiB,QAAS,CACLlW,OAAQ+6B,EACR19B,MAAO49B,EACPviC,MAAO,CACH0D,QAAS1D,EAAM0D,QACf4D,OAAQtH,EAAMsH,OACd3C,MAAO3E,EAAM2E,SAIzB3E,EAAM0D,QAAU1D,EAAM0D,SAAW,QACjC1D,EAAM+V,UAAY/V,EAAM+V,WAAa,aACjCqqB,GAAcmC,GAAc,CAC5B,MAAMC,EAAejqB,GAAarR,EAAQ,cACrBzpB,IAAjB+kD,IACAt7B,EAAOvC,MAAQ69B,EAEvB,CACA,GAAIpC,GAAciC,GACd,GAA4B,KAAxBn7B,EAAOlH,MAAMsH,OACbJ,EAAOI,OAASJ,EAAOvC,OAASqS,GAAe,OAC5C,CACH,MAAMyrB,EAAgBlqB,GAAarR,EAAQ,eACrBzpB,IAAlBglD,IACAv7B,EAAOI,OAASm7B,EAExB,CAGR,CA8IYC,CAAWx7B,EAAQ8P,GACZvX,GAEJ,IACX,CACH4/B,cAAAA,CAAe5/B,GACR,MAAMyH,EAASzH,EAAQyH,OACvB,IAAKA,EAAOu4B,IACR,SAEJ,MAAMjiB,EAAUtW,EAAOu4B,IAAajiB,QACpC,CACI,SACA,SACFrmB,QAASuV,IACP,MAAMve,EAAQqvB,EAAQ9Q,GAClBxe,EAAcC,GACd+Y,EAAOy7B,gBAAgBj2B,GAEvBxF,EAAO07B,aAAal2B,EAAMve,KAGlC,MAAM6R,EAAQwd,EAAQxd,OAAS,CAAA,EAM/B,OALA9V,OAAOD,KAAK+V,GAAO7I,QAAS3G,IACxB0W,EAAOlH,MAAMxP,GAAOwP,EAAMxP,KAE9B0W,EAAOvC,MAAQuC,EAAOvC,aACfuC,EAAOu4B,MAElB,CACHpnB,gBAAAA,CAAiBza,EAAO9R,EAAMgL,GACvB7K,KAAKqsB,oBAAoB1a,EAAO9R,GAChC,MAAM+2C,EAAUjlC,EAAMklC,WAAallC,EAAMklC,SAAW,CAAA,GAM9ChJ,EALW,CACbiJ,OAAQrC,GACRsC,OAAQ5B,GACRr+B,OAAQ0+B,IAEa31C,IAASk2C,GAClCa,EAAQ/2C,GAAQguC,EAAQl8B,EAAO9R,EAAMgL,EACzC,CACHwhB,mBAAAA,CAAoB1a,EAAO9R,GACpB,MAAM+2C,EAAUjlC,EAAMklC,WAAallC,EAAMklC,SAAW,CAAA,GAC9Ct0B,EAAQq0B,EAAQ/2C,GACjB0iB,KAGY,CACbu0B,OAAQlB,GACRmB,OAAQnB,GACR9+B,OAAQ8+B,IAEa/1C,IAASw0C,IAC1B1iC,EAAO9R,EAAM0iB,GACrBq0B,EAAQ/2C,QAAQrO,EACpB,CACAkiB,mBAAAA,GACI,OAAOlI,OAAO+H,gBAClB,CACHqX,cAAAA,CAAe3P,EAAQvC,EAAO2C,EAAQ0P,GAC/B,OAAOH,GAAe3P,EAAQvC,EAAO2C,EAAQ0P,EACjD,CACHsoB,UAAAA,CAAWp4B,GACJ,MAAMkQ,EAAYlQ,GAAUwN,GAAexN,GAC3C,SAAUkQ,IAAaA,EAAU6rB,YACrC,EAGJ,SAASC,GAAgBh8B,GACrB,OAAKsN,MAAgD,oBAApB2uB,iBAAmCj8B,aAAkBi8B,gBAC3E3D,GAEJ4C,EACX,CAPA1jC,EAAA,cAAA0jC,IASA,MAAMgB,GACF3e,gBAAkB,CAAA,EAClBA,0BAAuBhnC,EACvB2B,EACAmS,EACAuR,QAAS,EACTnS,QACA6wB,YACA6hB,eAAAA,CAAgBpJ,GACZ,MAAM76C,EAAEA,EAACmS,EAAGA,GAAOtF,KAAK6uC,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACH76C,IACAmS,IAER,CACA+xC,QAAAA,GACI,OAAO1vC,GAAS3H,KAAK7M,IAAMwU,GAAS3H,KAAKsF,EAC7C,CACAupC,QAAAA,CAASvuB,EAAOg3B,GACZ,MAAMnmB,EAAQnxB,KAAKu1B,YACnB,IAAK+hB,IAAUnmB,EAEX,OAAOnxB,KAEX,MAAMF,EAAM,CAAA,EAIZ,OAHAwgB,EAAMpV,QAASuV,IACX3gB,EAAI2gB,GAAQ0Q,EAAM1Q,IAAS0Q,EAAM1Q,GAAM5J,SAAWsa,EAAM1Q,GAAMwT,IAAMj0B,KAAKygB,KAEtE3gB,CACX,EAGJ,SAASoZ,GAASjE,EAAOvD,GACrB,MAAM6lC,EAAWtiC,EAAMvQ,QAAQgN,MACzB8lC,EAyBV,SAA2BviC,GACvB,MAAMyC,EAASzC,EAAMvQ,QAAQgT,OACvBS,EAAalD,EAAMwiC,YACnBC,EAAWziC,EAAMusB,QAAUrpB,GAAcT,EAAS,EAAI,GACtDigC,EAAW1iC,EAAM2iC,WAAaz/B,EACpC,OAAOxoB,KAAK8X,MAAM9X,KAAKE,IAAI6nD,EAAUC,GACzC,CA/B+BE,CAAkB5iC,GACvC6iC,EAAanoD,KAAKE,IAAI0nD,EAASQ,eAAiBP,EAAoBA,GACpEQ,EAAeT,EAASj+B,MAAM2+B,QA6CvC,SAAyBvmC,GACtB,MAAM+X,EAAS,GACf,IAAIv3B,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAO6N,EAAMpT,OAAQpM,EAAI2R,EAAM3R,IAClCwf,EAAMxf,GAAGonB,OACTmQ,EAAO7jB,KAAK1T,GAGpB,OAAOu3B,CACX,CAtDkDyuB,CAAgBxmC,GAAS,GACjEymC,EAAkBH,EAAa15C,OAC/B85C,EAAQJ,EAAa,GACrBxtC,EAAOwtC,EAAaG,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBL,EAElB,OAgDP,SAAoBpmC,EAAO2mC,EAAUL,EAAc7Q,GAChD,IAEIj1C,EAFAma,EAAQ,EACR+Z,EAAO4xB,EAAa,GAGxB,IADA7Q,EAAUx3C,KAAK2oD,KAAKnR,GAChBj1C,EAAI,EAAGA,EAAIwf,EAAMpT,OAAQpM,IACrBA,IAAMk0B,IACNiyB,EAASzyC,KAAK8L,EAAMxf,IACpBma,IACA+Z,EAAO4xB,EAAa3rC,EAAQ86B,GAGxC,CA7DQoR,CAAW7mC,EAAO2mC,EAAUL,EAAcG,EAAkBL,GACrDO,EAEX,MAAMlR,EAqBT,SAA0B6Q,EAActmC,EAAOomC,GAC5C,MAAMU,EA4DT,SAAwBn0B,GACrB,MAAMtkB,EAAMskB,EAAI/lB,OAChB,IAAIpM,EAAG+6C,EACP,GAAIltC,EAAM,EACN,OAAO,EAEX,IAAIktC,EAAO5oB,EAAI,GAAInyB,EAAI,EAAGA,EAAI6N,IAAO7N,EACjC,GAAImyB,EAAInyB,GAAKmyB,EAAInyB,EAAI,KAAO+6C,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6BwL,CAAeT,GAClC7Q,EAAUz1B,EAAMpT,OAASw5C,EAC/B,IAAKU,EACD,OAAO7oD,KAAKC,IAAIu3C,EAAS,GAE7B,MAAMuR,EDtsGN,SAAoBx2C,GACpB,MAAMunB,EAAS,GACT3gB,EAAOnZ,KAAKmZ,KAAK5G,GACvB,IAAIhQ,EACJ,IAAIA,EAAI,EAAGA,EAAI4W,EAAM5W,IACbgQ,EAAQhQ,IAAM,IACdu3B,EAAO7jB,KAAK1T,GACZu3B,EAAO7jB,KAAK1D,EAAQhQ,IAO5B,OAJI4W,KAAiB,EAAPA,IACV2gB,EAAO7jB,KAAKkD,GAEhB2gB,EAAO4X,KAAK,CAAC5wC,EAAGC,IAAID,EAAIC,GAAGyhC,MACpB1I,CACX,CCurGoBkvB,CAAWH,GAC3B,IAAI,IAAItmD,EAAI,EAAG2R,EAAO60C,EAAQp6C,OAAS,EAAGpM,EAAI2R,EAAM3R,IAAI,CACpD,MAAMkhC,EAASslB,EAAQxmD,GACvB,GAAIkhC,EAAS+T,EACT,OAAO/T,CAEf,CACA,OAAOzjC,KAAKC,IAAIu3C,EAAS,EAC7B,CAnCoByR,CAAiBZ,EAActmC,EAAOomC,GACtD,GAAIK,EAAkB,EAAG,CACrB,IAAIjmD,EAAG2R,EACP,MAAMg1C,EAAkBV,EAAkB,EAAIxoD,KAAKL,OAAOkb,EAAO4tC,IAAUD,EAAkB,IAAM,KAEnG,IADAryB,GAAKpU,EAAO2mC,EAAUlR,EAASllC,EAAc42C,GAAmB,EAAIT,EAAQS,EAAiBT,GACzFlmD,EAAI,EAAG2R,EAAOs0C,EAAkB,EAAGjmD,EAAI2R,EAAM3R,IAC7C4zB,GAAKpU,EAAO2mC,EAAUlR,EAAS6Q,EAAa9lD,GAAI8lD,EAAa9lD,EAAI,IAGrE,OADA4zB,GAAKpU,EAAO2mC,EAAUlR,EAAS38B,EAAMvI,EAAc42C,GAAmBnnC,EAAMpT,OAASkM,EAAOquC,GACrFR,CACX,CAEA,OADAvyB,GAAKpU,EAAO2mC,EAAUlR,GACfkR,CACX,CA8CC,SAASvyB,GAAKpU,EAAO2mC,EAAUlR,EAAS2R,EAAYC,GACjD,MAAMvvC,EAAQ3G,EAAei2C,EAAY,GACnCrvC,EAAM9Z,KAAKE,IAAIgT,EAAek2C,EAAUrnC,EAAMpT,QAASoT,EAAMpT,QACnE,IACIA,EAAQpM,EAAGk0B,EADX/Z,EAAQ,EAQZ,IANA86B,EAAUx3C,KAAK2oD,KAAKnR,GAChB4R,IACAz6C,EAASy6C,EAAWD,EACpB3R,EAAU7oC,EAAS3O,KAAK8X,MAAMnJ,EAAS6oC,IAE3C/gB,EAAO5c,EACD4c,EAAO,GACT/Z,IACA+Z,EAAOz2B,KAAKL,MAAMka,EAAQ6C,EAAQ86B,GAEtC,IAAIj1C,EAAIvC,KAAKC,IAAI4Z,EAAO,GAAItX,EAAIuX,EAAKvX,IAC7BA,IAAMk0B,IACNiyB,EAASzyC,KAAK8L,EAAMxf,IACpBma,IACA+Z,EAAOz2B,KAAKL,MAAMka,EAAQ6C,EAAQ86B,GAG9C,CAhGA10B,EAAA,UAAA0kC,IA+GA,MACM6B,GAAiBA,CAAC/jC,EAAOstB,EAAM7qB,IAAkB,QAAT6qB,GAA2B,SAATA,EAAkBttB,EAAMstB,GAAQ7qB,EAASzC,EAAMstB,GAAQ7qB,EACjHuhC,GAAgBA,CAACC,EAAanB,IAAgBpoD,KAAKE,IAAIkoD,GAAiBmB,EAAaA,GAC1F,SAASC,GAAO90B,EAAK+0B,GAClB,MAAM3vB,EAAS,GACT4vB,EAAYh1B,EAAI/lB,OAAS86C,EACzBr5C,EAAMskB,EAAI/lB,OAChB,IAAIpM,EAAI,EACR,KAAMA,EAAI6N,EAAK7N,GAAKmnD,EAChB5vB,EAAO7jB,KAAKye,EAAI10B,KAAK8X,MAAMvV,KAE/B,OAAOu3B,CACX,CACC,SAAS6vB,GAAoBrkC,EAAOhR,EAAOs1C,GACxC,MAAMj7C,EAAS2W,EAAMvD,MAAMpT,OACrBk7C,EAAa7pD,KAAKE,IAAIoU,EAAO3F,EAAS,GACtCkL,EAAQyL,EAAMiwB,YACdz7B,EAAMwL,EAAMkwB,UACZh+B,EAAU,KAChB,IACIuQ,EADA+hC,EAAYxkC,EAAMysB,gBAAgB8X,GAEtC,KAAID,IAEI7hC,EADW,IAAXpZ,EACS3O,KAAKC,IAAI6pD,EAAYjwC,EAAOC,EAAMgwC,GAC1B,IAAVx1C,GACGgR,EAAMysB,gBAAgB,GAAK+X,GAAa,GAExCA,EAAYxkC,EAAMysB,gBAAgB8X,EAAa,IAAM,EAEnEC,GAAaD,EAAav1C,EAAQyT,GAAUA,EACxC+hC,EAAYjwC,EAAQrC,GAAWsyC,EAAYhwC,EAAMtC,IAIzD,OAAOsyC,CACX,CAcC,SAASC,GAAkBh1C,GACxB,OAAOA,EAAQwT,UAAYxT,EAAQyT,WAAa,CACpD,CACC,SAASwhC,GAAej1C,EAASoc,GAC9B,IAAKpc,EAAQ+S,QACT,OAAO,EAEX,MAAM5D,EAAOgN,GAAOnc,EAAQmP,KAAMiN,GAC5B1J,EAAUwJ,GAAUlc,EAAQ0S,SAElC,OADc7kB,EAAQmS,EAAQkU,MAAQlU,EAAQkU,KAAKta,OAAS,GAC7CuV,EAAKG,WAAaoD,EAAQiE,MAC7C,CAcA,SAASu+B,GAAW9tC,EAAO8hC,EAAUnqC,GAChC,IAAI3D,EAAM+L,GAAmBC,GAI9B,OAHIrI,GAAwB,UAAbmqC,IAAyBnqC,GAAwB,UAAbmqC,KAC/C9tC,EA7EcgM,IAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1E+tC,CAAa/5C,IAEhBA,CACX,CAwCA,MAAMg6C,WAAc3C,GAChBv3C,WAAAA,CAAY4zB,GACRgQ,QACCxjC,KAAKgC,GAAKwxB,EAAIxxB,GACdhC,KAAKH,KAAO2zB,EAAI3zB,KAChBG,KAAK0E,aAAUlT,EACfwO,KAAKmU,IAAMqf,EAAIrf,IACfnU,KAAK2R,MAAQ6hB,EAAI7hB,MACjB3R,KAAKqX,SAAM7lB,EACXwO,KAAKuX,YAAS/lB,EACdwO,KAAKwX,UAAOhmB,EACZwO,KAAKsX,WAAQ9lB,EACbwO,KAAK0Y,WAAQlnB,EACbwO,KAAKqb,YAAS7pB,EACfwO,KAAK+5C,SAAW,CACZviC,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEXvX,KAAKwf,cAAWhuB,EAChBwO,KAAKirB,eAAYz5B,EACjBwO,KAAKg6C,gBAAaxoD,EAClBwO,KAAKi6C,mBAAgBzoD,EACrBwO,KAAKk6C,iBAAc1oD,EACnBwO,KAAKm6C,kBAAe3oD,EACpBwO,KAAK4M,UAAOpb,EACZwO,KAAKo6C,mBAAgB5oD,EACtBwO,KAAKnQ,SAAM2B,EACXwO,KAAKpQ,SAAM4B,EACXwO,KAAKq6C,YAAS7oD,EACbwO,KAAK0R,MAAQ,GACb1R,KAAKs6C,eAAiB,KACtBt6C,KAAKu6C,YAAc,KACnBv6C,KAAKw6C,YAAc,KACpBx6C,KAAKwhC,QAAU,EACfxhC,KAAK43C,WAAa,EAClB53C,KAAKy6C,kBAAoB,CAAA,EACxBz6C,KAAKklC,iBAAc1zC,EACnBwO,KAAKmlC,eAAY3zC,EAClBwO,KAAKytC,gBAAiB,EACtBztC,KAAK06C,cAAWlpD,EAChBwO,KAAK26C,cAAWnpD,EAChBwO,KAAK46C,mBAAgBppD,EACrBwO,KAAK66C,mBAAgBrpD,EACrBwO,KAAK86C,aAAe,EACpB96C,KAAK+6C,aAAe,EACpB/6C,KAAKihC,OAAS,CAAA,EACdjhC,KAAKg7C,mBAAoB,EACzBh7C,KAAKm5B,cAAW3nC,CACpB,CACHu7C,IAAAA,CAAKroC,GACE1E,KAAK0E,QAAUA,EAAQif,WAAW3jB,KAAKkb,cACvClb,KAAK4M,KAAOlI,EAAQkI,KACpB5M,KAAK26C,SAAW36C,KAAK2lB,MAAMjhB,EAAQ7U,KACnCmQ,KAAK06C,SAAW16C,KAAK2lB,MAAMjhB,EAAQ9U,KACnCoQ,KAAK66C,cAAgB76C,KAAK2lB,MAAMjhB,EAAQu2C,cACxCj7C,KAAK46C,cAAgB56C,KAAK2lB,MAAMjhB,EAAQw2C,aAC5C,CACHv1B,KAAAA,CAAMyY,EAAKn6B,GACJ,OAAOm6B,CACX,CACHrxB,aAAAA,GACO,IAAI4tC,SAAEA,EAAQD,SAAGA,EAAQG,cAAGA,EAAaD,cAAGA,GAAmB56C,KAK/D,OAJA26C,EAAWh4C,EAAgBg4C,EAAUl4C,OAAOkE,mBAC5C+zC,EAAW/3C,EAAgB+3C,EAAUj4C,OAAO66B,mBAC5Cud,EAAgBl4C,EAAgBk4C,EAAep4C,OAAOkE,mBACtDi0C,EAAgBj4C,EAAgBi4C,EAAen4C,OAAO66B,mBAC/C,CACHztC,IAAK8S,EAAgBg4C,EAAUE,GAC/BjrD,IAAK+S,EAAgB+3C,EAAUE,GAC/B/tC,WAAYrK,EAAem4C,GAC3B7tC,WAAYtK,EAAek4C,GAEnC,CACHzd,SAAAA,CAAUC,GACH,IACI51B,GADAzX,IAAEA,EAAGD,IAAGA,EAAGid,WAAGA,EAAUC,WAAGA,GAAgB9M,KAAK+M,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACHjd,MACAD,OAGR,MAAMurD,EAAQn7C,KAAKm3B,0BACnB,IAAI,IAAIjlC,EAAI,EAAG2R,EAAOs3C,EAAM78C,OAAQpM,EAAI2R,IAAQ3R,EAC5CoV,EAAQ6zC,EAAMjpD,GAAGmlC,WAAW4F,UAAUj9B,KAAMk9B,GACvCrwB,IACDhd,EAAMF,KAAKE,IAAIA,EAAKyX,EAAMzX,MAEzBid,IACDld,EAAMD,KAAKC,IAAIA,EAAK0X,EAAM1X,MAKlC,OAFAC,EAAMid,GAAcjd,EAAMD,EAAMA,EAAMC,EACtCD,EAAMid,GAAchd,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,IAAK8S,EAAgB9S,EAAK8S,EAAgB/S,EAAKC,IAC/CD,IAAK+S,EAAgB/S,EAAK+S,EAAgB9S,EAAKD,IAEvD,CACH+gD,UAAAA,GACO,MAAO,CACHn5B,KAAMxX,KAAKk6C,aAAe,EAC1B7iC,IAAKrX,KAAKg6C,YAAc,EACxB1iC,MAAOtX,KAAKm6C,cAAgB,EAC5B5iC,OAAQvX,KAAKi6C,eAAiB,EAEtC,CACHmB,QAAAA,GACO,YAAY1pC,KAChB,CACH8qB,SAAAA,GACO,MAAM5iB,EAAO5Z,KAAK2R,MAAMiI,KACxB,OAAO5Z,KAAK0E,QAAQ63B,SAAWv8B,KAAK2jC,eAAiB/pB,EAAKyhC,QAAUzhC,EAAK0hC,UAAY1hC,EAAK2iB,QAAU,EACxG,CACHgf,aAAAA,CAAchrB,EAAYvwB,KAAK2R,MAAM4e,WAE9B,OADcvwB,KAAKu6C,cAAgBv6C,KAAKu6C,YAAcv6C,KAAKw7C,mBAAmBjrB,GAElF,CACAsiB,YAAAA,GACI7yC,KAAKihC,OAAS,CAAA,EACdjhC,KAAKg7C,mBAAoB,CAC7B,CACAS,YAAAA,GACIv4C,EAASlD,KAAK0E,QAAQ+2C,aAAc,CAChCz7C,MAER,CACHm0B,MAAAA,CAAO3U,EAAUyL,EAAWD,GACrB,MAAMrT,YAAEA,EAAWG,MAAGA,EAAQpG,MAAO6lC,GAAcv3C,KAAK0E,QAClDg3C,EAAanE,EAASmE,WAC5B17C,KAAKy7C,eACLz7C,KAAKwf,SAAWA,EAChBxf,KAAKirB,UAAYA,EACjBjrB,KAAK+5C,SAAW/uB,EAAU/sB,OAAOoB,OAAO,CACpCmY,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACTyT,GACHhrB,KAAK0R,MAAQ,KACb1R,KAAKw6C,YAAc,KACnBx6C,KAAKs6C,eAAiB,KACtBt6C,KAAKu6C,YAAc,KACnBv6C,KAAK27C,sBACL37C,KAAK47C,gBACL57C,KAAK67C,qBACL77C,KAAK43C,WAAa53C,KAAK2jC,eAAiB3jC,KAAK0Y,MAAQsS,EAAQxT,KAAOwT,EAAQ1T,MAAQtX,KAAKqb,OAAS2P,EAAQ3T,IAAM2T,EAAQzT,OACnHvX,KAAKg7C,oBACNh7C,KAAK87C,mBACL97C,KAAK+7C,sBACL/7C,KAAKg8C,kBACLh8C,KAAKq6C,ODxuEb,SAAmB4B,EAAQnkC,EAAOH,GAClC,MAAM9nB,IAAEA,EAAGD,IAAGA,GAASqsD,EACjBjJ,EAASlwC,EAAYgV,GAAQloB,EAAMC,GAAO,GAC1CqsD,EAAWA,CAACh6C,EAAO+hB,IAAMtM,GAAyB,IAAVzV,EAAc,EAAIA,EAAQ+hB,EACxE,MAAO,CACHp0B,IAAKqsD,EAASrsD,GAAMF,KAAKyX,IAAI4rC,IAC7BpjD,IAAKssD,EAAStsD,EAAKojD,GAE3B,CCguE0BmJ,CAAUn8C,KAAM8X,EAAOH,GACrC3X,KAAKg7C,mBAAoB,GAE7Bh7C,KAAKo8C,mBACLp8C,KAAK0R,MAAQ1R,KAAKq8C,cAAgB,GAClCr8C,KAAKs8C,kBACL,MAAMC,EAAkBb,EAAa17C,KAAK0R,MAAMpT,OAChD0B,KAAKw8C,sBAAsBD,EAAkBpD,GAAOn5C,KAAK0R,MAAOgqC,GAAc17C,KAAK0R,OACnF1R,KAAK+0B,YACL/0B,KAAKy8C,+BACLz8C,KAAK08C,yBACL18C,KAAK28C,8BACDpF,EAAS9/B,UAAY8/B,EAASr+B,UAAgC,SAApBq+B,EAASrzC,UACnDlE,KAAK0R,MAAQwH,GAASlZ,KAAMA,KAAK0R,OACjC1R,KAAKw6C,YAAc,KACnBx6C,KAAK48C,iBAELL,GACAv8C,KAAKw8C,sBAAsBx8C,KAAK0R,OAEpC1R,KAAK68C,YACL78C,KAAK88C,MACL98C,KAAK+8C,WACL/8C,KAAKg9C,aACT,CACHjoB,SAAAA,GACO,IACI4Q,EAAYE,EADZoX,EAAgBj9C,KAAK0E,QAAQjB,QAE7BzD,KAAK2jC,gBACLgC,EAAa3lC,KAAKwX,KAClBquB,EAAW7lC,KAAKsX,QAEhBquB,EAAa3lC,KAAKqX,IAClBwuB,EAAW7lC,KAAKuX,OAChB0lC,GAAiBA,GAErBj9C,KAAKklC,YAAcS,EACnB3lC,KAAKmlC,UAAYU,EACjB7lC,KAAKytC,eAAiBwP,EACtBj9C,KAAKwhC,QAAUqE,EAAWF,EAC1B3lC,KAAKk9C,eAAiBl9C,KAAK0E,QAAQy4C,aACvC,CACAH,WAAAA,GACI95C,EAASlD,KAAK0E,QAAQs4C,YAAa,CAC/Bh9C,MAER,CACA27C,mBAAAA,GACIz4C,EAASlD,KAAK0E,QAAQi3C,oBAAqB,CACvC37C,MAER,CACA47C,aAAAA,GACQ57C,KAAK2jC,gBACL3jC,KAAK0Y,MAAQ1Y,KAAKwf,SAClBxf,KAAKwX,KAAO,EACZxX,KAAKsX,MAAQtX,KAAK0Y,QAElB1Y,KAAKqb,OAASrb,KAAKirB,UACnBjrB,KAAKqX,IAAM,EACXrX,KAAKuX,OAASvX,KAAKqb,QAEvBrb,KAAKk6C,YAAc,EACnBl6C,KAAKg6C,WAAa,EAClBh6C,KAAKm6C,aAAe,EACpBn6C,KAAKi6C,cAAgB,CACzB,CACA4B,kBAAAA,GACI34C,EAASlD,KAAK0E,QAAQm3C,mBAAoB,CACtC77C,MAER,CACAo9C,UAAAA,CAAW5nC,GACPxV,KAAK2R,MAAM0rC,cAAc7nC,EAAMxV,KAAKkb,cACpChY,EAASlD,KAAK0E,QAAQ8Q,GAAO,CACzBxV,MAER,CACA87C,gBAAAA,GACI97C,KAAKo9C,WAAW,mBACpB,CACArB,mBAAAA,GAAuB,CACvBC,eAAAA,GACIh8C,KAAKo9C,WAAW,kBACpB,CACAhB,gBAAAA,GACIp8C,KAAKo9C,WAAW,mBACpB,CACHf,UAAAA,GACO,MAAO,EACX,CACAC,eAAAA,GACIt8C,KAAKo9C,WAAW,kBACpB,CACAE,2BAAAA,GACIp6C,EAASlD,KAAK0E,QAAQ44C,4BAA6B,CAC/Ct9C,MAER,CACHu9C,kBAAAA,CAAmB7rC,GACZ,MAAM6lC,EAAWv3C,KAAK0E,QAAQgN,MAC9B,IAAIxf,EAAG2R,EAAMquB,EACb,IAAIhgC,EAAI,EAAG2R,EAAO6N,EAAMpT,OAAQpM,EAAI2R,EAAM3R,IACtCggC,EAAOxgB,EAAMxf,GACbggC,EAAK2L,MAAQ36B,EAASq0C,EAASr0C,SAAU,CACrCgvB,EAAKhwB,MACLhQ,EACAwf,GACD1R,KAEX,CACAw9C,0BAAAA,GACIt6C,EAASlD,KAAK0E,QAAQ84C,2BAA4B,CAC9Cx9C,MAER,CACAy8C,4BAAAA,GACIv5C,EAASlD,KAAK0E,QAAQ+3C,6BAA8B,CAChDz8C,MAER,CACA08C,sBAAAA,GACI,MAAMh4C,EAAU1E,KAAK0E,QACf6yC,EAAW7yC,EAAQgN,MACnB+rC,EAAWxE,GAAcj5C,KAAK0R,MAAMpT,OAAQoG,EAAQgN,MAAMqmC,eAC1Dl/B,EAAc0+B,EAAS1+B,aAAe,EACtCC,EAAcy+B,EAASz+B,YAC7B,IACIV,EAAW6S,EAAWyyB,EADtBtD,EAAgBvhC,EAEpB,IAAK7Y,KAAK29C,eAAiBpG,EAAS9/B,SAAWoB,GAAeC,GAAe2kC,GAAY,IAAMz9C,KAAK2jC,eAEhG,YADA3jC,KAAKo6C,cAAgBvhC,GAGzB,MAAM+kC,EAAa59C,KAAK69C,iBAClBC,EAAgBF,EAAWG,OAAOrlC,MAClCslC,EAAiBJ,EAAWK,QAAQ5iC,OACpCmE,EAAWzV,GAAY/J,KAAK2R,MAAM+G,MAAQolC,EAAe,EAAG99C,KAAKwf,UACvEpH,EAAY1T,EAAQgT,OAAS1X,KAAKwf,SAAWi+B,EAAWj+B,GAAYi+B,EAAW,GAC3EK,EAAgB,EAAI1lC,IACpBA,EAAYoH,GAAYi+B,GAAY/4C,EAAQgT,OAAS,GAAM,IAC3DuT,EAAYjrB,KAAKirB,UAAYyuB,GAAkBh1C,EAAQqT,MAAQw/B,EAASngC,QAAUuiC,GAAej1C,EAAQiU,MAAO3Y,KAAK2R,MAAMjN,QAAQmP,MACnI6pC,EAAmB/tD,KAAKmZ,KAAKg1C,EAAgBA,EAAgBE,EAAiBA,GAC9E5D,EAAgB/xC,GAAU1Y,KAAKE,IAAIF,KAAKuuD,KAAKn0C,IAAa6zC,EAAWK,QAAQ5iC,OAAS,GAAKjD,GAAW,EAAI,IAAKzoB,KAAKuuD,KAAKn0C,GAAYkhB,EAAYyyB,GAAkB,EAAI,IAAM/tD,KAAKuuD,KAAKn0C,GAAYi0C,EAAiBN,GAAkB,EAAI,MAC1OtD,EAAgBzqD,KAAKC,IAAIipB,EAAalpB,KAAKE,IAAIipB,EAAashC,KAEhEp6C,KAAKo6C,cAAgBA,CACzB,CACAuC,2BAAAA,GACIz5C,EAASlD,KAAK0E,QAAQi4C,4BAA6B,CAC/C38C,MAER,CACA48C,aAAAA,GAAiB,CACjBC,SAAAA,GACI35C,EAASlD,KAAK0E,QAAQm4C,UAAW,CAC7B78C,MAER,CACA88C,GAAAA,GACI,MAAMvR,EAAU,CACZ7yB,MAAO,EACP2C,OAAQ,IAEN1J,MAAEA,EAAQjN,SAAWgN,MAAO6lC,EAAW5+B,MAAOwlC,EAAYpmC,KAAMqmC,IAAiBp+C,KACjFyX,EAAUzX,KAAK29C,aACfha,EAAe3jC,KAAK2jC,eAC1B,GAAIlsB,EAAS,CACT,MAAM4mC,EAAc1E,GAAewE,EAAWxsC,EAAMjN,QAAQmP,MAQ5D,GAPI8vB,GACA4H,EAAQ7yB,MAAQ1Y,KAAKwf,SACrB+rB,EAAQlwB,OAASq+B,GAAkB0E,GAAYC,IAE/C9S,EAAQlwB,OAASrb,KAAKirB,UACtBsgB,EAAQ7yB,MAAQghC,GAAkB0E,GAAYC,GAE9C9G,EAAS9/B,SAAWzX,KAAK0R,MAAMpT,OAAQ,CACvC,MAAM85C,MAAEA,EAAK5tC,KAAGA,EAAIuzC,OAAGA,EAAME,QAAGA,GAAaj+C,KAAK69C,iBAC5CS,EAAiC,EAAnB/G,EAASngC,QACvBmnC,EAAep2C,GAAUnI,KAAKo6C,eAC9BlrC,EAAMvf,KAAKuf,IAAIqvC,GACftwC,EAAMte,KAAKse,IAAIswC,GACrB,GAAI5a,EAAc,CACd,MAAM6a,EAAcjH,EAASx+B,OAAS,EAAI9K,EAAM8vC,EAAOrlC,MAAQxJ,EAAM+uC,EAAQ5iC,OAC7EkwB,EAAQlwB,OAAS1rB,KAAKE,IAAImQ,KAAKirB,UAAWsgB,EAAQlwB,OAASmjC,EAAcF,EAC7E,KAAO,CACH,MAAMG,EAAalH,EAASx+B,OAAS,EAAI7J,EAAM6uC,EAAOrlC,MAAQzK,EAAMgwC,EAAQ5iC,OAC5EkwB,EAAQ7yB,MAAQ/oB,KAAKE,IAAImQ,KAAKwf,SAAU+rB,EAAQ7yB,MAAQ+lC,EAAaH,EACzE,CACAt+C,KAAK0+C,kBAAkBtG,EAAO5tC,EAAMyD,EAAKiB,EAC7C,CACJ,CACAlP,KAAK2+C,iBACDhb,GACA3jC,KAAK0Y,MAAQ1Y,KAAKwhC,QAAU7vB,EAAM+G,MAAQ1Y,KAAK+5C,SAASviC,KAAOxX,KAAK+5C,SAASziC,MAC7EtX,KAAKqb,OAASkwB,EAAQlwB,SAEtBrb,KAAK0Y,MAAQ6yB,EAAQ7yB,MACrB1Y,KAAKqb,OAASrb,KAAKwhC,QAAU7vB,EAAM0J,OAASrb,KAAK+5C,SAAS1iC,IAAMrX,KAAK+5C,SAASxiC,OAEtF,CACAmnC,iBAAAA,CAAkBtG,EAAO5tC,EAAMyD,EAAKiB,GAChC,MAAQwC,OAAO5F,MAAEA,EAAKsL,QAAGA,GAAUw2B,SAAGA,GAAc5tC,KAAK0E,QACnDk6C,EAAmC,IAAvB5+C,KAAKo6C,cACjByE,EAAgC,QAAbjR,GAAoC,MAAd5tC,KAAK4M,KACpD,GAAI5M,KAAK2jC,eAAgB,CACrB,MAAMmb,EAAa9+C,KAAK0hC,gBAAgB,GAAK1hC,KAAKwX,KAC5CunC,EAAc/+C,KAAKsX,MAAQtX,KAAK0hC,gBAAgB1hC,KAAK0R,MAAMpT,OAAS,GAC1E,IAAI47C,EAAc,EACdC,EAAe,EACfyE,EACIC,GACA3E,EAAchrC,EAAMkpC,EAAM1/B,MAC1ByhC,EAAelsC,EAAMzD,EAAK6Q,SAE1B6+B,EAAcjsC,EAAMmqC,EAAM/8B,OAC1B8+B,EAAejrC,EAAM1E,EAAKkO,OAEb,UAAV5M,EACPquC,EAAe3vC,EAAKkO,MACH,QAAV5M,EACPouC,EAAc9B,EAAM1/B,MACH,UAAV5M,IACPouC,EAAc9B,EAAM1/B,MAAQ,EAC5ByhC,EAAe3vC,EAAKkO,MAAQ,GAEhC1Y,KAAKk6C,YAAcvqD,KAAKC,KAAKsqD,EAAc4E,EAAa1nC,GAAWpX,KAAK0Y,OAAS1Y,KAAK0Y,MAAQomC,GAAa,GAC3G9+C,KAAKm6C,aAAexqD,KAAKC,KAAKuqD,EAAe4E,EAAc3nC,GAAWpX,KAAK0Y,OAAS1Y,KAAK0Y,MAAQqmC,GAAc,EACnH,KAAO,CACH,IAAI/E,EAAaxvC,EAAK6Q,OAAS,EAC3B4+B,EAAgB7B,EAAM/8B,OAAS,EACrB,UAAVvP,GACAkuC,EAAa,EACbC,EAAgB7B,EAAM/8B,QACL,QAAVvP,IACPkuC,EAAaxvC,EAAK6Q,OAClB4+B,EAAgB,GAEpBj6C,KAAKg6C,WAAaA,EAAa5iC,EAC/BpX,KAAKi6C,cAAgBA,EAAgB7iC,CACzC,CACJ,CACHunC,cAAAA,GACW3+C,KAAK+5C,WACL/5C,KAAK+5C,SAASviC,KAAO7nB,KAAKC,IAAIoQ,KAAKk6C,YAAal6C,KAAK+5C,SAASviC,MAC9DxX,KAAK+5C,SAAS1iC,IAAM1nB,KAAKC,IAAIoQ,KAAKg6C,WAAYh6C,KAAK+5C,SAAS1iC,KAC5DrX,KAAK+5C,SAASziC,MAAQ3nB,KAAKC,IAAIoQ,KAAKm6C,aAAcn6C,KAAK+5C,SAASziC,OAChEtX,KAAK+5C,SAASxiC,OAAS5nB,KAAKC,IAAIoQ,KAAKi6C,cAAej6C,KAAK+5C,SAASxiC,QAE1E,CACAwlC,QAAAA,GACI75C,EAASlD,KAAK0E,QAAQq4C,SAAU,CAC5B/8C,MAER,CACH2jC,YAAAA,GACO,MAAM/2B,KAAEA,EAAIghC,SAAGA,GAAc5tC,KAAK0E,QAClC,MAAoB,QAAbkpC,GAAmC,WAAbA,GAAkC,MAAThhC,CAC1D,CACHoyC,UAAAA,GACO,OAAOh/C,KAAK0E,QAAQyrC,QACxB,CACHqM,qBAAAA,CAAsB9qC,GAGf,IAAIxf,EAAG2R,EACP,IAHA7D,KAAKs9C,8BACLt9C,KAAKu9C,mBAAmB7rC,GAEpBxf,EAAI,EAAG2R,EAAO6N,EAAMpT,OAAQpM,EAAI2R,EAAM3R,IAClC+P,EAAcyP,EAAMxf,GAAG2rC,SACvBnsB,EAAMzG,OAAO/Y,EAAG,GAChB2R,IACA3R,KAGR8N,KAAKw9C,4BACT,CACHK,cAAAA,GACO,IAAID,EAAa59C,KAAKw6C,YACtB,IAAKoD,EAAY,CACb,MAAMlC,EAAa17C,KAAK0E,QAAQgN,MAAMgqC,WACtC,IAAIhqC,EAAQ1R,KAAK0R,MACbgqC,EAAahqC,EAAMpT,SACnBoT,EAAQynC,GAAOznC,EAAOgqC,IAE1B17C,KAAKw6C,YAAcoD,EAAa59C,KAAKi/C,mBAAmBvtC,EAAOA,EAAMpT,OAAQ0B,KAAK0E,QAAQgN,MAAMqmC,cACpG,CACA,OAAO6F,CACX,CACHqB,kBAAAA,CAAmBvtC,EAAOpT,EAAQy5C,GAC3B,MAAM5jC,IAAEA,EAAMsmC,kBAAmByE,GAAYl/C,KACvCm/C,EAAS,GACTC,EAAU,GACV/F,EAAY1pD,KAAK8X,MAAMnJ,EAAS26C,GAAc36C,EAAQy5C,IAC5D,IAEI7lD,EAAGiM,EAAGoc,EAAMsjB,EAAOwhB,EAAUC,EAAYllC,EAAOpG,EAAY0E,EAAO2C,EAAQkkC,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAIvtD,EAAI,EAAGA,EAAIoM,EAAQpM,GAAKmnD,EAAU,CAUlC,GATAxb,EAAQnsB,EAAMxf,GAAG2rC,MACjBwhB,EAAWr/C,KAAK0/C,wBAAwBxtD,GACxCiiB,EAAIN,KAAOyrC,EAAaD,EAAStlC,OACjCK,EAAQ8kC,EAAOI,GAAcJ,EAAOI,IAAe,CAC/C1lC,KAAM,CAAA,EACNC,GAAI,IAER7F,EAAaqrC,EAASrrC,WACtB0E,EAAQ2C,EAAS,EACZpZ,EAAc47B,IAAWtrC,EAAQsrC,OAG3BtrC,EAAQsrC,GACf,IAAI1/B,EAAI,EAAGoc,EAAOsjB,EAAMv/B,OAAQH,EAAIoc,IAAQpc,EACxCohD,EAAe1hB,EAAM1/B,GAChB8D,EAAcs9C,IAAiBhtD,EAAQgtD,KACxC7mC,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAO6mC,GACvDlkC,GAAUrH,QAPlB0E,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAOmlB,GACvDxiB,EAASrH,EAUbmrC,EAAOv5C,KAAK8S,GACZ0mC,EAAQx5C,KAAKyV,GACbmkC,EAAkB7vD,KAAKC,IAAI8oB,EAAO8mC,GAClCC,EAAmB9vD,KAAKC,IAAIyrB,EAAQokC,EACxC,EA7iBP,SAAwBP,EAAQ5gD,GAC7BiF,EAAK27C,EAAS9kC,IACV,MAAMP,EAAKO,EAAMP,GACXc,EAAQd,EAAGvb,OAAS,EAC1B,IAAIpM,EACJ,GAAIyoB,EAAQrc,EAAQ,CAChB,IAAIpM,EAAI,EAAGA,EAAIyoB,IAASzoB,SACbkoB,EAAMR,KAAKC,EAAG3nB,IAEzB2nB,EAAG5O,OAAO,EAAG0P,EACjB,GAER,CAkiBQN,CAAe6kC,EAAQ5gD,GACvB,MAAMy/C,EAASoB,EAAO36C,QAAQg7C,GACxBvB,EAAUmB,EAAQ56C,QAAQi7C,GAC1BE,EAAWC,IAAG,CACZlnC,MAAOymC,EAAOS,IAAQ,EACtBvkC,OAAQ+jC,EAAQQ,IAAQ,IAEhC,MAAO,CACHxH,MAAOuH,EAAQ,GACfn1C,KAAMm1C,EAAQrhD,EAAS,GACvBy/C,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,SACAC,UAER,CACHthB,gBAAAA,CAAiB57B,GACV,OAAOA,CACX,CACH8K,gBAAAA,CAAiB9K,EAAO+B,GACjB,OAAO+4B,GACX,CACH8I,gBAAAA,CAAiBjrB,GAAQ,CACzB6mB,eAAAA,CAAgBz9B,GACT,MAAMyN,EAAQ1R,KAAK0R,MACnB,OAAIzN,EAAQ,GAAKA,EAAQyN,EAAMpT,OAAS,EAC7B,KAEJ0B,KAAKgN,iBAAiB0E,EAAMzN,GAAO/B,MAC9C,CACH0jC,kBAAAA,CAAmBia,GACR7/C,KAAKytC,iBACLoS,EAAU,EAAIA,GAElB,MAAMhlC,EAAQ7a,KAAKklC,YAAc2a,EAAU7/C,KAAKwhC,QAChD,OD1wHGz3B,GC0wHgB/J,KAAKk9C,eAAiBtiC,GAAY5a,KAAK2R,MAAOkJ,EAAO,GAAKA,GD1wHvD,MAAQ,MC2wHlC,CACHilC,kBAAAA,CAAmBjlC,GACZ,MAAMglC,GAAWhlC,EAAQ7a,KAAKklC,aAAellC,KAAKwhC,QAClD,OAAOxhC,KAAKytC,eAAiB,EAAIoS,EAAUA,CAC/C,CACHnc,YAAAA,GACO,YAAY12B,iBAAiBhN,KAAK+/C,eACtC,CACHA,YAAAA,GACO,MAAMlwD,IAAEA,EAAGD,IAAGA,GAASoQ,KACvB,OAAOnQ,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CACjE,CACHqrB,UAAAA,CAAWjX,GACJ,MAAMyN,EAAQ1R,KAAK0R,OAAS,GAC5B,GAAIzN,GAAS,GAAKA,EAAQyN,EAAMpT,OAAQ,CACpC,MAAM4zB,EAAOxgB,EAAMzN,GACnB,OAAOiuB,EAAKiH,WAAajH,EAAKiH,SAnkB1C,SAA2BnU,EAAQ/gB,EAAOiuB,GACtC,OAAO7Q,GAAc2D,EAAQ,CACzBkN,OACAjuB,QACApE,KAAM,QAEd,CA6jBqDmgD,CAAkBhgD,KAAKkb,aAAcjX,EAAOiuB,GACzF,CACA,YAAYiH,WAAan5B,KAAKm5B,SA1kB3B9X,GA0kByDrhB,KAAK2R,MAAMuJ,aA1kB9C,CACzBjG,MAykBqFjV,KAxkBrFH,KAAM,UAykBV,CACH43C,SAAAA,GACO,MAAMwI,EAAcjgD,KAAK0E,QAAQgN,MAC3BwuC,EAAM/3C,GAAUnI,KAAKo6C,eACrBlrC,EAAMvf,KAAKyX,IAAIzX,KAAKuf,IAAIgxC,IACxBjyC,EAAMte,KAAKyX,IAAIzX,KAAKse,IAAIiyC,IACxBtC,EAAa59C,KAAK69C,iBAClBzmC,EAAU6oC,EAAY9mC,iBAAmB,EACzCnnB,EAAI4rD,EAAaA,EAAWG,OAAOrlC,MAAQtB,EAAU,EACrD1nB,EAAIkuD,EAAaA,EAAWK,QAAQ5iC,OAASjE,EAAU,EAC7D,YAAYusB,eAAiBj0C,EAAIwf,EAAMld,EAAIic,EAAMjc,EAAIkd,EAAMxf,EAAIue,EAAMve,EAAIue,EAAMjc,EAAIkd,EAAMxf,EAAIwf,EAAMld,EAAIic,CAC3G,CACH0vC,UAAAA,GACO,MAAMlmC,EAAUzX,KAAK0E,QAAQ+S,QAC7B,MAAgB,SAAZA,IACSA,EAENzX,KAAKm3B,0BAA0B74B,OAAS,CACnD,CACH6hD,qBAAAA,CAAsB5vB,GACf,MAAM3jB,EAAO5M,KAAK4M,KACZ+E,EAAQ3R,KAAK2R,MACbjN,EAAU1E,KAAK0E,SACfqT,KAAEA,EAAI61B,SAAGA,EAAQr1B,OAAGA,GAAY7T,EAChCgT,EAASK,EAAKL,OACdisB,EAAe3jC,KAAK2jC,eAEpBuV,EADQl5C,KAAK0R,MACOpT,QAAUoZ,EAAS,EAAI,GAC3C0oC,EAAK1G,GAAkB3hC,GACvB3M,EAAQ,GACRi1C,EAAa9nC,EAAOoL,WAAW3jB,KAAKkb,cACpColC,EAAYD,EAAW5oC,QAAU4oC,EAAW3nC,MAAQ,EACpD6nC,EAAgBD,EAAY,EAC5BE,EAAmB,SAAS3lC,GAC9B,OAAOD,GAAYjJ,EAAOkJ,EAAOylC,EACrC,EACA,IAAIG,EAAavuD,EAAGunD,EAAWiH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbtT,EACA6S,EAAcD,EAAiBxgD,KAAKuX,QACpCqpC,EAAM5gD,KAAKuX,OAAS6oC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBjwB,EAAUlZ,KAAOkpC,EACvCW,EAAK3wB,EAAUhZ,YACZ,GAAiB,WAAbq2B,EACP6S,EAAcD,EAAiBxgD,KAAKqX,KACpC2pC,EAAKzwB,EAAUlZ,IACf6pC,EAAKV,EAAiBjwB,EAAUhZ,QAAUgpC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM9gD,KAAKqX,IAAM+oC,OACd,GAAiB,SAAbxS,EACP6S,EAAcD,EAAiBxgD,KAAKsX,OACpCqpC,EAAM3gD,KAAKsX,MAAQ8oC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBjwB,EAAU/Y,MAAQ+oC,EACxCU,EAAK1wB,EAAUjZ,WACZ,GAAiB,UAAbs2B,EACP6S,EAAcD,EAAiBxgD,KAAKwX,MACpCupC,EAAKxwB,EAAU/Y,KACfypC,EAAKT,EAAiBjwB,EAAUjZ,OAASipC,EACzCI,EAAMF,EAAcF,EACpBM,EAAM7gD,KAAKwX,KAAO4oC,UACF,MAATxzC,EAAc,CACrB,GAAiB,WAAbghC,EACA6S,EAAcD,GAAkBjwB,EAAUlZ,IAAMkZ,EAAUhZ,QAAU,EAAI,SACrE,GAAIhV,EAASqrC,GAAW,CAC3B,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvBV,EAAcD,EAAiBxgD,KAAK2R,MAAMuD,OAAOisC,GAAgBn0C,iBAAiB9K,GACtF,CACA8+C,EAAKzwB,EAAUlZ,IACf6pC,EAAK3wB,EAAUhZ,OACfqpC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,SAAoB,MAATxzC,EAAc,CACrB,GAAiB,WAAbghC,EACA6S,EAAcD,GAAkBjwB,EAAU/Y,KAAO+Y,EAAUjZ,OAAS,WAC7D/U,EAASqrC,GAAW,CAC3B,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvBV,EAAcD,EAAiBxgD,KAAK2R,MAAMuD,OAAOisC,GAAgBn0C,iBAAiB9K,GACtF,CACAy+C,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKxwB,EAAU/Y,KACfypC,EAAK1wB,EAAUjZ,KACnB,CACA,MAAM8pC,EAAQv+C,EAAe6B,EAAQgN,MAAMqmC,cAAemB,GACpDmI,EAAO1xD,KAAKC,IAAI,EAAGD,KAAK2oD,KAAKY,EAAckI,IACjD,IAAIlvD,EAAI,EAAGA,EAAIgnD,EAAahnD,GAAKmvD,EAAK,CAClC,MAAM7tC,EAAUxT,KAAKkb,WAAWhpB,GAC1BovD,EAAcvpC,EAAK4L,WAAWnQ,GAC9B+tC,EAAoBhpC,EAAOoL,WAAWnQ,GACtCwE,EAAYspC,EAAYtpC,UACxBwpC,EAAYF,EAAY9gD,MACxB0vB,EAAaqxB,EAAkB/oC,MAAQ,GACvC2X,EAAmBoxB,EAAkB9oC,WACrCL,EAAYkpC,EAAYlpC,UACxBE,EAAYgpC,EAAYhpC,UACxBmpC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,qBACzCjI,EAAYH,GAAoBt5C,KAAM9N,EAAGwlB,QACvBlmB,IAAdioD,IAGJiH,EAAmB9lC,GAAYjJ,EAAO8nC,EAAWzhC,GAC7C2rB,EACAgd,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1Bt1C,EAAMxF,KAAK,CACP+6C,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAxoC,MAAOV,EACPxX,MAAOghD,EACPtxB,aACAC,mBACA/X,YACAE,YACAmpC,iBACAC,yBAER,CAGA,OAFA1hD,KAAK86C,aAAe5B,EACpBl5C,KAAK+6C,aAAe0F,EACbr1C,CACX,CACHowC,kBAAAA,CAAmBjrB,GACZ,MAAM3jB,EAAO5M,KAAK4M,KACZlI,EAAU1E,KAAK0E,SACfkpC,SAAEA,EAAWl8B,MAAOuuC,GAAiBv7C,EACrCi/B,EAAe3jC,KAAK2jC,eACpBjyB,EAAQ1R,KAAK0R,OACb5F,MAAEA,EAAKyN,WAAGA,EAAUnC,QAAGA,EAAO2B,OAAGA,GAAYknC,EAC7CG,EAAK1G,GAAkBh1C,EAAQqT,MAC/B4pC,EAAiBvB,EAAKhpC,EACtBwqC,EAAkB7oC,GAAU3B,EAAUuqC,EACtC7lC,GAAY3T,GAAUnI,KAAKo6C,eAC3BhvC,EAAQ,GACd,IAAIlZ,EAAG2R,EAAMquB,EAAM2L,EAAO1qC,EAAGmS,EAAG6Z,EAAWtE,EAAOhH,EAAMG,EAAY6tC,EAAWC,EAC3E1iC,EAAe,SACnB,GAAiB,QAAbwuB,EACAtoC,EAAItF,KAAKuX,OAASqqC,EAClBziC,EAAYnf,KAAK+hD,+BACd,GAAiB,WAAbnU,EACPtoC,EAAItF,KAAKqX,IAAMuqC,EACfziC,EAAYnf,KAAK+hD,+BACd,GAAiB,SAAbnU,EAAqB,CAC5B,MAAM9tC,EAAME,KAAKgiD,wBAAwB5B,GACzCjhC,EAAYrf,EAAIqf,UAChBhsB,EAAI2M,EAAI3M,CACZ,MAAO,GAAiB,UAAby6C,EAAsB,CAC7B,MAAM9tC,EAAME,KAAKgiD,wBAAwB5B,GACzCjhC,EAAYrf,EAAIqf,UAChBhsB,EAAI2M,EAAI3M,CACZ,MAAO,GAAa,MAATyZ,EAAc,CACrB,GAAiB,WAAbghC,EACAtoC,GAAKirB,EAAUlZ,IAAMkZ,EAAUhZ,QAAU,EAAIoqC,OAC1C,GAAIp/C,EAASqrC,GAAW,CAC3B,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvB77C,EAAItF,KAAK2R,MAAMuD,OAAOisC,GAAgBn0C,iBAAiB9K,GAASy/C,CACpE,CACAxiC,EAAYnf,KAAK+hD,yBACrB,MAAO,GAAa,MAATn1C,EAAc,CACrB,GAAiB,WAAbghC,EACAz6C,GAAKo9B,EAAU/Y,KAAO+Y,EAAUjZ,OAAS,EAAIqqC,OAC1C,GAAIp/C,EAASqrC,GAAW,CAC3B,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvBhuD,EAAI6M,KAAK2R,MAAMuD,OAAOisC,GAAgBn0C,iBAAiB9K,EAC3D,CACAid,EAAYnf,KAAKgiD,wBAAwB5B,GAAIjhC,SACjD,CACa,MAATvS,IACc,UAAVd,EACAsT,EAAe,MACE,QAAVtT,IACPsT,EAAe,WAGvB,MAAMw+B,EAAa59C,KAAK69C,iBACxB,IAAI3rD,EAAI,EAAG2R,EAAO6N,EAAMpT,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC1CggC,EAAOxgB,EAAMxf,GACb2rC,EAAQ3L,EAAK2L,MACb,MAAMyjB,EAAcrB,EAAYt8B,WAAW3jB,KAAKkb,WAAWhpB,IAC3D2oB,EAAQ7a,KAAK0hC,gBAAgBxvC,GAAK+tD,EAAY7mC,YAC9CvF,EAAO7T,KAAK0/C,wBAAwBxtD,GACpC8hB,EAAaH,EAAKG,WAClB6tC,EAAYtvD,EAAQsrC,GAASA,EAAMv/B,OAAS,EAC5C,MAAM2jD,EAAYJ,EAAY,EACxBrhD,EAAQ8gD,EAAY9gD,MACpBye,EAAcqiC,EAAYroC,gBAC1B+F,EAAcsiC,EAAYtoC,gBAChC,IAuCIsG,EAvCA4iC,EAAgB/iC,EAwCpB,GAvCIwkB,GACAxwC,EAAI0nB,EACc,UAAdsE,IAEI+iC,EADAhwD,IAAM2R,EAAO,EACI7D,KAAK0E,QAAQjB,QAAoB,OAAV,QAC3B,IAANvR,EACU8N,KAAK0E,QAAQjB,QAAmB,QAAT,OAExB,UAKhBq+C,EAFS,QAAblU,EACmB,SAAfr0B,GAAsC,IAAbuC,GACX+lC,EAAY7tC,EAAaA,EAAa,EAC9B,WAAfuF,GACOqkC,EAAWK,QAAQ5iC,OAAS,EAAI4mC,EAAYjuC,EAAaA,GAEzD4pC,EAAWK,QAAQ5iC,OAASrH,EAAa,EAGxC,SAAfuF,GAAsC,IAAbuC,EACZ9H,EAAa,EACJ,WAAfuF,EACMqkC,EAAWK,QAAQ5iC,OAAS,EAAI4mC,EAAYjuC,EAE5C4pC,EAAWK,QAAQ5iC,OAASwmC,EAAY7tC,EAGzD+E,IACA+oC,IAAc,GAED,IAAbhmC,GAAmBwlC,EAAY9nC,oBAC/BrmB,GAAK6gB,EAAa,EAAIrkB,KAAKse,IAAI6N,MAGnCxW,EAAIuV,EACJinC,GAAc,EAAID,GAAa7tC,EAAa,GAG5CstC,EAAY9nC,kBAAmB,CAC/B,MAAM2oC,EAAevhC,GAAU0gC,EAAY5nC,iBACrC2B,EAASuiC,EAAWwB,QAAQltD,GAC5BwmB,EAAQklC,EAAWuB,OAAOjtD,GAChC,IAAImlB,EAAMyqC,EAAaK,EAAa9qC,IAChCG,EAAO,EAAI2qC,EAAa3qC,KAC5B,OAAO4H,GACH,IAAK,SACD/H,GAAOgE,EAAS,EAChB,MACJ,IAAK,SACDhE,GAAOgE,EAGf,OAAO8D,GACH,IAAK,SACD3H,GAAQkB,EAAQ,EAChB,MACJ,IAAK,QACDlB,GAAQkB,EACR,MACJ,IAAK,QACGxmB,IAAM2R,EAAO,EACb2T,GAAQkB,EACDxmB,EAAI,IACXslB,GAAQkB,EAAQ,GAI5B4G,EAAW,CACP9H,OACAH,MACAqB,MAAOA,EAAQypC,EAAazpC,MAC5B2C,OAAQA,EAAS8mC,EAAa9mC,OAC9B7a,MAAO8gD,EAAY7nC,cAE3B,CACArO,EAAMxF,KAAK,CACPi4B,QACAhqB,OACAiuC,aACAp9C,QAAS,CACLoX,WACAtb,QACAye,cACAD,cACAG,UAAW+iC,EACX9iC,eACAF,YAAa,CACT/rB,EACAmS,GAEJga,aAGZ,CACA,OAAOlU,CACX,CACA22C,uBAAAA,GACI,MAAMnU,SAAEA,EAAQl8B,MAAGA,GAAW1R,KAAK0E,QAEnC,IADkByD,GAAUnI,KAAKo6C,eAE7B,MAAoB,QAAbxM,EAAqB,OAAS,QAEzC,IAAI9hC,EAAQ,SAQZ,MAPoB,UAAhB4F,EAAM5F,MACNA,EAAQ,OACe,QAAhB4F,EAAM5F,MACbA,EAAQ,QACe,UAAhB4F,EAAM5F,QACbA,EAAQ,SAELA,CACX,CACAk2C,uBAAAA,CAAwB5B,GACpB,MAAMxS,SAAEA,EAAWl8B,OAAO6H,WAAEA,EAAUR,OAAGA,EAAM3B,QAAGA,IAAgBpX,KAAK0E,QAEjEi9C,EAAiBvB,EAAKhpC,EACtB2mC,EAFa/9C,KAAK69C,iBAEEE,OAAOrlC,MACjC,IAAIyG,EACAhsB,EAoDJ,MAnDiB,SAAby6C,EACI70B,GACA5lB,EAAI6M,KAAKsX,MAAQF,EACE,SAAfmC,EACA4F,EAAY,OACU,WAAf5F,GACP4F,EAAY,SACZhsB,GAAK4qD,EAAS,IAEd5+B,EAAY,QACZhsB,GAAK4qD,KAGT5qD,EAAI6M,KAAKsX,MAAQqqC,EACE,SAAfpoC,EACA4F,EAAY,QACU,WAAf5F,GACP4F,EAAY,SACZhsB,GAAK4qD,EAAS,IAEd5+B,EAAY,OACZhsB,EAAI6M,KAAKwX,OAGG,UAAbo2B,EACH70B,GACA5lB,EAAI6M,KAAKwX,KAAOJ,EACG,SAAfmC,EACA4F,EAAY,QACU,WAAf5F,GACP4F,EAAY,SACZhsB,GAAK4qD,EAAS,IAEd5+B,EAAY,OACZhsB,GAAK4qD,KAGT5qD,EAAI6M,KAAKwX,KAAOmqC,EACG,SAAfpoC,EACA4F,EAAY,OACU,WAAf5F,GACP4F,EAAY,SACZhsB,GAAK4qD,EAAS,IAEd5+B,EAAY,QACZhsB,EAAI6M,KAAKsX,QAIjB6H,EAAY,QAET,CACHA,YACAhsB,IAER,CACHivD,iBAAAA,GACO,GAAIpiD,KAAK0E,QAAQgN,MAAMqH,OACnB,OAEJ,MAAMpH,EAAQ3R,KAAK2R,MACbi8B,EAAW5tC,KAAK0E,QAAQkpC,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHv2B,IAAK,EACLG,KAAMxX,KAAKwX,KACXD,OAAQ5F,EAAM0J,OACd/D,MAAOtX,KAAKsX,OAGH,QAAbs2B,GAAmC,WAAbA,EACf,CACHv2B,IAAKrX,KAAKqX,IACVG,KAAM,EACND,OAAQvX,KAAKuX,OACbD,MAAO3F,EAAM+G,YALrB,CAQJ,CACH2pC,cAAAA,GACO,MAAMluC,IAAEA,EAAMzP,SAAS0O,gBAAEA,GAAkBoE,KAAGA,EAAIH,IAAGA,EAAGqB,MAAGA,EAAK2C,OAAGA,GAAYrb,KAC3EoT,IACAe,EAAImG,OACJnG,EAAIsK,UAAYrL,EAChBe,EAAI0K,SAASrH,EAAMH,EAAKqB,EAAO2C,GAC/BlH,EAAIuG,UAEZ,CACAsrB,oBAAAA,CAAqB9jC,GACjB,MAAM6V,EAAO/X,KAAK0E,QAAQqT,KAC1B,IAAK/X,KAAK29C,eAAiB5lC,EAAKN,QAC5B,OAAO,EAEX,MACMxT,EADQjE,KAAK0R,MACCxE,UAAWlM,GAAIA,EAAEkB,QAAUA,GAC/C,OAAI+B,GAAS,EACI8T,EAAK4L,WAAW3jB,KAAKkb,WAAWjX,IACjC+T,UAET,CACX,CACHsqC,QAAAA,CAAS/xB,GACF,MAAMxY,EAAO/X,KAAK0E,QAAQqT,KACpB5D,EAAMnU,KAAKmU,IACX/I,EAAQpL,KAAKs6C,iBAAmBt6C,KAAKs6C,eAAiBt6C,KAAKmgD,sBAAsB5vB,IACvF,IAAIr+B,EAAG2R,EACP,MAAM0+C,EAAWA,CAACxvD,EAAIC,EAAI+gB,KACjBA,EAAM2E,OAAU3E,EAAMvT,QAG3B2T,EAAImG,OACJnG,EAAI6D,UAAYjE,EAAM2E,MACtBvE,EAAIqK,YAAczK,EAAMvT,MACxB2T,EAAIquC,YAAYzuC,EAAMmc,YAAc,IACpC/b,EAAIsuC,eAAiB1uC,EAAMoc,iBAC3Bhc,EAAIgI,YACJhI,EAAIoI,OAAOxpB,EAAGI,EAAGJ,EAAGuS,GACpB6O,EAAIqI,OAAOxpB,EAAGG,EAAGH,EAAGsS,GACpB6O,EAAI0I,SACJ1I,EAAIuG,YAER,GAAI3C,EAAKN,QACL,IAAIvlB,EAAI,EAAG2R,EAAOuH,EAAM9M,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC1C,MAAMmU,EAAO+E,EAAMlZ,GACf6lB,EAAKE,iBACLsqC,EAAS,CACLpvD,EAAGkT,EAAK06C,GACRz7C,EAAGe,EAAK26C,IACT,CACC7tD,EAAGkT,EAAK46C,GACR37C,EAAGe,EAAK66C,IACT76C,GAEH0R,EAAKG,WACLqqC,EAAS,CACLpvD,EAAGkT,EAAKs6C,IACRr7C,EAAGe,EAAKu6C,KACT,CACCztD,EAAGkT,EAAKw6C,IACRv7C,EAAGe,EAAKy6C,KACT,CACCtgD,MAAO6F,EAAKiS,UACZI,MAAOrS,EAAK+R,UACZ8X,WAAY7pB,EAAKo7C,eACjBtxB,iBAAkB9pB,EAAKq7C,sBAGnC,CAER,CACHgB,UAAAA,GACO,MAAM/wC,MAAEA,EAAKwC,IAAGA,EAAMzP,SAAS6T,OAAEA,EAAMR,KAAGA,IAAa/X,KACjDqgD,EAAa9nC,EAAOoL,WAAW3jB,KAAKkb,cACpColC,EAAY/nC,EAAOd,QAAU4oC,EAAW3nC,MAAQ,EACtD,IAAK4nC,EACD,OAEJ,MAAMqC,EAAgB5qC,EAAK4L,WAAW3jB,KAAKkb,WAAW,IAAIlD,UACpDyoC,EAAczgD,KAAK+6C,aACzB,IAAIgG,EAAIE,EAAID,EAAIE,EACZlhD,KAAK2jC,gBACLod,EAAKnmC,GAAYjJ,EAAO3R,KAAKwX,KAAM8oC,GAAaA,EAAY,EAC5DW,EAAKrmC,GAAYjJ,EAAO3R,KAAKsX,MAAOqrC,GAAiBA,EAAgB,EACrE3B,EAAKE,EAAKT,IAEVO,EAAKpmC,GAAYjJ,EAAO3R,KAAKqX,IAAKipC,GAAaA,EAAY,EAC3DY,EAAKtmC,GAAYjJ,EAAO3R,KAAKuX,OAAQorC,GAAiBA,EAAgB,EACtE5B,EAAKE,EAAKR,GAEdtsC,EAAImG,OACJnG,EAAI6D,UAAYqoC,EAAW3nC,MAC3BvE,EAAIqK,YAAc6hC,EAAW7/C,MAC7B2T,EAAIgI,YACJhI,EAAIoI,OAAOwkC,EAAIC,GACf7sC,EAAIqI,OAAOykC,EAAIC,GACf/sC,EAAI0I,SACJ1I,EAAIuG,SACR,CACHkoC,UAAAA,CAAWryB,GAEJ,IADoBvwB,KAAK0E,QAAQgN,MAChB+F,QACb,OAEJ,MAAMtD,EAAMnU,KAAKmU,IACX4I,EAAO/c,KAAKoiD,oBACdrlC,GACAE,GAAS9I,EAAK4I,GAElB,MAAM3R,EAAQpL,KAAKu7C,cAAchrB,GACjC,IAAK,MAAMlqB,KAAQ+E,EAAM,CACrB,MAAMy3C,EAAoBx8C,EAAK3B,QACzB26C,EAAWh5C,EAAKwN,KAGtBiL,GAAW3K,EAFG9N,EAAKw3B,MAEI,EADbx3B,EAAKy7C,WACczC,EAAUwD,EAC3C,CACI9lC,GACAG,GAAW/I,EAEnB,CACH2uC,SAAAA,GACO,MAAM3uC,IAAEA,EAAMzP,SAASkpC,SAAEA,EAAQj1B,MAAGA,EAAKlV,QAAGA,IAAgBzD,KAC5D,IAAK2Y,EAAMlB,QACP,OAEJ,MAAM5D,EAAOgN,GAAOlI,EAAM9E,MACpBuD,EAAUwJ,GAAUjI,EAAMvB,SAC1BtL,EAAQ6M,EAAM7M,MACpB,IAAI4L,EAAS7D,EAAKG,WAAa,EACd,WAAb45B,GAAsC,WAAbA,GAAyBrrC,EAASqrC,IAC3Dl2B,GAAUN,EAAQG,OACdhlB,EAAQomB,EAAMC,QACdlB,GAAU7D,EAAKG,YAAc2E,EAAMC,KAAKta,OAAS,KAGrDoZ,GAAUN,EAAQC,IAEtB,MAAM0rC,OAAEA,EAAMC,OAAGA,EAAMxjC,SAAGA,EAAQ1D,SAAGA,GAnlC7C,SAAmB7G,EAAOyC,EAAQk2B,EAAU9hC,GACxC,MAAMuL,IAAEA,EAAGG,KAAGA,EAAID,OAAGA,EAAMD,MAAGA,EAAK3F,MAAGA,GAAWsD,GAC3Csb,UAAEA,EAASrb,OAAGA,GAAYvD,EAChC,IACI6N,EAAUujC,EAAQC,EADlBlnC,EAAW,EAEf,MAAMT,EAAS9D,EAASF,EAClBqB,EAAQpB,EAAQE,EACtB,GAAIvC,EAAM0uB,eAAgB,CAEtB,GADAof,EAASh3C,GAAeD,EAAO0L,EAAMF,GACjC/U,EAASqrC,GAAW,CACpB,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvB6B,EAAS9tC,EAAOisC,GAAgBn0C,iBAAiB9K,GAASmZ,EAAS3D,CACvE,MACIsrC,EADoB,WAAbpV,GACGrd,EAAUhZ,OAASgZ,EAAUlZ,KAAO,EAAIgE,EAAS3D,EAElDshC,GAAe/jC,EAAO24B,EAAUl2B,GAE7C8H,EAAWlI,EAAQE,CACvB,KAAO,CACH,GAAIjV,EAASqrC,GAAW,CACpB,MAAMuT,EAAiBljD,OAAOD,KAAK4vC,GAAU,GACvC1rC,EAAQ0rC,EAASuT,GACvB4B,EAAS7tC,EAAOisC,GAAgBn0C,iBAAiB9K,GAASwW,EAAQhB,CACtE,MACIqrC,EADoB,WAAbnV,GACGrd,EAAU/Y,KAAO+Y,EAAUjZ,OAAS,EAAIoB,EAAQhB,EAEjDshC,GAAe/jC,EAAO24B,EAAUl2B,GAE7CsrC,EAASj3C,GAAeD,EAAOyL,EAAQF,GACvCyE,EAAwB,SAAb8xB,GAAuB/mC,GAAUA,EAChD,CACA,MAAO,CACHk8C,SACAC,SACAxjC,WACA1D,WAER,CA6iC2DmnC,CAAUjjD,KAAM0X,EAAQk2B,EAAU9hC,GACrFgT,GAAW3K,EAAKwE,EAAMC,KAAM,EAAG,EAAG/E,EAAM,CACpCrT,MAAOmY,EAAMnY,MACbgf,WACA1D,WACAqD,UAAWy6B,GAAW9tC,EAAO8hC,EAAUnqC,GACvC2b,aAAc,SACdF,YAAa,CACT6jC,EACAC,IAGZ,CACAjxB,IAAAA,CAAKxB,GACIvwB,KAAK29C,eAGV39C,KAAKqiD,iBACLriD,KAAKsiD,SAAS/xB,GACdvwB,KAAK0iD,aACL1iD,KAAK8iD,YACL9iD,KAAK4iD,WAAWryB,GACpB,CACHuhB,OAAAA,GACO,MAAM/zB,EAAO/d,KAAK0E,QACZw+C,EAAKnlC,EAAKrM,OAASqM,EAAKrM,MAAMqgC,GAAK,EACnCoR,EAAKtgD,EAAekb,EAAKhG,MAAQgG,EAAKhG,KAAKg6B,MAC3CqR,EAAKvgD,EAAekb,EAAKxF,QAAUwF,EAAKxF,OAAOw5B,EAAG,GACxD,OAAK/xC,KAAK29C,cAAgB39C,KAAK+xB,OAAS+nB,GAAM33C,UAAU4vB,KAUjD,CACH,CACIggB,EAAGoR,EACHpxB,KAAOxB,IACHvwB,KAAKqiD,iBACLriD,KAAKsiD,SAAS/xB,GACdvwB,KAAK8iD,cAGb,CACI/Q,EAAGqR,EACHrxB,KAAMA,KACF/xB,KAAK0iD,eAGb,CACI3Q,EAAGmR,EACHnxB,KAAOxB,IACHvwB,KAAK4iD,WAAWryB,MA3BjB,CACH,CACIwhB,EAAGmR,EACHnxB,KAAOxB,IACHvwB,KAAK+xB,KAAKxB,KA2B9B,CACH4G,uBAAAA,CAAwBt3B,GACjB,MAAMs7C,EAAQn7C,KAAK2R,MAAMm8B,+BACnBrH,EAASzmC,KAAK4M,KAAO,SACrB6c,EAAS,GACf,IAAIv3B,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAOs3C,EAAM78C,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC1C,MAAM+Z,EAAOkvC,EAAMjpD,GACf+Z,EAAKw6B,KAAYzmC,KAAKgC,IAAQnC,GAAQoM,EAAKpM,OAASA,GACpD4pB,EAAO7jB,KAAKqG,EAEpB,CACA,OAAOwd,CACX,CACHi2B,uBAAAA,CAAwBz7C,GAEjB,OAAO4c,GADM7gB,KAAK0E,QAAQgN,MAAMiS,WAAW3jB,KAAKkb,WAAWjX,IACxC4P,KACvB,CACHwvC,UAAAA,GACO,MAAMC,EAAWtjD,KAAK0/C,wBAAwB,GAAG1rC,WACjD,OAAQhU,KAAK2jC,eAAiB3jC,KAAK0Y,MAAQ1Y,KAAKqb,QAAUioC,CAC9D,EACJ7wC,EAAA,QAAAqnC,IAEA,MAAMyJ,GACF3jD,WAAAA,CAAYC,EAAMkT,EAAOuC,GACrBtV,KAAKH,KAAOA,EACZG,KAAK+S,MAAQA,EACb/S,KAAKsV,SAAWA,EAChBtV,KAAKoL,MAAQnN,OAAOmG,OAAO,KAC/B,CACAo/C,SAAAA,CAAU3jD,GACN,OAAO5B,OAAOkE,UAAUshD,cAAcphD,KAAKrC,KAAKH,KAAKsC,UAAWtC,EAAKsC,UACzE,CACHuhD,QAAAA,CAASr9C,GACF,MAAMjH,EAAQnB,OAAO8kB,eAAe1c,GACpC,IAAIs9C,GAiEZ,SAA2BvkD,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEYwkD,CAAkBxkD,KAClBukD,EAAc3jD,KAAK0jD,SAAStkD,IAEhC,MAAMgM,EAAQpL,KAAKoL,MACbpJ,EAAKqE,EAAKrE,GACV+Q,EAAQ/S,KAAK+S,MAAQ,IAAM/Q,EACjC,IAAKA,EACD,MAAM,IAAI+hB,MAAM,2BAA6B1d,GAEjD,OAAIrE,KAAMoJ,IAGVA,EAAMpJ,GAAMqE,EAyBpB,SAA0BA,EAAM0M,EAAO4wC,GACnC,MAAME,EAAeh/C,EAAM5G,OAAOmG,OAAO,MAAO,CAC5Cu/C,EAAcxtC,GAASlF,IAAI0yC,GAAe,CAAA,EAC1CxtC,GAASlF,IAAI8B,GACb1M,EAAK8P,WAETA,GAAS9K,IAAI0H,EAAO8wC,GAChBx9C,EAAKy9C,eAOb,SAAuB/wC,EAAOgxC,GAC1B9lD,OAAOD,KAAK+lD,GAAQ74C,QAAShD,IACzB,MAAM87C,EAAgB97C,EAASxC,MAAM,KAC/Bu+C,EAAaD,EAAc7xB,MAC3B+xB,EAAc,CAChBnxC,GACFquB,OAAO4iB,GAAehgC,KAAK,KACvBve,EAAQs+C,EAAO77C,GAAUxC,MAAM,KAC/BgQ,EAAajQ,EAAM0sB,MACnB1c,EAAchQ,EAAMue,KAAK,KAC/B7N,GAASZ,MAAM2uC,EAAaD,EAAYxuC,EAAaC,IAE7D,CAlBQyuC,CAAcpxC,EAAO1M,EAAKy9C,eAE1Bz9C,EAAKsM,aACLwD,GAASd,SAAStC,EAAO1M,EAAKsM,YAEtC,CArCQyxC,CAAiB/9C,EAAM0M,EAAO4wC,GAC1B3jD,KAAKsV,UACLa,GAASb,SAASjP,EAAKrE,GAAIqE,EAAKqM,YALzBK,CAQf,CACH9B,GAAAA,CAAIjP,GACG,OAAOhC,KAAKoL,MAAMpJ,EACtB,CACHqiD,UAAAA,CAAWh+C,GACJ,MAAM+E,EAAQpL,KAAKoL,MACbpJ,EAAKqE,EAAKrE,GACV+Q,EAAQ/S,KAAK+S,MACf/Q,KAAMoJ,UACCA,EAAMpJ,GAEb+Q,GAAS/Q,KAAMmU,GAASpD,YACjBoD,GAASpD,GAAO/Q,GACnBhC,KAAKsV,iBACE5C,GAAU1Q,GAG7B,EAiCJ,MAAMsiD,GACF1kD,WAAAA,GACII,KAAK0sC,YAAc,IAAI6W,GAAchrB,GAAmB,YAAY,GACpEv4B,KAAK2T,SAAW,IAAI4vC,GAAcpM,GAAS,YAC3Cn3C,KAAK+U,QAAU,IAAIwuC,GAActlD,OAAQ,WACzC+B,KAAKkV,OAAS,IAAIquC,GAAczJ,GAAO,UACvC95C,KAAKukD,iBAAmB,CACpBvkD,KAAK0sC,YACL1sC,KAAKkV,OACLlV,KAAK2T,SAEb,CACHsQ,GAAAA,IAAO7gB,GACApD,KAAKwkD,MAAM,WAAYphD,EAC3B,CACA4vB,MAAAA,IAAU5vB,GACNpD,KAAKwkD,MAAM,aAAcphD,EAC7B,CACHqhD,cAAAA,IAAkBrhD,GACXpD,KAAKwkD,MAAM,WAAYphD,EAAMpD,KAAK0sC,YACtC,CACHhT,WAAAA,IAAet2B,GACRpD,KAAKwkD,MAAM,WAAYphD,EAAMpD,KAAK2T,SACtC,CACH+wC,UAAAA,IAActhD,GACPpD,KAAKwkD,MAAM,WAAYphD,EAAMpD,KAAK+U,QACtC,CACH4vC,SAAAA,IAAavhD,GACNpD,KAAKwkD,MAAM,WAAYphD,EAAMpD,KAAKkV,OACtC,CACH0vC,aAAAA,CAAc5iD,GACP,OAAOhC,KAAK6kD,KAAK7iD,EAAIhC,KAAK0sC,YAAa,aAC3C,CACHD,UAAAA,CAAWzqC,GACJ,OAAOhC,KAAK6kD,KAAK7iD,EAAIhC,KAAK2T,SAAU,UACxC,CACHmxC,SAAAA,CAAU9iD,GACH,OAAOhC,KAAK6kD,KAAK7iD,EAAIhC,KAAK+U,QAAS,SACvC,CACHgwC,QAAAA,CAAS/iD,GACF,OAAOhC,KAAK6kD,KAAK7iD,EAAIhC,KAAKkV,OAAQ,QACtC,CACH8vC,iBAAAA,IAAqB5hD,GACdpD,KAAKwkD,MAAM,aAAcphD,EAAMpD,KAAK0sC,YACxC,CACHuY,cAAAA,IAAkB7hD,GACXpD,KAAKwkD,MAAM,aAAcphD,EAAMpD,KAAK2T,SACxC,CACHuxC,aAAAA,IAAiB9hD,GACVpD,KAAKwkD,MAAM,aAAcphD,EAAMpD,KAAK+U,QACxC,CACHowC,YAAAA,IAAgB/hD,GACTpD,KAAKwkD,MAAM,aAAcphD,EAAMpD,KAAKkV,OACxC,CACHsvC,KAAAA,CAAM7vB,EAAQvxB,EAAMgiD,GACb,IACOhiD,GACL8H,QAASm6C,IACP,MAAMC,EAAMF,GAAiBplD,KAAKulD,oBAAoBF,GAClDD,GAAiBE,EAAI9B,UAAU6B,IAAQC,IAAQtlD,KAAK+U,SAAWswC,EAAIrjD,GACnEhC,KAAKwlD,MAAM7wB,EAAQ2wB,EAAKD,GAExB9hD,EAAK8hD,EAAMh/C,IACP,MAAMo/C,EAAUL,GAAiBplD,KAAKulD,oBAAoBl/C,GAC1DrG,KAAKwlD,MAAM7wB,EAAQ8wB,EAASp/C,MAI5C,CACHm/C,KAAAA,CAAM7wB,EAAQ6X,EAAUkZ,GACjB,MAAMC,EAAc5/C,GAAY4uB,GAChCzxB,EAASwiD,EAAU,SAAWC,GAAc,GAAID,GAChDlZ,EAAS7X,GAAQ+wB,GACjBxiD,EAASwiD,EAAU,QAAUC,GAAc,GAAID,EACnD,CACHH,mBAAAA,CAAoB1lD,GACb,IAAI,IAAI3N,EAAI,EAAGA,EAAI8N,KAAKukD,iBAAiBjmD,OAAQpM,IAAI,CACjD,MAAMozD,EAAMtlD,KAAKukD,iBAAiBryD,GAClC,GAAIozD,EAAI9B,UAAU3jD,GACd,OAAOylD,CAEf,CACA,OAAOtlD,KAAK+U,OAChB,CACH8vC,IAAAA,CAAK7iD,EAAIojD,EAAevlD,GACjB,MAAMwG,EAAO++C,EAAcn0C,IAAIjP,GAC/B,QAAaxQ,IAAT6U,EACA,MAAM,IAAI0d,MAAM,IAAM/hB,EAAK,yBAA2BnC,EAAO,KAEjE,OAAOwG,CACX,EAED,IAACmmC,GAAQ/5B,EAAA,WAAmB,IAAI6xC,IAEnC,MAAMsB,GACFhmD,WAAAA,GACII,KAAK6lD,MAAQ,EACjB,CACHC,MAAAA,CAAOn0C,EAAOo0C,EAAM3iD,EAAMkhB,GACN,eAATyhC,IACA/lD,KAAK6lD,MAAQ7lD,KAAKgmD,mBAAmBr0C,GAAO,GAC5C3R,KAAKkxB,QAAQlxB,KAAK6lD,MAAOl0C,EAAO,YAEpC,MAAMgB,EAAc2R,EAAStkB,KAAKiT,aAAatB,GAAO2S,OAAOA,GAAUtkB,KAAKiT,aAAatB,GACnF8X,EAASzpB,KAAKkxB,QAAQve,EAAahB,EAAOo0C,EAAM3iD,GAKtD,MAJa,iBAAT2iD,IACA/lD,KAAKkxB,QAAQve,EAAahB,EAAO,QACjC3R,KAAKkxB,QAAQlxB,KAAK6lD,MAAOl0C,EAAO,cAE7B8X,CACX,CACHyH,OAAAA,CAAQve,EAAahB,EAAOo0C,EAAM3iD,GAC3BA,EAAOA,GAAQ,CAAA,EACf,IAAK,MAAM6iD,KAActzC,EAAY,CACjC,MAAMuzC,EAASD,EAAWC,OAO1B,IAAyC,IAArChjD,EANWgjD,EAAOH,GACP,CACXp0C,EACAvO,EACA6iD,EAAWvhD,SAEcwhD,IAAqB9iD,EAAK+iD,WACnD,OAAO,CAEf,CACA,OAAO,CACX,CACAC,UAAAA,GACSnkD,EAAcjC,KAAKihC,UACpBjhC,KAAKqmD,UAAYrmD,KAAKihC,OACtBjhC,KAAKihC,YAASzvC,EAEtB,CACHyhB,YAAAA,CAAatB,GACN,GAAI3R,KAAKihC,OACL,YAAYA,OAEhB,MAAMtuB,EAAc3S,KAAKihC,OAASjhC,KAAKgmD,mBAAmBr0C,GAE1D,OADA3R,KAAKsmD,oBAAoB30C,GAClBgB,CACX,CACAqzC,kBAAAA,CAAmBr0C,EAAOgkB,GACtB,MAAMd,EAASljB,GAASA,EAAMkjB,OACxBnwB,EAAU7B,EAAegyB,EAAOnwB,SAAWmwB,EAAOnwB,QAAQqQ,QAAS,IACnEA,EAWb,SAAoB8f,GACjB,MAAM0xB,EAAW,CAAA,EACXxxC,EAAU,GACV/W,EAAOC,OAAOD,KAAKwuC,GAASz3B,QAAQ3J,OAC1C,IAAI,IAAIlZ,EAAI,EAAGA,EAAI8L,EAAKM,OAAQpM,IAC5B6iB,EAAQnP,KAAK4mC,GAASsY,UAAU9mD,EAAK9L,KAEzC,MAAM+jB,EAAQ4e,EAAO9f,SAAW,GAChC,IAAI,IAAI7iB,EAAI,EAAGA,EAAI+jB,EAAM3X,OAAQpM,IAAI,CACjC,MAAMg0D,EAASjwC,EAAM/jB,IACW,IAA5B6iB,EAAQvQ,QAAQ0hD,KAChBnxC,EAAQnP,KAAKsgD,GACbK,EAASL,EAAOlkD,KAAM,EAE9B,CACA,MAAO,CACH+S,UACAwxC,WAER,CA9BwBC,CAAW3xB,GAC3B,OAAmB,IAAZnwB,GAAsBixB,EAuCrC,SAA2BhkB,GAAOoD,QAAEA,EAAOwxC,SAAGA,GAAa7hD,EAASixB,GAChE,MAAMlM,EAAS,GACTjW,EAAU7B,EAAMuJ,aACtB,IAAK,MAAMgrC,KAAUnxC,EAAQ,CACzB,MAAM/S,EAAKkkD,EAAOlkD,GACZ+b,EAAO0oC,GAAQ/hD,EAAQ1C,GAAK2zB,GACrB,OAAT5X,GAGJ0L,EAAO7jB,KAAK,CACRsgD,SACAxhD,QAASgiD,GAAW/0C,EAAMkjB,OAAQ,CAC9BqxB,SACAjwC,MAAOswC,EAASvkD,IACjB+b,EAAMvK,IAEjB,CACA,OAAOiW,CACX,CAzDgDk9B,CAAkBh1C,EAAOoD,EAASrQ,EAASixB,GAAhD,EACvC,CACH2wB,mBAAAA,CAAoB30C,GACb,MAAMi1C,EAAsB5mD,KAAKqmD,WAAa,GACxC1zC,EAAc3S,KAAKihC,OACnBgM,EAAOA,CAACx8C,EAAGC,IAAID,EAAE6zB,OAAQnxB,IAAKzC,EAAEm2D,KAAMvhD,GAAInS,EAAE+yD,OAAOlkD,KAAOsD,EAAE4gD,OAAOlkD,KACzEhC,KAAKkxB,QAAQ+b,EAAK2Z,EAAqBj0C,GAAchB,EAAO,QAC5D3R,KAAKkxB,QAAQ+b,EAAKt6B,EAAai0C,GAAsBj1C,EAAO,QAChE,EAsBJ,SAAS80C,GAAQ/hD,EAASixB,GACtB,OAAKA,IAAmB,IAAZjxB,GAGI,IAAZA,EACO,CAAA,EAEJA,EALI,IAMf,CAoBA,SAASgiD,GAAW7xB,GAAQqxB,OAAEA,EAAMjwC,MAAGA,GAAU8H,EAAMvK,GACnD,MAAMxV,EAAO62B,EAAOiyB,gBAAgBZ,GAC9B1kC,EAASqT,EAAOmH,gBAAgBje,EAAM/f,GAI5C,OAHIiY,GAASiwC,EAAO/vC,UAChBqL,EAAO5b,KAAKsgD,EAAO/vC,UAEhB0e,EAAOoH,eAAeza,EAAQhO,EAAS,CAC1C,IACD,CACCmR,YAAY,EACZC,WAAW,EACXH,SAAS,GAEjB,CAEA,SAASsiC,GAAalnD,EAAM6E,GACxB,MAAMsiD,EAAkB7wC,GAAS7C,SAASzT,IAAS,CAAA,EAEnD,QADwB6E,EAAQ4O,UAAY,CAAA,GAAIzT,IAAS,CAAA,GACnCyU,WAAa5P,EAAQ4P,WAAa0yC,EAAgB1yC,WAAa,GACzF,CAaA,SAAS2yC,GAAcjlD,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CACA,SAASklD,GAAiBtZ,GACtB,MAAiB,QAAbA,GAAmC,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,CAGJ,CACA,SAASuZ,GAAcnlD,KAAOolD,GAC1B,GAAIH,GAAcjlD,GACd,OAAOA,EAEX,IAAK,MAAM+b,KAAQqpC,EAAa,CAC5B,MAAMx6C,EAAOmR,EAAKnR,MAAQs6C,GAAiBnpC,EAAK6vB,WAAa5rC,EAAG1D,OAAS,GAAK2oD,GAAcjlD,EAAG,GAAGrD,eAClG,GAAIiO,EACA,OAAOA,CAEf,CACA,MAAM,IAAImX,MAAM,6BAA6B/hB,uDACjD,CACA,SAASqlD,GAAmBrlD,EAAI4K,EAAMD,GAClC,GAAIA,EAAQC,EAAO,YAAc5K,EAC7B,MAAO,CACH4K,OAGZ,CAUA,SAAS06C,GAAiBzyB,EAAQnwB,GAC9B,MAAM6iD,EAAgB70C,GAAUmiB,EAAOh1B,OAAS,CAC5CqV,OAAQ,CAAA,GAENsyC,EAAe9iD,EAAQwQ,QAAU,CAAA,EACjCuyC,EAAiBV,GAAalyB,EAAOh1B,KAAM6E,GAC3CwQ,EAASjX,OAAOmG,OAAO,MA8C7B,OA7CAnG,OAAOD,KAAKwpD,GAAct8C,QAASlJ,IAC/B,MAAM0lD,EAAYF,EAAaxlD,GAC/B,IAAKO,EAASmlD,GACV,OAAO3mC,QAAQ4mC,MAAM,0CAA0C3lD,KAEnE,GAAI0lD,EAAUnkC,OACV,OAAOxC,QAAQC,KAAK,kDAAkDhf,KAE1E,MAAM4K,EAAOu6C,GAAcnlD,EAAI0lD,EAxBvC,SAAkC1lD,EAAI6yB,GAClC,GAAIA,EAAOjb,MAAQib,EAAOjb,KAAKtG,SAAU,CACrC,MAAMs0C,EAAU/yB,EAAOjb,KAAKtG,SAASgR,OAAQ1zB,GAAIA,EAAEopC,UAAYh4B,GAAMpR,EAAEspC,UAAYl4B,GACnF,GAAI4lD,EAAQtpD,OACR,OAAO+oD,GAAmBrlD,EAAI,IAAK4lD,EAAQ,KAAOP,GAAmBrlD,EAAI,IAAK4lD,EAAQ,GAE9F,CACA,MAAO,CAAA,CACX,CAgBkDC,CAAyB7lD,EAAI6yB,GAAS1e,GAASjB,OAAOwyC,EAAU7nD,OACpGioD,EA5Dd,SAAmCl7C,EAAM0H,GACrC,OAAO1H,IAAS0H,EAAY,UAAY,SAC5C,CA0D0ByzC,CAA0Bn7C,EAAM66C,GAC5CO,EAAsBT,EAAcryC,QAAU,CAAA,EACpDA,EAAOlT,GAAMiD,EAAQhH,OAAOmG,OAAO,MAAO,CACtC,CACIwI,QAEJ86C,EACAM,EAAoBp7C,GACpBo7C,EAAoBF,OAG5BjzB,EAAOjb,KAAKtG,SAASpI,QAASyB,IAC1B,MAAM9M,EAAO8M,EAAQ9M,MAAQg1B,EAAOh1B,KAC9ByU,EAAY3H,EAAQ2H,WAAayyC,GAAalnD,EAAM6E,GAEpDsjD,GADkBt1C,GAAU7S,IAAS,CAAA,GACCqV,QAAU,CAAA,EACtDjX,OAAOD,KAAKgqD,GAAqB98C,QAAS+8C,IACtC,MAAMr7C,EAtFlB,SAAmC5K,EAAIsS,GACnC,IAAI1H,EAAO5K,EAMX,MALW,YAAPA,EACA4K,EAAO0H,EACO,YAAPtS,IACP4K,EAAqB,MAAd0H,EAAoB,IAAM,KAE9B1H,CACX,CA8EyBs7C,CAA0BD,EAAW3zC,GAC5CtS,EAAK2K,EAAQC,EAAO,WAAaA,EACvCsI,EAAOlT,GAAMkT,EAAOlT,IAAO/D,OAAOmG,OAAO,MACzCa,EAAQiQ,EAAOlT,GAAK,CAChB,CACI4K,QAEJ46C,EAAaxlD,GACbgmD,EAAoBC,SAIhChqD,OAAOD,KAAKkX,GAAQhK,QAAS3G,IACzB,MAAM0Q,EAAQC,EAAO3Q,GACrBU,EAAQgQ,EAAO,CACXkB,GAASjB,OAAOD,EAAMpV,MACtBsW,GAASlB,UAGVC,CACX,CACA,SAASizC,GAAYtzB,GACjB,MAAMnwB,EAAUmwB,EAAOnwB,UAAYmwB,EAAOnwB,QAAU,CAAA,GACpDA,EAAQqQ,QAAUlS,EAAe6B,EAAQqQ,QAAS,CAAA,GAClDrQ,EAAQwQ,OAASoyC,GAAiBzyB,EAAQnwB,EAC9C,CACA,SAAS0jD,GAASxuC,GAId,OAHAA,EAAOA,GAAQ,CAAA,GACVtG,SAAWsG,EAAKtG,UAAY,GACjCsG,EAAK2iB,OAAS3iB,EAAK2iB,QAAU,GACtB3iB,CACX,CAOA,MAAMyuC,GAAW,IAAI53C,IACf63C,GAAa,IAAIh9C,IACvB,SAASi9C,GAAW13C,EAAU23C,GAC1B,IAAIxqD,EAAOqqD,GAASp3C,IAAIJ,GAMxB,OALK7S,IACDA,EAAOwqD,IACPH,GAASh9C,IAAIwF,EAAU7S,GACvBsqD,GAAWrkC,IAAIjmB,IAEZA,CACX,CACA,MAAMyqD,GAAaA,CAACp9C,EAAKjL,EAAKmE,KAC1B,MAAMwZ,EAAOxY,EAAiBnF,EAAKmE,QACtB/S,IAATusB,GACA1S,EAAI4Y,IAAIlG,IAGhB,MAAM2qC,GACF9oD,WAAAA,CAAYi1B,GACR70B,KAAK2oD,QAzBb,SAAoB9zB,GAIhB,OAHAA,EAASA,GAAU,CAAA,GACZjb,KAAOwuC,GAASvzB,EAAOjb,MAC9BuuC,GAAYtzB,GACLA,CACX,CAoBuB+zB,CAAW/zB,GAC1B70B,KAAK6oD,YAAc,IAAIp4C,IACvBzQ,KAAK8oD,eAAiB,IAAIr4C,GAC9B,CACA,YAAIgD,GACA,YAAYk1C,QAAQl1C,QACxB,CACA,QAAI5T,GACA,OAAOG,KAAK2oD,QAAQ9oD,IACxB,CACA,QAAIA,CAAKA,GACLG,KAAK2oD,QAAQ9oD,KAAOA,CACxB,CACA,QAAI+Z,GACA,YAAY+uC,QAAQ/uC,IACxB,CACA,QAAIA,CAAKA,GACL5Z,KAAK2oD,QAAQ/uC,KAAOwuC,GAASxuC,EACjC,CACA,WAAIlV,GACA,OAAO1E,KAAK2oD,QAAQjkD,OACxB,CACA,WAAIA,CAAQA,GACR1E,KAAK2oD,QAAQjkD,QAAUA,CAC3B,CACA,WAAIqQ,GACA,OAAO/U,KAAK2oD,QAAQ5zC,OACxB,CACAof,MAAAA,GACI,MAAMU,EAAS70B,KAAK2oD,QACpB3oD,KAAK+oD,aACLZ,GAAYtzB,EAChB,CACAk0B,UAAAA,GACI/oD,KAAK6oD,YAAYG,QACjBhpD,KAAK8oD,eAAeE,OACxB,CACHjtB,gBAAAA,CAAiBktB,GACV,OAAOV,GAAWU,EAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,KAGhB,CACHlqB,yBAAAA,CAA0BkqB,EAAanqB,GAChC,OAAOypB,GAAW,GAAGU,gBAA0BnqB,IAAc,IAAI,CACzD,CACI,YAAYmqB,iBAA2BnqB,IACvC,eAAeA,KAEnB,CACI,YAAYmqB,IACZ,KAGhB,CACHvqB,uBAAAA,CAAwBuqB,EAAazqB,GAC9B,OAAO+pB,GAAW,GAAGU,KAAezqB,IAAe,IAAI,CAC/C,CACI,YAAYyqB,cAAwBzqB,IACpC,YAAYyqB,IACZ,YAAYzqB,IACZ,KAGhB,CACHsoB,eAAAA,CAAgBZ,GACT,MAAMlkD,EAAKkkD,EAAOlkD,GAElB,OAAOumD,GAAW,GADLvoD,KAAKH,eACkBmC,IAAM,IAAI,CACtC,CACI,WAAWA,OACRkkD,EAAOgD,wBAA0B,KAGpD,CACHC,aAAAA,CAAcC,EAAWC,GAClB,MAAMR,EAAc7oD,KAAK6oD,YACzB,IAAIzuC,EAAQyuC,EAAY53C,IAAIm4C,GAK5B,OAJKhvC,IAASivC,IACVjvC,EAAQ,IAAI3J,IACZo4C,EAAYx9C,IAAI+9C,EAAWhvC,IAExBA,CACX,CACH4hB,eAAAA,CAAgBotB,EAAWE,EAAUD,GAC9B,MAAM3kD,QAAEA,EAAO7E,KAAGA,GAAUG,KACtBoa,EAAQpa,KAAKmpD,cAAcC,EAAWC,GACtChxB,EAASje,EAAMnJ,IAAIq4C,GACzB,GAAIjxB,EACA,OAAOA,EAEX,MAAM7W,EAAS,IAAIlW,IACnBg+C,EAASp+C,QAASlN,IACVorD,IACA5nC,EAAOyC,IAAImlC,GACXprD,EAAKkN,QAAS3G,GAAMkkD,GAAWjnC,EAAQ4nC,EAAW7kD,KAEtDvG,EAAKkN,QAAS3G,GAAMkkD,GAAWjnC,EAAQ9c,EAASH,IAChDvG,EAAKkN,QAAS3G,GAAMkkD,GAAWjnC,EAAQ9O,GAAU7S,IAAS,GAAI0E,IAC9DvG,EAAKkN,QAAS3G,GAAMkkD,GAAWjnC,EAAQrL,GAAU5R,IACjDvG,EAAKkN,QAAS3G,GAAMkkD,GAAWjnC,EAAQ7O,GAAapO,MAExD,MAAM0D,EAAQ3V,MAAMyM,KAAKyiB,GAOzB,OANqB,IAAjBvZ,EAAM3J,QACN2J,EAAMrC,KAAK3H,OAAOmG,OAAO,OAEzBkkD,GAAWhiD,IAAIgjD,IACflvC,EAAM/O,IAAIi+C,EAAUrhD,GAEjBA,CACX,CACHshD,iBAAAA,GACO,MAAM7kD,QAAEA,EAAO7E,KAAGA,GAAUG,KAC5B,MAAO,CACH0E,EACAgO,GAAU7S,IAAS,CAAA,EACnBsW,GAAS7C,SAASzT,IAAS,CAAA,EAC3B,CACIA,QAEJsW,GACAxD,GAER,CACHgsB,mBAAAA,CAAoBnd,EAAQ3jB,EAAO2V,EAASiO,EAAW,CAChD,KAEA,MAAMgI,EAAS,CACX6L,SAAS,IAEP9vB,SAAEA,EAAQgkD,YAAGA,GAAiBC,GAAYzpD,KAAK8oD,eAAgBtnC,EAAQC,GAC7E,IAAI/c,EAAUc,GAsCtB,SAAqB+c,EAAO1kB,GACxB,MAAMgmB,aAAEA,EAAYO,YAAGA,GAAiBnR,GAAasP,GACrD,IAAK,MAAM9B,KAAQ5iB,EAAM,CACrB,MAAM8mB,EAAad,EAAapD,GAC1BmE,EAAYR,EAAY3D,GACxBve,GAAS0iB,GAAaD,IAAepC,EAAM9B,GACjD,GAAIkE,IAAeze,GAAWhE,IAAUwnD,GAAYxnD,KAAW0iB,GAAaryB,EAAQ2P,GAChF,OAAO,CAEf,CACA,OAAO,CACX,EAhDYynD,CAAYnkD,EAAU3H,KACtB4rB,EAAO6L,SAAU,EAGjB5wB,EAAU0e,GAAe5d,EAFzBgO,EAAUtN,GAAWsN,GAAWA,IAAYA,EACxBxT,KAAKi8B,eAAeza,EAAQhO,EAASg2C,KAG7D,IAAK,MAAM/oC,KAAQ5iB,EACf4rB,EAAOhJ,GAAQ/b,EAAQ+b,GAE3B,OAAOgJ,CACX,CACHwS,cAAAA,CAAeza,EAAQhO,EAASiO,EAAW,CACpC,IACD6B,GACC,MAAM9d,SAAEA,GAAcikD,GAAYzpD,KAAK8oD,eAAgBtnC,EAAQC,GAC/D,OAAOlf,EAASiR,GAAW4P,GAAe5d,EAAUgO,OAAShiB,EAAW8xB,GAAsB9d,CAClG,EAEJ,SAASikD,GAAYG,EAAepoC,EAAQC,GACxC,IAAIrH,EAAQwvC,EAAc34C,IAAIuQ,GACzBpH,IACDA,EAAQ,IAAI3J,IACZm5C,EAAcv+C,IAAImW,EAAQpH,IAE9B,MAAMvJ,EAAW4Q,EAASuC,OAC1B,IAAIqU,EAASje,EAAMnJ,IAAIJ,GASvB,OARKwnB,IAEDA,EAAS,CACL7yB,SAFa+b,GAAgBC,EAAQC,GAGrC+nC,YAAa/nC,EAAS6C,OAAQzjB,IAAKA,EAAElC,cAAc4T,SAAS,WAEhE6H,EAAM/O,IAAIwF,EAAUwnB,IAEjBA,CACX,CACA,MAAMqxB,GAAexnD,GAAQK,EAASL,IAAUjE,OAAOi3B,oBAAoBhzB,GAAO2kD,KAAMtiD,GAAM2B,GAAWhE,EAAMqC,KAgBzGslD,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqBlc,EAAUhhC,GACpC,MAAoB,QAAbghC,GAAmC,WAAbA,QAAyBic,GAAgBrlD,QAAQopC,IAA6B,MAAThhC,CACtG,CACA,SAASm9C,GAAcC,EAAIC,GACvB,OAAO,SAASx5D,EAAGC,GACf,OAAOD,EAAEu5D,KAAQt5D,EAAEs5D,GAAMv5D,EAAEw5D,GAAMv5D,EAAEu5D,GAAMx5D,EAAEu5D,GAAMt5D,EAAEs5D,EACvD,CACJ,CACA,SAASE,GAAqB12C,GAC1B,MAAM7B,EAAQ6B,EAAQ7B,MAChBqjB,EAAmBrjB,EAAMjN,QAAQyO,UACvCxB,EAAM0rC,cAAc,eACpBn6C,EAAS8xB,GAAoBA,EAAiBm1B,WAAY,CACtD32C,GACD7B,EACP,CACA,SAASy4C,GAAoB52C,GACzB,MAAM7B,EAAQ6B,EAAQ7B,MAChBqjB,EAAmBrjB,EAAMjN,QAAQyO,UACvCjQ,EAAS8xB,GAAoBA,EAAiBq1B,WAAY,CACtD72C,GACD7B,EACP,CACC,SAAS24C,GAAUjkD,GAShB,OARIkiB,MAAqC,iBAATliB,EAC5BA,EAAOmiB,SAAS+hC,eAAelkD,GACxBA,GAAQA,EAAK/H,SACpB+H,EAAOA,EAAK,IAEZA,GAAQA,EAAK4U,SACb5U,EAAOA,EAAK4U,QAET5U,CACX,CACA,MAAMmkD,GAAY,CAAA,EACZC,GAAYlmD,IACd,MAAM0W,EAASqvC,GAAU/lD,GACzB,OAAOtG,OAAOsT,OAAOi5C,IAAWlmC,OAAQ3zB,GAAIA,EAAEsqB,SAAWA,GAAQkX,OAErE,SAASu4B,GAAgBtqD,EAAKoJ,EAAO42B,GACjC,MAAMpiC,EAAOC,OAAOD,KAAKoC,GACzB,IAAK,MAAMmE,KAAOvG,EAAK,CACnB,MAAM2sD,GAAUpmD,EAChB,GAAIomD,GAAUnhD,EAAO,CACjB,MAAMtH,EAAQ9B,EAAImE,UACXnE,EAAImE,IACP67B,EAAO,GAAKuqB,EAASnhD,KACrBpJ,EAAIuqD,EAASvqB,GAAQl+B,EAE7B,CACJ,CACJ,CAUA,MAAM0oD,GACFpyB,gBAAkBriB,GAClBqiB,iBAAmBgyB,GACnBhyB,iBAAmB9lB,GACnB8lB,gBAAkBgU,GAClBhU,eA3EU,QA4EVA,gBAAkBiyB,GAClB,eAAO/G,IAAYt4C,GACfohC,GAASvoB,OAAO7Y,GAChBy/C,IACJ,CACA,iBAAOxG,IAAcj5C,GACjBohC,GAASxZ,UAAU5nB,GACnBy/C,IACJ,CACAjrD,WAAAA,CAAYyG,EAAMykD,GACd,MAAMj2B,EAAS70B,KAAK60B,OAAS,IAAI6zB,GAAOoC,GAClCC,EAAgBT,GAAUjkD,GAC1B2kD,EAAgBP,GAASM,GAC/B,GAAIC,EACA,MAAM,IAAIjnC,MAAM,4CAA+CinC,EAAchpD,GAA7D,kDAA6HgpD,EAAc/vC,OAAOjZ,GAAK,oBAE3K,MAAM0C,EAAUmwB,EAAOoH,eAAepH,EAAO00B,oBAAqBvpD,KAAKkb,cACvElb,KAAKyT,SAAW,IAAKohB,EAAOphB,UAAYwjC,GAAgB8T,IACxD/qD,KAAKyT,SAAS6/B,aAAaze,GAC3B,MAAMrhB,EAAUxT,KAAKyT,SAAS0/B,eAAe4X,EAAermD,EAAQqmB,aAC9D9P,EAASzH,GAAWA,EAAQyH,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1B3C,EAAQuC,GAAUA,EAAOvC,MAC/B1Y,KAAKgC,GAAKD,IACV/B,KAAKmU,IAAMX,EACXxT,KAAKib,OAASA,EACdjb,KAAK0Y,MAAQA,EACb1Y,KAAKqb,OAASA,EACdrb,KAAKirD,SAAWvmD,EAChB1E,KAAKkrD,aAAelrD,KAAK+qB,YACzB/qB,KAAK8xC,QAAU,GACf9xC,KAAKmrD,UAAY,GACjBnrD,KAAKu3B,aAAU/lC,EACfwO,KAAKuxC,MAAQ,GACbvxC,KAAK8a,6BAA0BtpB,EAC/BwO,KAAKuwB,eAAY/+B,EACjBwO,KAAKgyB,QAAU,GACfhyB,KAAKorD,gBAAa55D,EAClBwO,KAAKqrD,WAAa,CAAA,EACjBrrD,KAAKsrD,0BAAuB95D,EAC7BwO,KAAKurD,gBAAkB,GACvBvrD,KAAKkV,OAAS,CAAA,EACdlV,KAAKwrD,SAAW,IAAI5F,GACpB5lD,KAAK62C,SAAW,CAAA,EAChB72C,KAAKyrD,eAAiB,CAAA,EACtBzrD,KAAK0rD,UAAW,EAChB1rD,KAAKm/B,yBAAsB3tC,EAC3BwO,KAAKm5B,cAAW3nC,EAChBwO,KAAK2rD,UD39JT,SAAkBxoD,EAAIqT,GACtB,IAAIo1C,EACJ,OAAO,YAAYxoD,GAOf,OANIoT,GACAq1C,aAAaD,GACbA,EAAUE,WAAW3oD,EAAIqT,EAAOpT,IAEhCD,EAAGG,MAAMtD,KAAMoD,GAEZoT,CACX,CACJ,CCg9JyBu1C,CAAUv3C,GAAOxU,KAAKm0B,OAAO3f,GAAO9P,EAAQsnD,aAAe,GAC5EhsD,KAAKwgC,aAAe,GACpBgqB,GAAUxqD,KAAKgC,IAAMhC,KAChBwT,GAAYyH,GAIjBgY,GAAST,OAAOxyB,KAAM,WAAYkqD,IAClCj3B,GAAST,OAAOxyB,KAAM,WAAYoqD,IAClCpqD,KAAKisD,cACDjsD,KAAK0rD,UACL1rD,KAAKm0B,UAPLpT,QAAQ4mC,MAAM,oEAStB,CACA,eAAI58B,GACA,MAAQrmB,SAASqmB,YAAEA,EAAWpW,oBAAGA,GAAsB+D,MAAGA,EAAK2C,OAAGA,EAAM6vC,aAAGA,GAAkBlrD,KAC7F,OAAKiC,EAAc8oB,GAGfpW,GAAuBu2C,EAChBA,EAEJ7vC,EAAS3C,EAAQ2C,EAAS,KALtB0P,CAMf,CACA,QAAInR,GACA,OAAO5Z,KAAK60B,OAAOjb,IACvB,CACA,QAAIA,CAAKA,GACL5Z,KAAK60B,OAAOjb,KAAOA,CACvB,CACA,WAAIlV,GACA,OAAO1E,KAAKirD,QAChB,CACA,WAAIvmD,CAAQA,GACR1E,KAAK60B,OAAOnwB,QAAUA,CAC1B,CACA,YAAI8nC,GACA,OAAOA,EACX,CACHyf,WAAAA,GASO,OARAjsD,KAAKq9C,cAAc,cACfr9C,KAAK0E,QAAQsQ,WACbhV,KAAK8W,SAEL4U,GAAY1rB,KAAMA,KAAK0E,QAAQ6O,kBAEnCvT,KAAKksD,aACLlsD,KAAKq9C,cAAc,aACZr9C,IACX,CACAgpD,KAAAA,GAEI,OADAhuC,GAAYhb,KAAKib,OAAQjb,KAAKmU,KACvBnU,IACX,CACA8yB,IAAAA,GAEI,OADAG,GAASH,KAAK9yB,MACPA,IACX,CACH8W,MAAAA,CAAO4B,EAAO2C,GACF4X,GAASnB,QAAQ9xB,MAGlBA,KAAKmsD,kBAAoB,CACrBzzC,QACA2C,UAJJrb,KAAKosD,QAAQ1zC,EAAO2C,EAO5B,CACA+wC,OAAAA,CAAQ1zC,EAAO2C,GACX,MAAM3W,EAAU1E,KAAK0E,QACfuW,EAASjb,KAAKib,OACd8P,EAAcrmB,EAAQiQ,qBAAuB3U,KAAK+qB,YAClDshC,EAAUrsD,KAAKyT,SAASmX,eAAe3P,EAAQvC,EAAO2C,EAAQ0P,GAC9DuhC,EAAW5nD,EAAQ6O,kBAAoBvT,KAAKyT,SAASC,sBACrDc,EAAOxU,KAAK0Y,MAAQ,SAAW,SACrC1Y,KAAK0Y,MAAQ2zC,EAAQ3zC,MACrB1Y,KAAKqb,OAASgxC,EAAQhxC,OACtBrb,KAAKkrD,aAAelrD,KAAK+qB,YACpBW,GAAY1rB,KAAMssD,GAAU,KAGjCtsD,KAAKq9C,cAAc,SAAU,CACzBj3C,KAAMimD,IAEVnpD,EAASwB,EAAQ6nD,SAAU,CACvBvsD,KACAqsD,GACDrsD,MACCA,KAAK0rD,UACD1rD,KAAK2rD,UAAUn3C,IACfxU,KAAKwsD,SAGjB,CACAC,mBAAAA,GAGIlpD,EAFgBvD,KAAK0E,QACSwQ,QAAU,CAAA,EACpB,CAACw3C,EAAajmB,KAC9BimB,EAAY1qD,GAAKykC,GAEzB,CACHkmB,mBAAAA,GACO,MAAMjoD,EAAU1E,KAAK0E,QACfkoD,EAAYloD,EAAQwQ,OACpBA,EAASlV,KAAKkV,OACd23C,EAAU5uD,OAAOD,KAAKkX,GAAQwd,OAAO,CAACtyB,EAAK4B,KAC7C5B,EAAI4B,IAAM,EACH5B,GACR,CAAA,GACH,IAAIgL,EAAQ,GACRwhD,IACAxhD,EAAQA,EAAMg2B,OAAOnjC,OAAOD,KAAK4uD,GAAWp6D,IAAKwP,IAC7C,MAAMolD,EAAewF,EAAU5qD,GACzB4K,EAAOu6C,GAAcnlD,EAAIolD,GACzB0F,EAAoB,MAATlgD,EACX+2B,EAAwB,MAAT/2B,EACrB,MAAO,CACHlI,QAAS0iD,EACT2F,UAAWD,EAAW,YAAcnpB,EAAe,SAAW,OAC9DqpB,MAAOF,EAAW,eAAiBnpB,EAAe,WAAa,cAI3EpgC,EAAK6H,EAAQ/E,IACT,MAAM+gD,EAAe/gD,EAAK3B,QACpB1C,EAAKolD,EAAaplD,GAClB4K,EAAOu6C,GAAcnlD,EAAIolD,GACzB6F,EAAYpqD,EAAeukD,EAAavnD,KAAMwG,EAAK2mD,YAC3Bx7D,IAA1B41D,EAAaxZ,UAA0Bkc,GAAqB1C,EAAaxZ,SAAUhhC,KAAUk9C,GAAqBzjD,EAAK0mD,aACvH3F,EAAaxZ,SAAWvnC,EAAK0mD,WAEjCF,EAAQ7qD,IAAM,EACd,IAAIiT,EAAQ,KACRjT,KAAMkT,GAAUA,EAAOlT,GAAInC,OAASotD,EACpCh4C,EAAQC,EAAOlT,IAGfiT,EAAQ,IADWu3B,GAASuY,SAASkI,GAC7B,CAAe,CACnBjrD,KACAnC,KAAMotD,EACN94C,IAAKnU,KAAKmU,IACVxC,MAAO3R,OAEXkV,EAAOD,EAAMjT,IAAMiT,GAEvBA,EAAM83B,KAAKqa,EAAc1iD,KAE7BnB,EAAKspD,EAAS,CAACK,EAAYlrD,KAClBkrD,UACMh4C,EAAOlT,KAGtBuB,EAAK2R,EAASD,IACVy6B,GAAQ3a,UAAU/0B,KAAMiV,EAAOA,EAAMvQ,SACrCgrC,GAAQmC,OAAO7xC,KAAMiV,IAE7B,CACHk4C,eAAAA,GACO,MAAMj3B,EAAWl2B,KAAKmrD,UAChBlrB,EAAUjgC,KAAK4Z,KAAKtG,SAAShV,OAC7B0hC,EAAU9J,EAAS53B,OAEzB,GADA43B,EAASmL,KAAK,CAAC5wC,EAAGC,IAAID,EAAEwT,MAAQvT,EAAEuT,OAC9B+7B,EAAUC,EAAS,CACnB,IAAI,IAAI/tC,EAAI+tC,EAAS/tC,EAAI8tC,IAAW9tC,EAChC8N,KAAKotD,oBAAoBl7D,GAE7BgkC,EAASjrB,OAAOg1B,EAASD,EAAUC,EACvC,CACAjgC,KAAKurD,gBAAkBr1B,EAAS5zB,MAAM,GAAG++B,KAAK0oB,GAAc,QAAS,SACzE,CACHsD,2BAAAA,GACO,MAAQlC,UAAWj1B,EAAWtc,MAAMtG,SAAEA,IAAiBtT,KACnDk2B,EAAS53B,OAASgV,EAAShV,oBACfi5B,QAEhBrB,EAAShrB,QAAQ,CAACe,EAAMhI,KACqC,IAArDqP,EAASgR,OAAQnxB,GAAIA,IAAM8Y,EAAKs+B,UAAUjsC,QAC1C0B,KAAKotD,oBAAoBnpD,IAGrC,CACAqpD,wBAAAA,GACI,MAAMC,EAAiB,GACjBj6C,EAAWtT,KAAK4Z,KAAKtG,SAC3B,IAAIphB,EAAG2R,EAEP,IADA7D,KAAKqtD,8BACDn7D,EAAI,EAAG2R,EAAOyP,EAAShV,OAAQpM,EAAI2R,EAAM3R,IAAI,CAC7C,MAAMya,EAAU2G,EAASphB,GACzB,IAAI+Z,EAAOjM,KAAK26B,eAAezoC,GAC/B,MAAM2N,EAAO8M,EAAQ9M,MAAQG,KAAK60B,OAAOh1B,KAWzC,GAVIoM,EAAKpM,MAAQoM,EAAKpM,OAASA,IAC3BG,KAAKotD,oBAAoBl7D,GACzB+Z,EAAOjM,KAAK26B,eAAezoC,IAE/B+Z,EAAKpM,KAAOA,EACZoM,EAAKqI,UAAY3H,EAAQ2H,WAAayyC,GAAalnD,EAAMG,KAAK0E,SAC9DuH,EAAKuhD,MAAQ7gD,EAAQ6gD,OAAS,EAC9BvhD,EAAKhI,MAAQ/R,EACb+Z,EAAK4xB,MAAQ,GAAKlxB,EAAQkxB,MAC1B5xB,EAAKgL,QAAUjX,KAAK+nC,iBAAiB71C,GACjC+Z,EAAKorB,WACLprB,EAAKorB,WAAWuC,YAAY1nC,GAC5B+Z,EAAKorB,WAAWmC,iBACb,CACH,MAAMi0B,EAAkBjhB,GAASoY,cAAc/kD,IACzCw5B,mBAAEA,EAAkBC,gBAAGA,GAAqBnjB,GAAS7C,SAASzT,GACpE5B,OAAOoB,OAAOouD,EAAiB,CAC3Bn0B,gBAAiBkT,GAASC,WAAWnT,GACrCD,mBAAoBA,GAAsBmT,GAASC,WAAWpT,KAElEptB,EAAKorB,WAAa,IAAIo2B,EAAgBztD,KAAM9N,GAC5Cq7D,EAAe3nD,KAAKqG,EAAKorB,WAC7B,CACJ,CAEA,OADAr3B,KAAKmtD,kBACEI,CACX,CACHG,cAAAA,GACOnqD,EAAKvD,KAAK4Z,KAAKtG,SAAU,CAAC3G,EAAS3I,KAC/BhE,KAAK26B,eAAe32B,GAAcqzB,WAAWyD,SAC9C96B,KACP,CACH86B,KAAAA,GACO96B,KAAK0tD,iBACL1tD,KAAKq9C,cAAc,QACvB,CACAlpB,MAAAA,CAAO3f,GACH,MAAMqgB,EAAS70B,KAAK60B,OACpBA,EAAOV,SACP,MAAMzvB,EAAU1E,KAAKirD,SAAWp2B,EAAOoH,eAAepH,EAAO00B,oBAAqBvpD,KAAKkb,cACjFyyC,EAAgB3tD,KAAKm/B,qBAAuBz6B,EAAQyO,UAK1D,GAJAnT,KAAK4tD,gBACL5tD,KAAK6tD,sBACL7tD,KAAK8tD,uBACL9tD,KAAKwrD,SAASpF,cAIP,IAHHpmD,KAAKq9C,cAAc,eAAgB,CACnC7oC,OACA2xC,YAAY,IAEZ,OAEJ,MAAMoH,EAAiBvtD,KAAKstD,2BAC5BttD,KAAKq9C,cAAc,wBACnB,IAAInL,EAAa,EACjB,IAAI,IAAIhgD,EAAI,EAAG2R,EAAO7D,KAAK4Z,KAAKtG,SAAShV,OAAQpM,EAAI2R,EAAM3R,IAAI,CAC3D,MAAMmlC,WAAEA,GAAgBr3B,KAAK26B,eAAezoC,GACtC4oC,GAAS6yB,IAAwD,IAAvCJ,EAAe/oD,QAAQ6yB,GACvDA,EAAWoE,sBAAsBX,GACjCoX,EAAaviD,KAAKC,KAAKynC,EAAWsG,iBAAkBuU,EACxD,CACAA,EAAalyC,KAAK+tD,YAAcrpD,EAAQwrC,OAAO/4B,YAAc+6B,EAAa,EAC1ElyC,KAAKguD,cAAc9b,GACdyb,GACDpqD,EAAKgqD,EAAiBl2B,IAClBA,EAAWyD,UAGnB96B,KAAKiuD,gBAAgBz5C,GACrBxU,KAAKq9C,cAAc,cAAe,CAC9B7oC,SAEJxU,KAAK8xC,QAAQzQ,KAAK0oB,GAAc,IAAK,SACrC,MAAM/3B,QAAEA,EAAOo5B,WAAGA,GAAgBprD,KAC9BorD,EACAprD,KAAKkuD,cAAc9C,GAAY,GACxBp5B,EAAQ1zB,QACf0B,KAAKmuD,mBAAmBn8B,EAASA,GAAS,GAE9ChyB,KAAKwsD,QACT,CACHoB,aAAAA,GACOrqD,EAAKvD,KAAKkV,OAASD,IACfy6B,GAAQsC,UAAUhyC,KAAMiV,KAE5BjV,KAAKysD,sBACLzsD,KAAK2sD,qBACT,CACHkB,mBAAAA,GACO,MAAMnpD,EAAU1E,KAAK0E,QACf0pD,EAAiB,IAAI9iD,IAAIrN,OAAOD,KAAKgC,KAAKqrD,aAC1CgD,EAAY,IAAI/iD,IAAI5G,EAAQkP,QAC7BzN,GAAUioD,EAAgBC,MAAgBruD,KAAKsrD,uBAAyB5mD,EAAQsQ,aACjFhV,KAAKsuD,eACLtuD,KAAKksD,aAEb,CACH4B,oBAAAA,GACO,MAAMrC,eAAEA,GAAoBzrD,KACtBuuD,EAAUvuD,KAAKwuD,0BAA4B,GACjD,IAAK,MAAM75B,OAAEA,EAAMnrB,MAAGA,EAAK6C,MAAGA,KAAYkiD,EAEtC7D,GAAgBe,EAAgBjiD,EADR,oBAAXmrB,GAAgCtoB,EAAQA,EAG7D,CACHmiD,sBAAAA,GACO,MAAMhuB,EAAexgC,KAAKwgC,aAC1B,IAAKA,IAAiBA,EAAaliC,OAC/B,OAEJ0B,KAAKwgC,aAAe,GACpB,MAAMiuB,EAAezuD,KAAK4Z,KAAKtG,SAAShV,OAClCowD,EAAW9O,GAAM,IAAIt0C,IAAIk1B,EAAalc,OAAQ3zB,GAAIA,EAAE,KAAOivD,GAAKptD,IAAI,CAAC7B,EAAGuB,IAAIA,EAAI,IAAMvB,EAAEsa,OAAO,GAAG+Y,KAAK,OACvG2qC,EAAYD,EAAQ,GAC1B,IAAI,IAAIx8D,EAAI,EAAGA,EAAIu8D,EAAcv8D,IAC7B,IAAKiU,GAAUwoD,EAAWD,EAAQx8D,IAC9B,OAGR,OAAOI,MAAMyM,KAAK4vD,GAAWn8D,IAAK7B,GAAIA,EAAE+U,MAAM,MAAMlT,IAAK/B,IAAC,CAClDkkC,OAAQlkC,EAAE,GACV+Y,OAAQ/Y,EAAE,GACV4b,OAAQ5b,EAAE,KAEtB,CACHu9D,aAAAA,CAAc9b,GACP,IAEO,IAFHlyC,KAAKq9C,cAAc,eAAgB,CACnC8I,YAAY,IAEZ,OAEJzW,GAAQvb,OAAOn0B,KAAMA,KAAK0Y,MAAO1Y,KAAKqb,OAAQ62B,GAC9C,MAAMn1B,EAAO/c,KAAKuwB,UACZq+B,EAAS7xC,EAAKrE,OAAS,GAAKqE,EAAK1B,QAAU,EACjDrb,KAAK8xC,QAAU,GACfvuC,EAAKvD,KAAKuxC,MAAQtnB,IACV2kC,GAA2B,cAAjB3kC,EAAI2jB,WAGd3jB,EAAI8K,WACJ9K,EAAI8K,YAER/0B,KAAK8xC,QAAQlsC,QAAQqkB,EAAI6nB,aAC1B9xC,MACHA,KAAK8xC,QAAQ5mC,QAAQ,CAAC7E,EAAMpC,KACxBoC,EAAKwoD,KAAO5qD,IAEhBjE,KAAKq9C,cAAc,cACvB,CACH4Q,eAAAA,CAAgBz5C,GACT,IAGO,IAHHxU,KAAKq9C,cAAc,uBAAwB,CAC3C7oC,OACA2xC,YAAY,IAFhB,CAMA,IAAI,IAAIj0D,EAAI,EAAG2R,EAAO7D,KAAK4Z,KAAKtG,SAAShV,OAAQpM,EAAI2R,IAAQ3R,EACzD8N,KAAK26B,eAAezoC,GAAGmlC,WAAWtC,YAEtC,IAAI,IAAI7iC,EAAI,EAAG2R,EAAO7D,KAAK4Z,KAAKtG,SAAShV,OAAQpM,EAAI2R,IAAQ3R,EACzD8N,KAAK8uD,eAAe58D,EAAGgU,GAAWsO,GAAQA,EAAK,CAC3CxQ,aAAc9R,IACbsiB,GAETxU,KAAKq9C,cAAc,sBAAuB,CACtC7oC,QAVJ,CAYJ,CACHs6C,cAAAA,CAAe7qD,EAAOuQ,GACf,MAAMvI,EAAOjM,KAAK26B,eAAe12B,GAC3Bb,EAAO,CACT6I,OACAhI,QACAuQ,OACA2xC,YAAY,IAEwC,IAApDnmD,KAAKq9C,cAAc,sBAAuBj6C,KAG9C6I,EAAKorB,WAAW3F,QAAQld,GACxBpR,EAAK+iD,YAAa,EAClBnmD,KAAKq9C,cAAc,qBAAsBj6C,GAC7C,CACAopD,MAAAA,IAGW,IAFHxsD,KAAKq9C,cAAc,eAAgB,CACnC8I,YAAY,MAIZlzB,GAAS3sB,IAAItG,MACTA,KAAK0rD,WAAaz4B,GAASnB,QAAQ9xB,OACnCizB,GAASzpB,MAAMxJ,OAGnBA,KAAK+xB,OACLm4B,GAAqB,CACjBv4C,MAAO3R,QAGnB,CACA+xB,IAAAA,GACI,IAAI7/B,EACJ,GAAI8N,KAAKmsD,kBAAmB,CACxB,MAAMzzC,MAAEA,EAAK2C,OAAGA,GAAYrb,KAAKmsD,kBACjCnsD,KAAKmsD,kBAAoB,KACzBnsD,KAAKosD,QAAQ1zC,EAAO2C,EACxB,CAEA,GADArb,KAAKgpD,QACDhpD,KAAK0Y,OAAS,GAAK1Y,KAAKqb,QAAU,EAClC,OAEJ,IAEO,IAFHrb,KAAKq9C,cAAc,aAAc,CACjC8I,YAAY,IAEZ,OAEJ,MAAM4I,EAAS/uD,KAAK8xC,QACpB,IAAI5/C,EAAI,EAAGA,EAAI68D,EAAOzwD,QAAUywD,EAAO78D,GAAG6/C,GAAK,IAAK7/C,EAChD68D,EAAO78D,GAAG6/B,KAAK/xB,KAAKuwB,WAGxB,IADAvwB,KAAKgvD,gBACC98D,EAAI68D,EAAOzwD,SAAUpM,EACvB68D,EAAO78D,GAAG6/B,KAAK/xB,KAAKuwB,WAExBvwB,KAAKq9C,cAAc,YACvB,CACHlnB,sBAAAA,CAAuBF,GAChB,MAAMC,EAAWl2B,KAAKurD,gBAChB9hC,EAAS,GACf,IAAIv3B,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAOqyB,EAAS53B,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC7C,MAAM+Z,EAAOiqB,EAAShkC,GACjB+jC,IAAiBhqB,EAAKgL,SACvBwS,EAAO7jB,KAAKqG,EAEpB,CACA,OAAOwd,CACX,CACHqkB,4BAAAA,GACO,OAAO9tC,KAAKm2B,wBAAuB,EACvC,CACH64B,aAAAA,GACO,IAEO,IAFHhvD,KAAKq9C,cAAc,qBAAsB,CACzC8I,YAAY,IAEZ,OAEJ,MAAMjwB,EAAWl2B,KAAK8tC,+BACtB,IAAI,IAAI57C,EAAIgkC,EAAS53B,OAAS,EAAGpM,GAAK,IAAKA,EACvC8N,KAAKivD,aAAa/4B,EAAShkC,IAE/B8N,KAAKq9C,cAAc,oBACvB,CACH4R,YAAAA,CAAahjD,GACN,MAAMkI,EAAMnU,KAAKmU,IACX/Q,EAAO,CACT6I,OACAhI,MAAOgI,EAAKhI,MACZkiD,YAAY,GAEVtuC,EAAO4Y,GAAmBzwB,KAAMiM,IACgB,IAAlDjM,KAAKq9C,cAAc,oBAAqBj6C,KAGxCyU,GACAoF,GAAS9I,EAAK0D,GAElB5L,EAAKorB,WAAWtF,OACZla,GACAqF,GAAW/I,GAEf/Q,EAAK+iD,YAAa,EAClBnmD,KAAKq9C,cAAc,mBAAoBj6C,GAC3C,CACH6qC,aAAAA,CAAc9gC,GACP,OAAO2P,GAAe3P,EAAOnN,KAAKuwB,UAAWvwB,KAAK+tD,YACtD,CACAmB,yBAAAA,CAA0Br+D,EAAG2jB,EAAM9P,EAASspC,GACxC,MAAMrZ,EAASua,GAAYC,MAAM36B,GACjC,MAAsB,mBAAXmgB,EACAA,EAAO30B,KAAMnP,EAAG6T,EAASspC,GAE7B,EACX,CACArT,cAAAA,CAAe32B,GACX,MAAM2I,EAAU3M,KAAK4Z,KAAKtG,SAAStP,GAC7BkyB,EAAWl2B,KAAKmrD,UACtB,IAAIl/C,EAAOiqB,EAAS5R,OAAQnxB,GAAIA,GAAKA,EAAEo3C,WAAa59B,GAASwlB,MAkB7D,OAjBKlmB,IACDA,EAAO,CACHpM,KAAM,KACN+Z,KAAM,GACNjN,QAAS,KACT0qB,WAAY,KACZgG,OAAQ,KACRrD,QAAS,KACTE,QAAS,KACTszB,MAAO7gD,GAAWA,EAAQ6gD,OAAS,EACnCvpD,MAAOD,EACPumC,SAAU59B,EACVF,QAAS,GACTH,SAAS,GAEb4pB,EAAStwB,KAAKqG,IAEXA,CACX,CACAiP,UAAAA,GACI,OAAOlb,KAAKm5B,WAAan5B,KAAKm5B,SAAW9X,GAAc,KAAM,CACzD1P,MAAO3R,KACPH,KAAM,UAEd,CACA4rC,sBAAAA,GACI,OAAOzrC,KAAK8tC,+BAA+BxvC,MAC/C,CACAypC,gBAAAA,CAAiB/jC,GACb,MAAM2I,EAAU3M,KAAK4Z,KAAKtG,SAAStP,GACnC,IAAK2I,EACD,OAAO,EAEX,MAAMV,EAAOjM,KAAK26B,eAAe32B,GACjC,MAA8B,kBAAhBiI,EAAKoxB,QAAwBpxB,EAAKoxB,QAAU1wB,EAAQ0wB,MACtE,CACA8xB,oBAAAA,CAAqBnrD,EAAciT,GAClBjX,KAAK26B,eAAe32B,GAC5Bq5B,QAAUpmB,CACnB,CACAuwB,oBAAAA,CAAqBvjC,GACjBjE,KAAKyrD,eAAexnD,IAAUjE,KAAKyrD,eAAexnD,EACtD,CACAwhC,iBAAAA,CAAkBxhC,GACd,OAAQjE,KAAKyrD,eAAexnD,EAChC,CACHmrD,iBAAAA,CAAkBprD,EAAcm6B,EAAWlnB,GACpC,MAAMzC,EAAOyC,EAAU,OAAS,OAC1BhL,EAAOjM,KAAK26B,eAAe32B,GAC3BmtB,EAAQllB,EAAKorB,WAAWwH,wBAAmBrtC,EAAWgjB,GACxDvO,GAAQk4B,IACRlyB,EAAK2N,KAAKukB,GAAWd,QAAUpmB,EAC/BjX,KAAKm0B,WAELn0B,KAAKmvD,qBAAqBnrD,EAAciT,GACxCka,EAAMgD,OAAOloB,EAAM,CACfgL,YAEJjX,KAAKm0B,OAAQhgB,GAAMA,EAAInQ,eAAiBA,EAAewQ,OAAOhjB,GAEtE,CACA0lB,IAAAA,CAAKlT,EAAcm6B,GACfn+B,KAAKovD,kBAAkBprD,EAAcm6B,GAAW,EACpD,CACApnB,IAAAA,CAAK/S,EAAcm6B,GACfn+B,KAAKovD,kBAAkBprD,EAAcm6B,GAAW,EACpD,CACHivB,mBAAAA,CAAoBppD,GACb,MAAMiI,EAAOjM,KAAKmrD,UAAUnnD,GACxBiI,GAAQA,EAAKorB,YACbprB,EAAKorB,WAAW0D,kBAEb/6B,KAAKmrD,UAAUnnD,EAC1B,CACAqrD,KAAAA,GACI,IAAIn9D,EAAG2R,EAGP,IAFA7D,KAAK8yB,OACLG,GAASD,OAAOhzB,MACZ9N,EAAI,EAAG2R,EAAO7D,KAAK4Z,KAAKtG,SAAShV,OAAQpM,EAAI2R,IAAQ3R,EACrD8N,KAAKotD,oBAAoBl7D,EAEjC,CACAo9D,OAAAA,GACItvD,KAAKq9C,cAAc,iBACnB,MAAMpiC,OAAEA,EAAM9G,IAAGA,GAASnU,KAC1BA,KAAKqvD,QACLrvD,KAAK60B,OAAOk0B,aACR9tC,IACAjb,KAAKsuD,eACLtzC,GAAYC,EAAQ9G,GACpBnU,KAAKyT,SAAS2/B,eAAej/B,GAC7BnU,KAAKib,OAAS,KACdjb,KAAKmU,IAAM,aAERq2C,GAAUxqD,KAAKgC,IACtBhC,KAAKq9C,cAAc,eACvB,CACAkS,aAAAA,IAAiBnsD,GACb,OAAOpD,KAAKib,OAAOu0C,aAAapsD,EACpC,CACH8oD,UAAAA,GACOlsD,KAAKyvD,iBACDzvD,KAAK0E,QAAQsQ,WACbhV,KAAK0vD,uBAEL1vD,KAAK0rD,UAAW,CAExB,CACH+D,cAAAA,GACO,MAAMzkD,EAAYhL,KAAKqrD,WACjB53C,EAAWzT,KAAKyT,SAChBk8C,EAAOA,CAAC9vD,EAAMgL,KAChB4I,EAAS2Y,iBAAiBpsB,KAAMH,EAAMgL,GACtCG,EAAUnL,GAAQgL,GAEhBA,EAAWA,CAACha,EAAGsC,EAAGmS,KACpBzU,EAAEs5B,QAAUh3B,EACZtC,EAAEu5B,QAAU9kB,EACZtF,KAAKkuD,cAAcr9D,IAEvB0S,EAAKvD,KAAK0E,QAAQkP,OAAS/T,GAAO8vD,EAAK9vD,EAAMgL,GACjD,CACH6kD,oBAAAA,GACY1vD,KAAKsrD,uBACNtrD,KAAKsrD,qBAAuB,CAAA,GAEhC,MAAMtgD,EAAYhL,KAAKsrD,qBACjB73C,EAAWzT,KAAKyT,SAChBk8C,EAAOA,CAAC9vD,EAAMgL,KAChB4I,EAAS2Y,iBAAiBpsB,KAAMH,EAAMgL,GACtCG,EAAUnL,GAAQgL,GAEhB+kD,EAAUA,CAAC/vD,EAAMgL,KACfG,EAAUnL,KACV4T,EAAS4Y,oBAAoBrsB,KAAMH,EAAMgL,UAClCG,EAAUnL,KAGnBgL,EAAWA,CAAC6N,EAAO2C,KACjBrb,KAAKib,QACLjb,KAAK8W,OAAO4B,EAAO2C,IAG3B,IAAIw0C,EACJ,MAAMnE,EAAWA,KACbkE,EAAQ,SAAUlE,GAClB1rD,KAAK0rD,UAAW,EAChB1rD,KAAK8W,SACL64C,EAAK,SAAU9kD,GACf8kD,EAAK,SAAUE,IAEnBA,EAAWA,KACP7vD,KAAK0rD,UAAW,EAChBkE,EAAQ,SAAU/kD,GAClB7K,KAAKqvD,QACLrvD,KAAKosD,QAAQ,EAAG,GAChBuD,EAAK,SAAUjE,IAEfj4C,EAAS4/B,WAAWrzC,KAAKib,QACzBywC,IAEAmE,GAER,CACHvB,YAAAA,GACO/qD,EAAKvD,KAAKqrD,WAAY,CAACxgD,EAAUhL,KAC7BG,KAAKyT,SAAS4Y,oBAAoBrsB,KAAMH,EAAMgL,KAElD7K,KAAKqrD,WAAa,CAAA,EAClB9nD,EAAKvD,KAAKsrD,qBAAsB,CAACzgD,EAAUhL,KACvCG,KAAKyT,SAAS4Y,oBAAoBrsB,KAAMH,EAAMgL,KAElD7K,KAAKsrD,0BAAuB95D,CAChC,CACAs+D,gBAAAA,CAAiB1kD,EAAOoJ,EAAMyjC,GAC1B,MAAMz1B,EAASy1B,EAAU,MAAQ,SACjC,IAAIhsC,EAAM5F,EAAMnU,EAAG2R,EAKnB,IAJa,YAAT2Q,IACAvI,EAAOjM,KAAK26B,eAAevvB,EAAM,GAAGpH,cACpCiI,EAAKorB,WAAW,IAAM7U,EAAS,wBAE/BtwB,EAAI,EAAG2R,EAAOuH,EAAM9M,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC1CmU,EAAO+E,EAAMlZ,GACb,MAAMmlC,EAAahxB,GAAQrG,KAAK26B,eAAet0B,EAAKrC,cAAcqzB,WAC9DA,GACAA,EAAW7U,EAAS,cAAcnc,EAAK6iB,QAAS7iB,EAAKrC,aAAcqC,EAAKpC,MAEhF,CACJ,CACH8rD,iBAAAA,GACO,OAAO/vD,KAAKgyB,SAAW,EAC3B,CACHg+B,iBAAAA,CAAkBC,GACX,MAAMC,EAAalwD,KAAKgyB,SAAW,GAC7Bnb,EAASo5C,EAAez9D,IAAI,EAAGwR,eAAeC,YAChD,MAAMgI,EAAOjM,KAAK26B,eAAe32B,GACjC,IAAKiI,EACD,MAAM,IAAI8X,MAAM,6BAA+B/f,GAEnD,MAAO,CACHA,eACAklB,QAASjd,EAAK2N,KAAK3V,GACnBA,YAGSP,EAAemT,EAAQq5C,KAEpClwD,KAAKgyB,QAAUnb,EACf7W,KAAKorD,WAAa,KAClBprD,KAAKmuD,mBAAmBt3C,EAAQq5C,GAExC,CACH7S,aAAAA,CAAc0I,EAAM3iD,EAAMkhB,GACnB,YAAYknC,SAAS1F,OAAO9lD,KAAM+lD,EAAM3iD,EAAMkhB,EAClD,CACHqV,eAAAA,CAAgBw2B,GACT,OAA6E,IAAtEnwD,KAAKwrD,SAASvqB,OAAO3c,OAAQzjB,GAAIA,EAAEqlD,OAAOlkD,KAAOmuD,GAAU7xD,MACtE,CACH6vD,kBAAAA,CAAmBt3C,EAAQq5C,EAAYE,GAChC,MAAMC,EAAerwD,KAAK0E,QAAQuP,MAC5Bg5B,EAAOA,CAACx8C,EAAGC,IAAID,EAAE6zB,OAAQnxB,IAAKzC,EAAEm2D,KAAMvhD,GAAInS,EAAE6Q,eAAiBsB,EAAEtB,cAAgB7Q,EAAE8Q,QAAUqB,EAAErB,QAC7FqsD,EAAcrjB,EAAKijB,EAAYr5C,GAC/B05C,EAAYH,EAASv5C,EAASo2B,EAAKp2B,EAAQq5C,GAC7CI,EAAYhyD,QACZ0B,KAAK8vD,iBAAiBQ,EAAaD,EAAa77C,MAAM,GAEtD+7C,EAAUjyD,QAAU+xD,EAAa77C,MACjCxU,KAAK8vD,iBAAiBS,EAAWF,EAAa77C,MAAM,EAE5D,CACH05C,aAAAA,CAAcr9D,EAAGu/D,GACV,MAAMhtD,EAAO,CACTwmB,MAAO/4B,EACPu/D,SACAjK,YAAY,EACZqK,YAAaxwD,KAAKiuC,cAAcp9C,IAE9B4/D,EAAevK,IAAUA,EAAOxhD,QAAQkP,QAAU5T,KAAK0E,QAAQkP,QAAQrB,SAAS1hB,EAAEmlD,OAAOn2C,MAC/F,IAA6D,IAAzDG,KAAKq9C,cAAc,cAAej6C,EAAMqtD,GACxC,OAEJ,MAAM3iD,EAAU9N,KAAK0wD,aAAa7/D,EAAGu/D,EAAQhtD,EAAKotD,aAMlD,OALAptD,EAAK+iD,YAAa,EAClBnmD,KAAKq9C,cAAc,aAAcj6C,EAAMqtD,IACnC3iD,GAAW1K,EAAK0K,UAChB9N,KAAKwsD,SAEFxsD,IACX,CACH0wD,YAAAA,CAAa7/D,EAAGu/D,EAAQI,GACjB,MAAQx+B,QAASk+B,EAAa,GAAExrD,QAAGA,GAAa1E,KAC1CguC,EAAmBoiB,EACnBv5C,EAAS7W,KAAK2wD,mBAAmB9/D,EAAGq/D,EAAYM,EAAaxiB,GAC7D4iB,EDj/LV,SAAuB//D,GACvB,MAAkB,YAAXA,EAAEgP,MAAiC,UAAXhP,EAAEgP,MAA+B,gBAAXhP,EAAEgP,IAC3D,CC++LwBgxD,CAAchgE,GACxBigE,EA1xBb,SAA4BjgE,EAAGigE,EAAWN,EAAaI,GACpD,OAAKJ,GAA0B,aAAX3/D,EAAEgP,KAGlB+wD,EACOE,EAEJjgE,EALI,IAMf,CAkxB0BkgE,CAAmBlgE,EAAGmP,KAAKorD,WAAYoF,EAAaI,GAClEJ,IACAxwD,KAAKorD,WAAa,KAClBloD,EAASwB,EAAQkQ,QAAS,CACtB/jB,EACAgmB,EACA7W,MACDA,MACC4wD,GACA1tD,EAASwB,EAAQmQ,QAAS,CACtBhkB,EACAgmB,EACA7W,MACDA,OAGX,MAAM8N,GAAWpK,EAAemT,EAAQq5C,GAMxC,OALIpiD,GAAWsiD,KACXpwD,KAAKgyB,QAAUnb,EACf7W,KAAKmuD,mBAAmBt3C,EAAQq5C,EAAYE,IAEhDpwD,KAAKorD,WAAa0F,EACXhjD,CACX,CACH6iD,kBAAAA,CAAmB9/D,EAAGq/D,EAAYM,EAAaxiB,GACxC,GAAe,aAAXn9C,EAAEgP,KACF,MAAO,GAEX,IAAK2wD,EACD,OAAON,EAEX,MAAMG,EAAerwD,KAAK0E,QAAQuP,MAClC,OAAOjU,KAAKkvD,0BAA0Br+D,EAAGw/D,EAAa77C,KAAM67C,EAAcriB,EAC9E,EAEJ,SAAS6c,KACL,OAAOtnD,EAAKqnD,GAAMJ,UAAY74C,GAAQA,EAAM65C,SAASpF,aACzD,CAwDI,SAAS4K,GAAoB30C,EAAKorB,EAAaC,EAAaupB,GAC5D,MAAM5rD,EAVCgb,GAUmBhE,EAAI3X,QAAQwsD,aAVN,CAC5B,aACA,WACA,aACA,aAOEC,GAAiBzpB,EAAcD,GAAe,EAC9C2pB,EAAazhE,KAAKE,IAAIshE,EAAeF,EAAaxpB,EAAc,GAQhE4pB,EAAqBhwD,IACvB,MAAMiwD,GAAiB5pB,EAAc/3C,KAAKE,IAAIshE,EAAe9vD,IAAQ4vD,EAAa,EAClF,OAAOlnD,GAAY1I,EAAK,EAAG1R,KAAKE,IAAIshE,EAAeG,KAEvD,MAAO,CACHC,WAAYF,EAAkBhsD,EAAEksD,YAChCC,SAAUH,EAAkBhsD,EAAEmsD,UAC9BC,WAAY1nD,GAAY1E,EAAEosD,WAAY,EAAGL,GACzCM,SAAU3nD,GAAY1E,EAAEqsD,SAAU,EAAGN,GAE7C,CAGI,SAASO,GAAWvgE,EAAGwgE,EAAOz+D,EAAGmS,GACjC,MAAO,CACHnS,EAAGA,EAAI/B,EAAIzB,KAAKuf,IAAI0iD,GACpBtsD,EAAGA,EAAIlU,EAAIzB,KAAKse,IAAI2jD,GAE5B,CAcI,SAASC,GAAQ19C,EAAK+U,EAASxR,EAAQyvB,EAAS19B,EAAK0hC,GACrD,MAAMh4C,EAAEA,EAACmS,EAAGA,EAAImjC,WAAYj/B,EAAKsoD,YAAGA,EAAcrqB,YAAasqB,GAAY7oC,EACrEwe,EAAc/3C,KAAKC,IAAIs5B,EAAQwe,YAAcP,EAAUzvB,EAASo6C,EAAa,GAC7ErqB,EAAcsqB,EAAS,EAAIA,EAAS5qB,EAAUzvB,EAASo6C,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAMzgE,EAAQkY,EAAMD,EACpB,GAAI29B,EAAS,CAIT,MAEM8qB,IAFuBF,EAAS,EAAIA,EAAS5qB,EAAU,IAChCO,EAAc,EAAIA,EAAcP,EAAU,IACI,EAE3E6qB,GAAiBzgE,GAD4B,IAAvB0gE,EAA2B1gE,EAAQ0gE,GAAsBA,EAAqB9qB,GAAW51C,IACrE,CAC9C,CACA,MACM2gE,GAAe3gE,EADR5B,KAAKC,IAAI,KAAO2B,EAAQm2C,EAAchwB,EAASnR,IAAMmhC,GAC7B,EAC/Be,EAAaj/B,EAAQ0oD,EAAcF,EACnCtpB,EAAWj/B,EAAMyoD,EAAcF,GAC/BT,WAAEA,EAAUC,SAAGA,EAAQC,WAAGA,EAAUC,SAAGA,GAAcV,GAAoB9nC,EAASue,EAAaC,EAAagB,EAAWD,GACvH0pB,EAA2BzqB,EAAc6pB,EACzCa,EAAyB1qB,EAAc8pB,EACvCa,EAA0B5pB,EAAa8oB,EAAaY,EACpDG,EAAwB5pB,EAAW8oB,EAAWY,EAC9CG,EAA2B9qB,EAAcgqB,EACzCe,EAAyB/qB,EAAciqB,EACvCe,EAA0BhqB,EAAagpB,EAAac,EACpDG,EAAwBhqB,EAAWgpB,EAAWc,EAEpD,GADAr+C,EAAIgI,YACAgvB,EAAU,CAEV,MAAMwnB,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHAn+C,EAAIkI,IAAIlpB,EAAGmS,EAAGoiC,EAAa2qB,EAAyBM,GACpDx+C,EAAIkI,IAAIlpB,EAAGmS,EAAGoiC,EAAairB,EAAuBL,GAE9Cd,EAAW,EAAG,CACd,MAAMoB,EAAUjB,GAAWS,EAAwBE,EAAuBn/D,EAAGmS,GAC7E6O,EAAIkI,IAAIu2C,EAAQz/D,EAAGy/D,EAAQttD,EAAGksD,EAAUc,EAAuB5pB,EAAW7hC,GAC9E,CAEA,MAAMgsD,EAAKlB,GAAWa,EAAwB9pB,EAAUv1C,EAAGmS,GAG3D,GAFA6O,EAAIqI,OAAOq2C,EAAG1/D,EAAG0/D,EAAGvtD,GAEhBosD,EAAW,EAAG,CACd,MAAMkB,EAAUjB,GAAWa,EAAwBE,EAAuBv/D,EAAGmS,GAC7E6O,EAAIkI,IAAIu2C,EAAQz/D,EAAGy/D,EAAQttD,EAAGosD,EAAUhpB,EAAW7hC,GAAS6rD,EAAwB/iE,KAAK4W,GAC7F,CAEA,MAAMusD,GAAyBpqB,EAAWgpB,EAAWjqB,GAAegB,EAAagpB,EAAahqB,IAAgB,EAI9G,GAHAtzB,EAAIkI,IAAIlpB,EAAGmS,EAAGmiC,EAAaiB,EAAWgpB,EAAWjqB,EAAaqrB,GAAuB,GACrF3+C,EAAIkI,IAAIlpB,EAAGmS,EAAGmiC,EAAaqrB,EAAuBrqB,EAAagpB,EAAahqB,GAAa,GAErFgqB,EAAa,EAAG,CAChB,MAAMmB,EAAUjB,GAAWY,EAA0BE,EAAyBt/D,EAAGmS,GACjF6O,EAAIkI,IAAIu2C,EAAQz/D,EAAGy/D,EAAQttD,EAAGmsD,EAAYgB,EAA0B9iE,KAAK4W,GAAIkiC,EAAa5hC,GAC9F,CAEA,MAAMksD,EAAKpB,GAAWQ,EAA0B1pB,EAAYt1C,EAAGmS,GAG/D,GAFA6O,EAAIqI,OAAOu2C,EAAG5/D,EAAG4/D,EAAGztD,GAEhBisD,EAAa,EAAG,CAChB,MAAMqB,EAAUjB,GAAWQ,EAA0BE,EAAyBl/D,EAAGmS,GACjF6O,EAAIkI,IAAIu2C,EAAQz/D,EAAGy/D,EAAQttD,EAAGisD,EAAY9oB,EAAa5hC,GAASwrD,EACpE,CACJ,KAAO,CACHl+C,EAAIoI,OAAOppB,EAAGmS,GACd,MAAM0tD,EAAcrjE,KAAKuf,IAAImjD,GAA2B3qB,EAAcv0C,EAChE8/D,EAActjE,KAAKse,IAAIokD,GAA2B3qB,EAAcpiC,EACtE6O,EAAIqI,OAAOw2C,EAAaC,GACxB,MAAMC,EAAYvjE,KAAKuf,IAAIojD,GAAyB5qB,EAAcv0C,EAC5DggE,EAAYxjE,KAAKse,IAAIqkD,GAAyB5qB,EAAcpiC,EAClE6O,EAAIqI,OAAO02C,EAAWC,EAC1B,CACAh/C,EAAImI,WACR,CAiBA,SAASomC,GAAWvuC,EAAK+U,EAASxR,EAAQyvB,EAASgE,GAC/C,MAAMioB,YAAEA,EAAW3qB,WAAGA,EAAUvB,cAAGA,EAAaxiC,QAAGA,GAAawkB,GAC1DtM,YAAEA,EAAWwT,gBAAGA,EAAeF,WAAGA,EAAUC,iBAAGA,EAAgB+gC,aAAGA,GAAkBxsD,EACpF2uD,EAAgC,UAAxB3uD,EAAQwlC,YACtB,IAAKttB,EACD,OAEJzI,EAAIquC,YAAYtyB,GAAc,IAC9B/b,EAAIsuC,eAAiBtyB,EACjBkjC,GACAl/C,EAAI6D,UAA0B,EAAd4E,EAChBzI,EAAIm/C,SAAWljC,GAAmB,UAElCjc,EAAI6D,UAAY4E,EAChBzI,EAAIm/C,SAAWljC,GAAmB,SAEtC,IAAIsY,EAAWxf,EAAQwf,SACvB,GAAI0qB,EAAa,CACbvB,GAAQ19C,EAAK+U,EAASxR,EAAQyvB,EAASuB,EAAUyC,GACjD,IAAI,IAAIj5C,EAAI,EAAGA,EAAIkhE,IAAelhE,EAC9BiiB,EAAI0I,SAEH9U,MAAMm/B,KACPwB,EAAWD,GAAcvB,EAAgB1gC,IAAOA,IAExD,CACI6sD,GA3LR,SAAiBl/C,EAAK+U,EAASwf,GAC3B,MAAMD,WAAEA,EAAUqpB,YAAGA,EAAW3+D,EAAGA,EAACmS,EAAGA,EAACoiC,YAAGA,EAAWD,YAAGA,GAAiBve,EAC1E,IAAIqqC,EAAczB,EAAcpqB,EAGhCvzB,EAAIgI,YACJhI,EAAIkI,IAAIlpB,EAAGmS,EAAGoiC,EAAae,EAAa8qB,EAAa7qB,EAAW6qB,GAC5D9rB,EAAcqqB,GACdyB,EAAczB,EAAcrqB,EAC5BtzB,EAAIkI,IAAIlpB,EAAGmS,EAAGmiC,EAAaiB,EAAW6qB,EAAa9qB,EAAa8qB,GAAa,IAE7Ep/C,EAAIkI,IAAIlpB,EAAGmS,EAAGwsD,EAAappB,EAAW7hC,GAAS4hC,EAAa5hC,IAEhEsN,EAAImI,YACJnI,EAAI0D,MACR,CA6KQ27C,CAAQr/C,EAAK+U,EAASwf,GAEtBhkC,EAAQ+uD,UAAY/qB,EAAWD,GAAcliC,IAAuB,IAAjB2qD,GAA0C,UAApB9gC,GA1NjF,SAAkBjc,EAAK+U,EAASwf,GAC5B,MAAMD,WAAEA,EAAUt1C,EAAGA,EAACmS,EAAGA,EAACoiC,YAAGA,EAAWD,YAAGA,EAAW/iC,QAAGA,GAAawkB,GAChEtM,YAAEA,EAAWwT,gBAAGA,GAAqB1rB,EACrCgvD,EAAiB/jE,KAAKE,IAAI+sB,EAAc8qB,EAAap+B,GAAgBm/B,EAAaC,IAGxF,GAFAv0B,EAAIgI,YACJhI,EAAIkI,IAAIlpB,EAAGmS,EAAGoiC,EAAc9qB,EAAc,EAAG6rB,EAAairB,EAAiB,EAAGhrB,EAAWgrB,EAAiB,GACtGjsB,EAAc,EAAG,CACjB,MAAMksB,EAAiBhkE,KAAKE,IAAI+sB,EAAc6qB,EAAan+B,GAAgBm/B,EAAaC,IACxFv0B,EAAIkI,IAAIlpB,EAAGmS,EAAGmiC,EAAc7qB,EAAc,EAAG8rB,EAAWirB,EAAiB,EAAGlrB,EAAakrB,EAAiB,GAAG,EACjH,KAAO,CACH,MAAMC,EAAYjkE,KAAKE,IAAI+sB,EAAc,EAAG8qB,EAAcp+B,GAAgBm/B,EAAaC,IACvF,GAAwB,UAApBtY,EACAjc,EAAIkI,IAAIlpB,EAAGmS,EAAGsuD,EAAWlrB,EAAWniC,GAAK,EAAGkiC,EAAaliC,GAAK,GAAG,QAC9D,GAAwB,UAApB6pB,EAA6B,CACpC,MAAMh/B,EAAI,EAAIwiE,EAAYA,EACpB/qB,GAAQz3C,EAAIzB,KAAKuf,IAAIw5B,EAAWniC,GAAK,GAAKpT,EAC1C21C,GAAQ13C,EAAIzB,KAAKse,IAAIy6B,EAAWniC,GAAK,GAAKjB,EAC1CqjC,EAASv3C,EAAIzB,KAAKuf,IAAIu5B,EAAaliC,GAAK,GAAKpT,EAC7Cy1C,EAASx3C,EAAIzB,KAAKse,IAAIw6B,EAAaliC,GAAK,GAAKjB,EACnD6O,EAAIqI,OAAOqsB,EAAMC,GACjB30B,EAAIqI,OAAOmsB,EAAQC,EACvB,CACJ,CACAz0B,EAAImI,YACJnI,EAAIoI,OAAO,EAAG,GACdpI,EAAIuI,KAAK,EAAG,EAAGvI,EAAI8G,OAAOvC,MAAOvE,EAAI8G,OAAOI,QAC5ClH,EAAI0D,KAAK,UACb,CAgMQg8C,CAAS1/C,EAAK+U,EAASwf,GAEtB0qB,IACDvB,GAAQ19C,EAAK+U,EAASxR,EAAQyvB,EAASuB,EAAUyC,GACjDh3B,EAAI0I,SAEZ,CAtOApK,EAAA,QAAAm4C,IAuOA,MAAMkJ,WAAmB3c,GACrB3e,UAAY,MACZA,gBAAkB,CACd0R,YAAa,SACb72B,YAAa,OACb6c,WAAY,GACZC,iBAAkB,EAClBC,qBAAiB5+B,EACjB0/D,aAAc,EACdt0C,YAAa,EACblF,OAAQ,EACRyvB,QAAS,EACTp+B,WAAOvX,EACP25C,UAAU,EACVsoB,UAAU,GAEdj7B,qBAAuB,CACnBplB,gBAAiB,mBAErBolB,mBAAqB,CACjBpiB,aAAa,EACbE,WAAad,GAAgB,eAATA,GAExB0xB,cACAwB,SACA0qB,YACA3rB,YACAC,YACAoqB,YACArpB,WACA7oC,WAAAA,CAAY4zB,GACRgQ,QACAxjC,KAAK0E,aAAUlT,EACfwO,KAAKknC,mBAAgB11C,EACrBwO,KAAKyoC,gBAAaj3C,EAClBwO,KAAK0oC,cAAWl3C,EAChBwO,KAAKynC,iBAAcj2C,EACnBwO,KAAK0nC,iBAAcl2C,EACnBwO,KAAK8xD,YAAc,EACnB9xD,KAAKozD,YAAc,EACf5/B,GACAv1B,OAAOoB,OAAOW,KAAMwzB,EAE5B,CACA0a,OAAAA,CAAQ6lB,EAAQC,EAAQhmB,GACpB,MAAM7gC,EAAQnN,KAAK6uC,SAAS,CACxB,IACA,KACDb,IACGjlC,MAAEA,EAAKE,SAAGA,GAAcT,GAAkB2E,EAAO,CACnDha,EAAG4gE,EACHzuD,EAAG0uD,KAEDvrB,WAAEA,EAAUC,SAAGA,EAAQjB,YAAGA,EAAWC,YAAGA,EAAWR,cAAGA,GAAmBlnC,KAAK6uC,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDb,GACGimB,GAAWj0D,KAAK0E,QAAQyiC,QAAUnnC,KAAK0E,QAAQkY,aAAe,EAC9DgtB,EAAiB/mC,EAAeqkC,EAAewB,EAAWD,GAC1DyrB,EAAiB3qD,GAAcR,EAAO0/B,EAAYC,IAAaD,IAAeC,EAC9EyrB,EAAgBvqB,GAAkBpjC,IAAO0tD,EACzCE,EAAepqD,GAAWf,EAAUw+B,EAAcwsB,EAASvsB,EAAcusB,GAC/E,OAAOE,GAAiBC,CAC5B,CACAzlB,cAAAA,CAAeX,GACX,MAAM76C,EAAEA,EAACmS,EAAGA,EAACmjC,WAAGA,EAAUC,SAAGA,EAAQjB,YAAGA,EAAWC,YAAGA,GAAiB1nC,KAAK6uC,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDb,IACGt2B,OAAEA,EAAMyvB,QAAGA,GAAannC,KAAK0E,QAC7B2vD,GAAa5rB,EAAaC,GAAY,EACtC4rB,GAAc7sB,EAAcC,EAAcP,EAAUzvB,GAAU,EACpE,MAAO,CACHvkB,EAAGA,EAAIxD,KAAKuf,IAAImlD,GAAaC,EAC7BhvD,EAAGA,EAAI3V,KAAKse,IAAIomD,GAAaC,EAErC,CACAld,eAAAA,CAAgBpJ,GACZ,OAAOhuC,KAAK2uC,eAAeX,EAC/B,CACAjc,IAAAA,CAAK5d,GACD,MAAMzP,QAAEA,EAAOwiC,cAAGA,GAAmBlnC,KAC/B0X,GAAUhT,EAAQgT,QAAU,GAAK,EACjCyvB,GAAWziC,EAAQyiC,SAAW,GAAK,EACnCgE,EAAWzmC,EAAQymC,SAGzB,GAFAnrC,KAAK8xD,YAAsC,UAAxBptD,EAAQwlC,YAA0B,IAAO,EAC5DlqC,KAAKozD,YAAclsB,EAAgB1gC,GAAM7W,KAAK8X,MAAMy/B,EAAgB1gC,IAAO,EACrD,IAAlB0gC,GAAuBlnC,KAAKynC,YAAc,GAAKznC,KAAK0nC,YAAc,EAClE,OAEJvzB,EAAImG,OACJ,MAAM+5C,GAAar0D,KAAKyoC,WAAazoC,KAAK0oC,UAAY,EACtDv0B,EAAI8H,UAAUtsB,KAAKuf,IAAImlD,GAAa38C,EAAQ/nB,KAAKse,IAAIomD,GAAa38C,GAClE,MACM68C,EAAe78C,GADT,EAAI/nB,KAAKse,IAAIte,KAAKE,IAAI0W,GAAI2gC,GAAiB,KAEvD/yB,EAAIsK,UAAY/Z,EAAQ0O,gBACxBe,EAAIqK,YAAc9Z,EAAQ2O,YA5JlC,SAAiBc,EAAK+U,EAASxR,EAAQyvB,EAASgE,GAC5C,MAAMioB,YAAEA,EAAW3qB,WAAGA,EAAUvB,cAAGA,GAAmBhe,EACtD,IAAIwf,EAAWxf,EAAQwf,SACvB,GAAI0qB,EAAa,CACbvB,GAAQ19C,EAAK+U,EAASxR,EAAQyvB,EAASuB,EAAUyC,GACjD,IAAI,IAAIj5C,EAAI,EAAGA,EAAIkhE,IAAelhE,EAC9BiiB,EAAIwI,OAEH5U,MAAMm/B,KACPwB,EAAWD,GAAcvB,EAAgB1gC,IAAOA,IAExD,CACAqrD,GAAQ19C,EAAK+U,EAASxR,EAAQyvB,EAASuB,EAAUyC,GACjDh3B,EAAIwI,MAER,CA8IQ63C,CAAQrgD,EAAKnU,KAAMu0D,EAAcptB,EAASgE,GAC1CuX,GAAWvuC,EAAKnU,KAAMu0D,EAAcptB,EAASgE,GAC7Ch3B,EAAIuG,SACR,EAGJ,SAAS+5C,GAAStgD,EAAKzP,EAASqP,EAAQrP,GACpCyP,EAAIugD,QAAU7xD,EAAekR,EAAMkc,eAAgBvrB,EAAQurB,gBAC3D9b,EAAIquC,YAAY3/C,EAAekR,EAAMmc,WAAYxrB,EAAQwrB,aACzD/b,EAAIsuC,eAAiB5/C,EAAekR,EAAMoc,iBAAkBzrB,EAAQyrB,kBACpEhc,EAAIm/C,SAAWzwD,EAAekR,EAAMqc,gBAAiB1rB,EAAQ0rB,iBAC7Djc,EAAI6D,UAAYnV,EAAekR,EAAM6I,YAAalY,EAAQkY,aAC1DzI,EAAIqK,YAAc3b,EAAekR,EAAMV,YAAa3O,EAAQ2O,YAChE,CACA,SAASmJ,GAAOrI,EAAKiJ,EAAUjZ,GAC3BgQ,EAAIqI,OAAOrY,EAAOhR,EAAGgR,EAAOmB,EAChC,CAUA,SAASqvD,GAASzoD,EAAQmiB,EAASshB,EAAS,CAAA,GACxC,MAAMtjC,EAAQH,EAAO5N,QACbkL,MAAOorD,EAAc,EAAInrD,IAAKorD,EAAYxoD,EAAQ,GAAOsjC,GACzDnmC,MAAOsrD,EAAerrD,IAAKsrD,GAAgB1mC,EAC7C7kB,EAAQ7Z,KAAKC,IAAIglE,EAAaE,GAC9BrrD,EAAM9Z,KAAKE,IAAIglE,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACH1oD,QACA7C,QACAmN,KAAM0X,EAAQ1X,KACd9S,KAAM4F,EAAMD,IAAUwrD,EAAU3oD,EAAQ5C,EAAMD,EAAQC,EAAMD,EAEpE,CACC,SAASyrD,GAAY9gD,EAAK2J,EAAMuQ,EAASshB,GACtC,MAAMzjC,OAAEA,EAAMxH,QAAGA,GAAaoZ,GACxBzR,MAAEA,EAAK7C,MAAGA,EAAKmN,KAAGA,EAAI9S,KAAGA,GAAU8wD,GAASzoD,EAAQmiB,EAASshB,GAC7DulB,EA1BT,SAAuBxwD,GACpB,OAAIA,EAAQywD,QACDh4C,GAEPzY,EAAQwjB,SAA8C,aAAnCxjB,EAAQsjB,uBACpBzK,GAEJf,EACX,CAkBuB44C,CAAc1wD,GACjC,IACIxS,EAAGib,EAAO8a,GADVmY,KAAEA,GAAM,EAAI38B,QAAGA,GAAaksC,GAAU,CAAA,EAE1C,IAAIz9C,EAAI,EAAGA,GAAK2R,IAAQ3R,EACpBib,EAAQjB,GAAQ1C,GAAS/F,EAAUI,EAAO3R,EAAIA,IAAMma,GAChDc,EAAM2Y,OAECsa,GACPjsB,EAAIoI,OAAOpP,EAAMha,EAAGga,EAAM7H,GAC1B86B,GAAO,GAEP80B,EAAW/gD,EAAK8T,EAAM9a,EAAO1J,EAASiB,EAAQywD,SAElDltC,EAAO9a,GAMX,OAJIwJ,IACAxJ,EAAQjB,GAAQ1C,GAAS/F,EAAUI,EAAO,IAAMwI,GAChD6oD,EAAW/gD,EAAK8T,EAAM9a,EAAO1J,EAASiB,EAAQywD,YAEzCx+C,CACb,CACC,SAAS0+C,GAAgBlhD,EAAK2J,EAAMuQ,EAASshB,GAC1C,MAAMzjC,EAAS4R,EAAK5R,QACdG,MAAEA,EAAK7C,MAAGA,EAAK3F,KAAGA,GAAU8wD,GAASzoD,EAAQmiB,EAASshB,IACtDvP,KAAEA,GAAM,EAAI38B,QAAGA,GAAaksC,GAAU,CAAA,EAC5C,IAEIz9C,EAAGib,EAAOmoD,EAAOlsB,EAAMF,EAAMqsB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAczxD,IAASuF,GAAS/F,EAAUI,EAAOI,EAAQA,IAAUoI,EACnEspD,EAAQA,KACNvsB,IAASF,IACT/0B,EAAIqI,OAAOg5C,EAAMtsB,GACjB/0B,EAAIqI,OAAOg5C,EAAMpsB,GACjBj1B,EAAIqI,OAAOg5C,EAAMD,KAOzB,IAJIn1B,IACAjzB,EAAQjB,EAAOwpD,EAAW,IAC1BvhD,EAAIoI,OAAOpP,EAAMha,EAAGga,EAAM7H,IAE1BpT,EAAI,EAAGA,GAAK2R,IAAQ3R,EAAE,CAEtB,GADAib,EAAQjB,EAAOwpD,EAAWxjE,IACtBib,EAAM2Y,KACN,SAEJ,MAAM3yB,EAAIga,EAAMha,EACVmS,EAAI6H,EAAM7H,EACVswD,EAAa,EAAJziE,EACXyiE,IAAWN,GACPhwD,EAAI8jC,EACJA,EAAO9jC,EACAA,EAAI4jC,IACXA,EAAO5jC,GAEXkwD,GAAQC,EAASD,EAAOriE,KAAOsiE,IAE/BE,IACAxhD,EAAIqI,OAAOrpB,EAAGmS,GACdgwD,EAAQM,EACRH,EAAS,EACTrsB,EAAOF,EAAO5jC,GAElBiwD,EAAQjwD,CACZ,CACAqwD,GACJ,CACC,SAASE,GAAkB/3C,GACxB,MAAMC,EAAOD,EAAKpZ,QACZwrB,EAAanS,EAAKmS,YAAcnS,EAAKmS,WAAW5xB,OAEtD,OADqBwf,EAAK0sB,YAAe1sB,EAAK+V,OAAU9V,EAAKmK,SAA2C,aAAhCnK,EAAKiK,wBAA0CjK,EAAKo3C,SAAYjlC,EACjG+kC,GAAlBI,EACzB,CA9GA5iD,EAAA,aAAAqhD,IAkJA,MAAMgC,GAA8B,mBAAXC,OACzB,SAAShkC,GAAK5d,EAAK2J,EAAMtU,EAAO6C,GACxBypD,KAAch4C,EAAKpZ,QAAQ2pB,QA5BnC,SAA6Bla,EAAK2J,EAAMtU,EAAO6C,GAC3C,IAAI2pD,EAAOl4C,EAAKm4C,MACXD,IACDA,EAAOl4C,EAAKm4C,MAAQ,IAAIF,OACpBj4C,EAAKk4C,KAAKA,EAAMxsD,EAAO6C,IACvB2pD,EAAK15C,aAGbm4C,GAAStgD,EAAK2J,EAAKpZ,SACnByP,EAAI0I,OAAOm5C,EACf,CAmBQE,CAAoB/hD,EAAK2J,EAAMtU,EAAO6C,GAlB9C,SAA0B8H,EAAK2J,EAAMtU,EAAO6C,GACxC,MAAM0iB,SAAEA,EAAQrqB,QAAGA,GAAaoZ,EAC1Bq4C,EAAgBN,GAAkB/3C,GACxC,IAAK,MAAMuQ,KAAWU,EAClB0lC,GAAStgD,EAAKzP,EAAS2pB,EAAQta,OAC/BI,EAAIgI,YACAg6C,EAAchiD,EAAK2J,EAAMuQ,EAAS,CAClC7kB,QACAC,IAAKD,EAAQ6C,EAAQ,KAErB8H,EAAImI,YAERnI,EAAI0I,QAEZ,CAMQu5C,CAAiBjiD,EAAK2J,EAAMtU,EAAO6C,EAE3C,CACA,MAAMgqD,WAAoBlf,GACtB3e,UAAY,OACfA,gBAAkB,CACXvI,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBxT,YAAa,EACbuL,iBAAiB,EACjBH,uBAAwB,UACxBrL,MAAM,EACNjQ,UAAU,EACVyoD,SAAS,EACTjtC,QAAS,GAEhBsQ,qBAAuB,CAChBplB,gBAAiB,kBACjBC,YAAa,eAEjBmlB,mBAAqB,CACjBpiB,aAAa,EACbE,WAAad,GAAgB,eAATA,GAAkC,SAATA,GAEjD5V,WAAAA,CAAY4zB,GACRgQ,QACAxjC,KAAKyqC,UAAW,EAChBzqC,KAAK0E,aAAUlT,EACfwO,KAAKovB,YAAS59B,EACdwO,KAAK6zB,WAAQriC,EACbwO,KAAKosC,eAAY56C,EACjBwO,KAAKi2D,WAAQzkE,EACbwO,KAAKs2D,aAAU9kE,EACfwO,KAAKu2D,eAAY/kE,EACjBwO,KAAKwqC,YAAa,EAClBxqC,KAAKw2D,gBAAiB,EACtBx2D,KAAKuvB,mBAAgB/9B,EACjBgiC,GACAv1B,OAAOoB,OAAOW,KAAMwzB,EAE5B,CACAwX,mBAAAA,CAAoBza,EAAWjc,GAC3B,MAAM5P,EAAU1E,KAAK0E,QACrB,IAAKA,EAAQwjB,SAA8C,aAAnCxjB,EAAQsjB,0BAA2CtjB,EAAQywD,UAAYn1D,KAAKw2D,eAAgB,CAChH,MAAM7/C,EAAOjS,EAAQgI,SAAW1M,KAAK6zB,MAAQ7zB,KAAKosC,UAClDtkB,GAA2B9nB,KAAKs2D,QAAS5xD,EAAS6rB,EAAW5Z,EAAMrC,GACnEtU,KAAKw2D,gBAAiB,CAC1B,CACJ,CACA,UAAItqD,CAAOA,GACPlM,KAAKs2D,QAAUpqD,cACHqqD,iBACLv2D,KAAKi2D,MACZj2D,KAAKw2D,gBAAiB,CAC1B,CACA,UAAItqD,GACA,OAAOlM,KAAKs2D,OAChB,CACA,YAAIvnC,GACA,OAAO/uB,KAAKu2D,YAAcv2D,KAAKu2D,UD9vItC,SAA0Bz4C,EAAMoR,GAC7B,MAAMhjB,EAAS4R,EAAK5R,OACdQ,EAAWoR,EAAKpZ,QAAQgI,SACxBL,EAAQH,EAAO5N,OACrB,IAAK+N,EACD,MAAO,GAEX,MAAMsK,IAASmH,EAAK+V,OACdrqB,MAAEA,EAAKC,IAAGA,GAnEnB,SAAyByC,EAAQG,EAAOsK,EAAMjK,GAC3C,IAAIlD,EAAQ,EACRC,EAAM4C,EAAQ,EAClB,GAAIsK,IAASjK,EACT,KAAMlD,EAAQ6C,IAAUH,EAAO1C,GAAOsc,MAClCtc,IAGR,KAAMA,EAAQ6C,GAASH,EAAO1C,GAAOsc,MACjCtc,IAMJ,IAJAA,GAAS6C,EACLsK,IACAlN,GAAOD,GAELC,EAAMD,GAAS0C,EAAOzC,EAAM4C,GAAOyZ,MACrCrc,IAGJ,OADAA,GAAO4C,EACA,CACH7C,QACAC,MAER,CA4C6BgtD,CAAgBvqD,EAAQG,EAAOsK,EAAMjK,GAC9D,OACWuiB,GAAcnR,GADR,IAAbpR,EAC2B,CACvB,CACIlD,QACAC,MACAkN,SAjDf,SAAuBzK,EAAQ1C,EAAO5Z,EAAK+mB,GACxC,MAAMtK,EAAQH,EAAO5N,OACfmrB,EAAS,GACf,IAEIhgB,EAFAe,EAAOhB,EACPye,EAAO/b,EAAO1C,GAElB,IAAIC,EAAMD,EAAQ,EAAGC,GAAO7Z,IAAO6Z,EAAI,CACnC,MAAMmpB,EAAM1mB,EAAOzC,EAAM4C,GACrBumB,EAAI9M,MAAQ8M,EAAIE,KACX7K,EAAKnC,OACNnP,GAAO,EACP8S,EAAO7jB,KAAK,CACR4D,MAAOA,EAAQ6C,EACf5C,KAAMA,EAAM,GAAK4C,EACjBsK,SAEJnN,EAAQgB,EAAOooB,EAAIE,KAAOrpB,EAAM,OAGpCe,EAAOf,EACHwe,EAAKnC,OACLtc,EAAQC,IAGhBwe,EAAO2K,CACX,CAQA,OAPa,OAATpoB,GACAif,EAAO7jB,KAAK,CACR4D,MAAOA,EAAQ6C,EACf5C,IAAKe,EAAO6B,EACZsK,SAGD8S,CACX,CAqB+BitC,CAAcxqD,EAAQ1C,EAFrCC,EAAMD,EAAQC,EAAM4C,EAAQ5C,IACjBqU,EAAKsuB,WAAuB,IAAV5iC,GAAeC,IAAQ4C,EAAQ,GAHjEH,EAAQgjB,EAKnB,CCyuImDynC,CAAiB32D,KAAMA,KAAK0E,QAAQ2pB,SACnF,CACH+pB,KAAAA,GACO,MAAMrpB,EAAW/uB,KAAK+uB,SAChB7iB,EAASlM,KAAKkM,OACpB,OAAO6iB,EAASzwB,QAAU4N,EAAO6iB,EAAS,GAAGvlB,MACjD,CACHgB,IAAAA,GACO,MAAMukB,EAAW/uB,KAAK+uB,SAChB7iB,EAASlM,KAAKkM,OACdG,EAAQ0iB,EAASzwB,OACvB,OAAO+N,GAASH,EAAO6iB,EAAS1iB,EAAQ,GAAG5C,IAC/C,CACH1I,WAAAA,CAAYoM,EAAOjF,GACZ,MAAMxD,EAAU1E,KAAK0E,QACfxC,EAAQiL,EAAMjF,GACdgE,EAASlM,KAAKkM,OACd6iB,EAAWD,GAAe9uB,KAAM,CAClCkI,WACAsB,MAAOtH,EACPuH,IAAKvH,IAET,IAAK6sB,EAASzwB,OACV,OAEJ,MAAMmrB,EAAS,GACTmtC,EA/Hb,SAAiClyD,GAC9B,OAAIA,EAAQywD,QACDxoC,GAEPjoB,EAAQwjB,SAA8C,aAAnCxjB,EAAQsjB,uBACpB4E,GAEJF,EACX,CAuH6BmqC,CAAwBnyD,GAC7C,IAAIxS,EAAG2R,EACP,IAAI3R,EAAI,EAAG2R,EAAOkrB,EAASzwB,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAC7C,MAAMsX,MAAEA,EAAKC,IAAGA,GAASslB,EAAS78B,GAC5Ba,EAAKmZ,EAAO1C,GACZxW,EAAKkZ,EAAOzC,GAClB,GAAI1W,IAAOC,EAAI,CACXy2B,EAAO7jB,KAAK7S,GACZ,QACJ,CACA,MACM+jE,EAAeF,EAAa7jE,EAAIC,EAD5BrD,KAAKyX,KAAKlF,EAAQnP,EAAGmV,KAAclV,EAAGkV,GAAYnV,EAAGmV,KAClBxD,EAAQywD,SACrD2B,EAAa5uD,GAAYiF,EAAMjF,GAC/BuhB,EAAO7jB,KAAKkxD,EAChB,CACA,OAAyB,IAAlBrtC,EAAOnrB,OAAemrB,EAAO,GAAKA,CAC7C,CACHwrC,WAAAA,CAAY9gD,EAAKka,EAASshB,GAEnB,OADsBkmB,GAAkB71D,KACjCm2D,CAAchiD,EAAKnU,KAAMquB,EAASshB,EAC7C,CACHqmB,IAAAA,CAAK7hD,EAAK3K,EAAO6C,GACV,MAAM0iB,EAAW/uB,KAAK+uB,SAChBonC,EAAgBN,GAAkB71D,MACxC,IAAI2W,EAAO3W,KAAK6zB,MAChBrqB,EAAQA,GAAS,EACjB6C,EAAQA,GAASrM,KAAKkM,OAAO5N,OAASkL,EACtC,IAAK,MAAM6kB,KAAWU,EAClBpY,GAAQw/C,EAAchiD,EAAKnU,KAAMquB,EAAS,CACtC7kB,QACAC,IAAKD,EAAQ6C,EAAQ,IAG7B,QAASsK,CACb,CACHob,IAAAA,CAAK5d,EAAKoc,EAAW/mB,EAAO6C,GACrB,MAAM3H,EAAU1E,KAAK0E,SAAW,CAAA,GACjB1E,KAAKkM,QAAU,IACnB5N,QAAUoG,EAAQkY,cACzBzI,EAAImG,OACJyX,GAAK5d,EAAKnU,KAAMwJ,EAAO6C,GACvB8H,EAAIuG,WAEJ1a,KAAKyqC,WACLzqC,KAAKw2D,gBAAiB,EACtBx2D,KAAKi2D,WAAQzkE,EAErB,EAGJ,SAASulE,GAAUxqC,EAAI7C,EAAK9c,EAAMohC,GAC9B,MAAMtpC,EAAU6nB,EAAG7nB,SACXkI,CAACA,GAAO1K,GAAWqqB,EAAGsiB,SAAS,CACnCjiC,GACDohC,GACH,OAAOr+C,KAAKyX,IAAIsiB,EAAMxnB,GAASwC,EAAQqX,OAASrX,EAAQsyD,SAC5D,CARAvkD,EAAA,cAAA4jD,IASA,MAAMY,WAAqB9f,GACvB3e,UAAY,QACZ9S,OACAI,KACAgN,KAGE0F,gBAAkB,CAChB5b,YAAa,EACbo6C,UAAW,EACX7sB,iBAAkB,EAClB+sB,YAAa,EACbr7C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAIZ0c,qBAAuB,CACrBplB,gBAAiB,kBACjBC,YAAa,eAEjBzT,WAAAA,CAAY4zB,GACRgQ,QACAxjC,KAAK0E,aAAUlT,EACfwO,KAAK0lB,YAASl0B,EACdwO,KAAK8lB,UAAOt0B,EACZwO,KAAK8yB,UAAOthC,EACRgiC,GACAv1B,OAAOoB,OAAOW,KAAMwzB,EAE5B,CACA0a,OAAAA,CAAQipB,EAAQC,EAAQppB,GACpB,MAAMtpC,EAAU1E,KAAK0E,SACfvR,EAAEA,EAACmS,EAAGA,GAAOtF,KAAK6uC,SAAS,CAC7B,IACA,KACDb,GACH,OAAOr+C,KAAKmP,IAAIq4D,EAAShkE,EAAG,GAAKxD,KAAKmP,IAAIs4D,EAAS9xD,EAAG,GAAK3V,KAAKmP,IAAI4F,EAAQsyD,UAAYtyD,EAAQqX,OAAQ,EAC5G,CACAs7C,QAAAA,CAASF,EAAQnpB,GACb,OAAO+oB,GAAU/2D,KAAMm3D,EAAQ,IAAKnpB,EACxC,CACAspB,QAAAA,CAASF,EAAQppB,GACb,OAAO+oB,GAAU/2D,KAAMo3D,EAAQ,IAAKppB,EACxC,CACAW,cAAAA,CAAeX,GACX,MAAM76C,EAAEA,EAACmS,EAAGA,GAAOtF,KAAK6uC,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACH76C,IACAmS,IAER,CACAc,IAAAA,CAAK1B,GAED,IAAIqX,GADJrX,EAAUA,GAAW1E,KAAK0E,SAAW,CAAA,GAChBqX,QAAU,EAG/B,OAFAA,EAASpsB,KAAKC,IAAImsB,EAAQA,GAAUrX,EAAQwyD,aAAe,GAE3B,GAAxBn7C,GADYA,GAAUrX,EAAQkY,aAAe,GAEzD,CACAmV,IAAAA,CAAK5d,EAAK4I,GACN,MAAMrY,EAAU1E,KAAK0E,QACjB1E,KAAK8lB,MAAQphB,EAAQqX,OAAS,KAAQe,GAAe9c,KAAM+c,EAAM/c,KAAKoG,KAAK1B,GAAW,KAG1FyP,EAAIqK,YAAc9Z,EAAQ2O,YAC1Bc,EAAI6D,UAAYtT,EAAQkY,YACxBzI,EAAIsK,UAAY/Z,EAAQ0O,gBACxBkI,GAAUnH,EAAKzP,EAAS1E,KAAK7M,EAAG6M,KAAKsF,GACzC,CACAooC,QAAAA,GACI,MAAMhpC,EAAU1E,KAAK0E,SAAW,CAAA,EAEhC,OAAOA,EAAQqX,OAASrX,EAAQsyD,SACpC,EAGJ,SAASO,GAAaC,EAAKxpB,GACvB,MAAM76C,EAAEA,EAACmS,EAAGA,EAACi2B,KAAGA,EAAI7iB,MAAGA,EAAK2C,OAAGA,GAAam8C,EAAI3oB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDb,GACH,IAAIx2B,EAAMF,EAAOD,EAAKE,EAAQkgD,EAc9B,OAbID,EAAI/0B,YACJg1B,EAAOp8C,EAAS,EAChB7D,EAAO7nB,KAAKE,IAAIsD,EAAGooC,GACnBjkB,EAAQ3nB,KAAKC,IAAIuD,EAAGooC,GACpBlkB,EAAM/R,EAAImyD,EACVlgD,EAASjS,EAAImyD,IAEbA,EAAO/+C,EAAQ,EACflB,EAAOrkB,EAAIskE,EACXngD,EAAQnkB,EAAIskE,EACZpgD,EAAM1nB,KAAKE,IAAIyV,EAAGi2B,GAClBhkB,EAAS5nB,KAAKC,IAAI0V,EAAGi2B,IAElB,CACH/jB,OACAH,MACAC,QACAC,SAER,CACA,SAASmgD,GAAY5xC,EAAM5jB,EAAOrS,EAAKD,GACnC,OAAOk2B,EAAO,EAAI/b,GAAY7H,EAAOrS,EAAKD,EAC9C,CA4BA,SAAS+nE,GAAcH,GACnB,MAAM5/C,EAAS2/C,GAAaC,GACtB9+C,EAAQd,EAAON,MAAQM,EAAOJ,KAC9B6D,EAASzD,EAAOL,OAASK,EAAOP,IAChCkB,EA/BV,SAA0Bi/C,EAAKI,EAAMC,GACjC,MAAM31D,EAAQs1D,EAAI9yD,QAAQkY,YACpBkJ,EAAO0xC,EAAIh1B,cACXn9B,EAAIqb,GAAOxe,GACjB,MAAO,CACHlB,EAAG02D,GAAY5xC,EAAKzO,IAAKhS,EAAEgS,IAAK,EAAGwgD,GACnCzmE,EAAGsmE,GAAY5xC,EAAKxO,MAAOjS,EAAEiS,MAAO,EAAGsgD,GACvClnE,EAAGgnE,GAAY5xC,EAAKvO,OAAQlS,EAAEkS,OAAQ,EAAGsgD,GACzCpoE,EAAGioE,GAAY5xC,EAAKtO,KAAMnS,EAAEmS,KAAM,EAAGogD,GAE7C,CAqBmBE,CAAiBN,EAAK9+C,EAAQ,EAAG2C,EAAS,GACnDU,EArBV,SAA2By7C,EAAKI,EAAMC,GAClC,MAAMl1B,mBAAEA,GAAwB60B,EAAI3oB,SAAS,CACzC,uBAEE3sC,EAAQs1D,EAAI9yD,QAAQwsD,aACpB7rD,EAAIsb,GAAcze,GAClB61D,EAAOpoE,KAAKE,IAAI+nE,EAAMC,GACtB/xC,EAAO0xC,EAAIh1B,cACXw1B,EAAer1B,GAAsBpgC,EAASL,GACpD,MAAO,CACHyd,QAAS+3C,IAAaM,GAAgBlyC,EAAKzO,KAAOyO,EAAKtO,KAAMnS,EAAEsa,QAAS,EAAGo4C,GAC3Ej4C,SAAU43C,IAAaM,GAAgBlyC,EAAKzO,KAAOyO,EAAKxO,MAAOjS,EAAEya,SAAU,EAAGi4C,GAC9En4C,WAAY83C,IAAaM,GAAgBlyC,EAAKvO,QAAUuO,EAAKtO,KAAMnS,EAAEua,WAAY,EAAGm4C,GACpFl4C,YAAa63C,IAAaM,GAAgBlyC,EAAKvO,QAAUuO,EAAKxO,MAAOjS,EAAEwa,YAAa,EAAGk4C,GAE/F,CAMmBE,CAAkBT,EAAK9+C,EAAQ,EAAG2C,EAAS,GAC1D,MAAO,CACH68C,MAAO,CACH/kE,EAAGykB,EAAOJ,KACVlS,EAAGsS,EAAOP,IACVrlB,EAAG0mB,EACHhpB,EAAG2rB,EACHU,UAEJs3C,MAAO,CACHlgE,EAAGykB,EAAOJ,KAAOe,EAAO9oB,EACxB6V,EAAGsS,EAAOP,IAAMkB,EAAOvX,EACvBhP,EAAG0mB,EAAQH,EAAO9oB,EAAI8oB,EAAOnnB,EAC7B1B,EAAG2rB,EAAS9C,EAAOvX,EAAIuX,EAAO7nB,EAC9BqrB,OAAQ,CACJ4D,QAAShwB,KAAKC,IAAI,EAAGmsB,EAAO4D,QAAUhwB,KAAKC,IAAI2oB,EAAOvX,EAAGuX,EAAO9oB,IAChEqwB,SAAUnwB,KAAKC,IAAI,EAAGmsB,EAAO+D,SAAWnwB,KAAKC,IAAI2oB,EAAOvX,EAAGuX,EAAOnnB,IAClEwuB,WAAYjwB,KAAKC,IAAI,EAAGmsB,EAAO6D,WAAajwB,KAAKC,IAAI2oB,EAAO7nB,EAAG6nB,EAAO9oB,IACtEowB,YAAalwB,KAAKC,IAAI,EAAGmsB,EAAO8D,YAAclwB,KAAKC,IAAI2oB,EAAO7nB,EAAG6nB,EAAOnnB,MAIxF,CACA,SAAS88C,GAAQspB,EAAKrkE,EAAGmS,EAAG0oC,GACxB,MAAMmqB,EAAc,OAANhlE,EACRilE,EAAc,OAAN9yD,EAERsS,EAAS4/C,KADEW,GAASC,IACSb,GAAaC,EAAKxpB,GACrD,OAAOp2B,IAAWugD,GAASnuD,GAAW7W,EAAGykB,EAAOJ,KAAMI,EAAON,UAAY8gD,GAASpuD,GAAW1E,EAAGsS,EAAOP,IAAKO,EAAOL,QACvH,CAIC,SAAS8gD,GAAkBlkD,EAAKuI,GAC7BvI,EAAIuI,KAAKA,EAAKvpB,EAAGupB,EAAKpX,EAAGoX,EAAK1qB,EAAG0qB,EAAKhtB,EAC1C,CACA,SAAS4oE,GAAY57C,EAAM67C,EAAQC,EAAU,CAAA,GACzC,MAAMrlE,EAAIupB,EAAKvpB,IAAMqlE,EAAQrlE,GAAKolE,EAAS,EACrCjzD,EAAIoX,EAAKpX,IAAMkzD,EAAQlzD,GAAKizD,EAAS,EACrCvmE,GAAK0qB,EAAKvpB,EAAIupB,EAAK1qB,IAAMwmE,EAAQrlE,EAAIqlE,EAAQxmE,EAAIumE,EAAS,GAAKplE,EAC/DzD,GAAKgtB,EAAKpX,EAAIoX,EAAKhtB,IAAM8oE,EAAQlzD,EAAIkzD,EAAQ9oE,EAAI6oE,EAAS,GAAKjzD,EACrE,MAAO,CACHnS,EAAGupB,EAAKvpB,EAAIA,EACZmS,EAAGoX,EAAKpX,EAAIA,EACZtT,EAAG0qB,EAAK1qB,EAAIA,EACZtC,EAAGgtB,EAAKhtB,EAAIA,EACZqsB,OAAQW,EAAKX,OAErB,CAlHAtJ,EAAA,eAAAwkD,IAmHA,MAAMwB,WAAmBthB,GACrB3e,UAAY,MACfA,gBAAkB,CACXgK,cAAe,QACf5lB,YAAa,EACbs0C,aAAc,EACdjuB,cAAe,OACfpnB,gBAAYrqB,GAEnBgnC,qBAAuB,CAChBplB,gBAAiB,kBACjBC,YAAa,eAEjBzT,WAAAA,CAAY4zB,GACRgQ,QACAxjC,KAAK0E,aAAUlT,EACfwO,KAAKyiC,gBAAajxC,EAClBwO,KAAKu7B,UAAO/pC,EACZwO,KAAK0Y,WAAQlnB,EACbwO,KAAKqb,YAAS7pB,EACdwO,KAAKijC,mBAAgBzxC,EACjBgiC,GACAv1B,OAAOoB,OAAOW,KAAMwzB,EAE5B,CACAzB,IAAAA,CAAK5d,GACD,MAAM8uB,cAAEA,EAAgBv+B,SAAS2O,YAAEA,EAAWD,gBAAGA,IAAwBpT,MACnEqzD,MAAEA,EAAK6E,MAAGA,GAAWP,GAAc33D,MACnC04D,GA/CK38C,EA+CmBm8C,EAAMn8C,QA9C1B4D,SAAW5D,EAAO+D,UAAY/D,EAAO6D,YAAc7D,EAAO8D,YA8CtBH,GAAqB24C,GA/C3E,IAAmBt8C,EAgDX5H,EAAImG,OACA49C,EAAMlmE,IAAMqhE,EAAMrhE,GAAKkmE,EAAMxoE,IAAM2jE,EAAM3jE,IACzCykB,EAAIgI,YACJu8C,EAAYvkD,EAAKmkD,GAAYJ,EAAOj1B,EAAeowB,IACnDl/C,EAAI0D,OACJ6gD,EAAYvkD,EAAKmkD,GAAYjF,GAAQpwB,EAAei1B,IACpD/jD,EAAIsK,UAAYpL,EAChBc,EAAIwI,KAAK,YAEbxI,EAAIgI,YACJu8C,EAAYvkD,EAAKmkD,GAAYjF,EAAOpwB,IACpC9uB,EAAIsK,UAAYrL,EAChBe,EAAIwI,OACJxI,EAAIuG,SACR,CACAwzB,OAAAA,CAAQipB,EAAQC,EAAQppB,GACpB,OAAOE,GAAQluC,KAAMm3D,EAAQC,EAAQppB,EACzC,CACAqpB,QAAAA,CAASF,EAAQnpB,GACb,OAAOE,GAAQluC,KAAMm3D,EAAQ,KAAMnpB,EACvC,CACAspB,QAAAA,CAASF,EAAQppB,GACb,OAAOE,GAAQluC,KAAM,KAAMo3D,EAAQppB,EACvC,CACAW,cAAAA,CAAeX,GACX,MAAM76C,EAAEA,EAACmS,EAAGA,EAACi2B,KAAGA,EAAIkH,WAAGA,GAAiBziC,KAAK6uC,SAAS,CAClD,IACA,IACA,OACA,cACDb,GACH,MAAO,CACH76C,EAAGsvC,GAActvC,EAAIooC,GAAQ,EAAIpoC,EACjCmS,EAAGm9B,EAAan9B,GAAKA,EAAIi2B,GAAQ,EAEzC,CACAmS,QAAAA,CAAS9gC,GACL,MAAgB,MAATA,EAAe5M,KAAK0Y,MAAQ,EAAI1Y,KAAKqb,OAAS,CACzD,EACJ5I,EAAA,aAAAgmD,IAEG,IAAC9kD,GAAQlB,EAAA,WAAgBxU,OAAO2gC,OAAO,CAC1C+N,UAAW,KACXmnB,WAAYA,GACZ2E,WAAYA,GACZpC,YAAaA,GACbY,aAAcA,MAGd,MAAM0B,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAcnmE,IAAKgO,GAAQA,EAAMjC,QAAQ,OAAQ,SAASA,QAAQ,IAAK,WACjH,SAASs6D,GAAe3mE,GACpB,OAAOymE,GAAczmE,EAAIymE,GAAcr6D,OAC3C,CACA,SAASw6D,GAAmB5mE,GACxB,OAAO0mE,GAAkB1mE,EAAI0mE,GAAkBt6D,OACnD,CAcA,SAASy6D,GAAapnD,GAClB,IAAIzf,EAAI,EACR,MAAO,CAACya,EAAS3I,KACb,MAAMqzB,EAAa1lB,EAAMgpB,eAAe32B,GAAcqzB,WAClDA,aAAsByP,GACtB50C,EAbZ,SAAiCya,EAASza,GAEtC,OADAya,EAAQyG,gBAAkBzG,EAAQiN,KAAKpnB,IAAI,IAAIqmE,GAAe3mE,MACvDA,CACX,CAUgB8mE,CAAwBrsD,EAASza,GAC9BmlC,aAAsB4T,GAC7B/4C,EAXZ,SAAkCya,EAASza,GAEvC,OADAya,EAAQyG,gBAAkBzG,EAAQiN,KAAKpnB,IAAI,IAAIsmE,GAAmB5mE,MAC3DA,CACX,CAQgB+mE,CAAyBtsD,EAASza,GAC/BmlC,IACPnlC,EAtBZ,SAAgCya,EAASza,GAGrC,OAFAya,EAAQ0G,YAAcwlD,GAAe3mE,GACrCya,EAAQyG,gBAAkB0lD,GAAmB5mE,KACpCA,CACb,CAkBgBgnE,CAAuBvsD,EAASza,IAGhD,CACA,SAASinE,GAA0BxmD,GAC/B,IAAI9gB,EACJ,IAAIA,KAAK8gB,EACL,GAAIA,EAAY9gB,GAAGwhB,aAAeV,EAAY9gB,GAAGuhB,gBAC7C,OAAO,EAGf,OAAO,CACX,CAOG,IAACgmD,GAAa3mD,EAAA,SAAG,CAChBzQ,GAAI,SACJmU,SAAU,CACN8hC,SAAS,EACTohB,eAAe,GAEnBxmB,YAAAA,CAAclhC,EAAO2nD,EAAO50D,GACxB,IAAKA,EAAQuzC,QACT,OAEJ,MAAQr+B,MAAMtG,SAAEA,GAAc5O,QAAS60D,GAAkB5nD,EAAMkjB,QACzDlhB,SAAEA,GAAc4lD,EAChBC,EAA0BL,GAA0B7lD,KAlBhC2yC,EAkBsEsT,KAjB9EtT,EAAW5yC,aAAe4yC,EAAW7yC,kBAiB0DO,GAAYwlD,GAA0BxlD,IAd3H,oBAAzBwC,GAAS9C,aAAkE,oBAA7B8C,GAAS/C,gBAJlE,IAAkC6yC,EAmB1B,IAAKvhD,EAAQ20D,eAAiBG,EAC1B,OAEJ,MAAMC,EAAYV,GAAapnD,GAC/B2B,EAASpI,QAAQuuD,EACrB,IAmGJ,SAASC,GAAsB/sD,GAC3B,GAAIA,EAAQ69B,WAAY,CACpB,MAAM5wB,EAAOjN,EAAQisB,aACdjsB,EAAQ69B,kBACR79B,EAAQisB,MACf36B,OAAOq9B,eAAe3uB,EAAS,OAAQ,CACnC+X,cAAc,EACd1O,YAAY,EACZD,UAAU,EACV7T,MAAO0X,GAEf,CACJ,CACA,SAAS+/C,GAAmBhoD,GACxBA,EAAMiI,KAAKtG,SAASpI,QAASyB,IACzB+sD,GAAsB/sD,IAE9B,CAoBG,IAACitD,GAAiBnnD,EAAA,aAAG,CACpBzQ,GAAI,aACJmU,SAAU,CACN0jD,UAAW,UACX5hB,SAAS,GAEb6hB,qBAAsBA,CAACnoD,EAAOvO,EAAMsB,KAChC,IAAKA,EAAQuzC,QAET,YADA0hB,GAAmBhoD,GAGvB,MAAMy+B,EAAiBz+B,EAAM+G,MAC7B/G,EAAMiI,KAAKtG,SAASpI,QAAQ,CAACyB,EAAS3I,KAClC,MAAM40B,MAAEA,EAAKtkB,UAAGA,GAAe3H,EACzBV,EAAO0F,EAAMgpB,eAAe32B,GAC5B4V,EAAOgf,GAASjsB,EAAQiN,KAC9B,GAGO,MAHHsH,GAAQ,CACR5M,EACA3C,EAAMjN,QAAQ4P,YAEd,OAEJ,IAAKrI,EAAKorB,WAAW6B,mBACjB,OAEJ,MAAM6gC,EAAQpoD,EAAMuD,OAAOjJ,EAAK+tB,SAChC,GAAmB,WAAf+/B,EAAMl6D,MAAoC,SAAfk6D,EAAMl6D,KACjC,OAEJ,GAAI8R,EAAMjN,QAAQoQ,QACd,OAEJ,IAoBIklD,GApBAxwD,MAAEA,EAAK6C,MAAGA,GAnD1B,SAAmDJ,EAAMC,GACrD,MAAME,EAAaF,EAAO5N,OAC1B,IACI+N,EADA7C,EAAQ,EAEZ,MAAM+C,OAAEA,GAAYN,GACdpc,IAAEA,EAAGD,IAAGA,EAAGid,WAAGA,EAAUC,WAAGA,GAAgBP,EAAOQ,gBASxD,OARIF,IACArD,EAAQO,GAAYQ,GAAa2B,EAAQK,EAAOK,KAAM/c,GAAKya,GAAI,EAAG8B,EAAa,IAG/EC,EADAS,EACQ/C,GAAYQ,GAAa2B,EAAQK,EAAOK,KAAMhd,GAAKya,GAAK,EAAGb,EAAO4C,GAAc5C,EAEhF4C,EAAa5C,EAElB,CACHA,QACA6C,QAER,CAiCqC4tD,CAA0ChuD,EAAM2N,GAEzE,GAAIvN,IADc3H,EAAQw1D,WAAa,EAAI9pB,GAEvCspB,GAAsB/sD,OAD1B,CAmBA,OAfI1K,EAAc22B,KACdjsB,EAAQisB,MAAQhf,SACTjN,EAAQiN,KACf3b,OAAOq9B,eAAe3uB,EAAS,OAAQ,CACnC+X,cAAc,EACd1O,YAAY,EACZ/E,IAAK,WACD,OAAOjR,KAAKwqC,UAChB,EACAn/B,IAAK,SAASza,GACVoP,KAAK44B,MAAQhoC,CACjB,KAID8T,EAAQm1D,WACX,IAAK,OACDG,EA5LpB,SAAwBpgD,EAAMpQ,EAAO6C,EAAO+jC,EAAgB1rC,GAC3D,MAAMy1D,EAAUz1D,EAAQy1D,SAAW/pB,EAChC,GAAI+pB,GAAW9tD,EACX,OAAOuN,EAAKtX,MAAMkH,EAAOA,EAAQ6C,GAErC,MAAM2tD,EAAY,GACZI,GAAe/tD,EAAQ,IAAM8tD,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAW9wD,EAAQ6C,EAAQ,EACjC,IACIna,EAAGqoE,EAAcC,EAASz9C,EAAM09C,EADhChqE,EAAI+Y,EAGR,IADAwwD,EAAUK,KAAkBzgD,EAAKnpB,GAC7ByB,EAAI,EAAGA,EAAIioE,EAAU,EAAGjoE,IAAI,CAC5B,IAEIiM,EAFAq3D,EAAO,EACPkF,EAAO,EAEX,MAAMC,EAAgBhrE,KAAK8X,OAAOvV,EAAI,GAAKkoE,GAAe,EAAI5wD,EACxDoxD,EAAcjrE,KAAKE,IAAIF,KAAK8X,OAAOvV,EAAI,GAAKkoE,GAAe,EAAG/tD,GAAS7C,EACvEqxD,EAAiBD,EAAcD,EACrC,IAAIx8D,EAAIw8D,EAAex8D,EAAIy8D,EAAaz8D,IACpCq3D,GAAQ57C,EAAKzb,GAAGhL,EAChBunE,GAAQ9gD,EAAKzb,GAAGmH,EAEpBkwD,GAAQqF,EACRH,GAAQG,EACR,MAAMC,EAAYnrE,KAAK8X,MAAMvV,EAAIkoE,GAAe,EAAI5wD,EAC9CuxD,EAAUprE,KAAKE,IAAIF,KAAK8X,OAAOvV,EAAI,GAAKkoE,GAAe,EAAG/tD,GAAS7C,GACjErW,EAAG6nE,EAAU11D,EAAG21D,GAAarhD,EAAKnpB,GAE1C,IADA+pE,EAAUz9C,GAAO,EACb5e,EAAI28D,EAAW38D,EAAI48D,EAAS58D,IAC5B4e,EAAO,GAAMptB,KAAKyX,KAAK4zD,EAAUxF,IAAS57C,EAAKzb,GAAGmH,EAAI21D,IAAYD,EAAUphD,EAAKzb,GAAGhL,IAAMunE,EAAOO,IAC7Fl+C,EAAOy9C,IACPA,EAAUz9C,EACVw9C,EAAe3gD,EAAKzb,GACpBs8D,EAAQt8D,GAGhB67D,EAAUK,KAAkBE,EAC5B9pE,EAAIgqE,CACR,CAEA,OADAT,EAAUK,KAAkBzgD,EAAK0gD,GAC1BN,CACX,CAkJgCkB,CAAethD,EAAMpQ,EAAO6C,EAAO+jC,EAAgB1rC,GAC/D,MACJ,IAAK,UACDs1D,EApJpB,SAA0BpgD,EAAMpQ,EAAO6C,EAAO+jC,GAC1C,IAEIl+C,EAAGib,EAAOha,EAAGmS,EAAGgwD,EAAO6F,EAAUC,EAAUC,EAAYjyB,EAAMF,EAF7DssB,EAAO,EACPC,EAAS,EAEb,MAAMuE,EAAY,GACZM,EAAW9wD,EAAQ6C,EAAQ,EAC3BivD,EAAO1hD,EAAKpQ,GAAOrW,EAEnBooE,EADO3hD,EAAK0gD,GAAUnnE,EACVmoE,EAClB,IAAIppE,EAAIsX,EAAOtX,EAAIsX,EAAQ6C,IAASna,EAAE,CAClCib,EAAQyM,EAAK1nB,GACbiB,GAAKga,EAAMha,EAAImoE,GAAQC,EAAKnrB,EAC5B9qC,EAAI6H,EAAM7H,EACV,MAAMswD,EAAa,EAAJziE,EACf,GAAIyiE,IAAWN,EACPhwD,EAAI8jC,GACJA,EAAO9jC,EACP61D,EAAWjpE,GACJoT,EAAI4jC,IACXA,EAAO5jC,EACP81D,EAAWlpE,GAEfsjE,GAAQC,EAASD,EAAOroD,EAAMha,KAAOsiE,MAClC,CACH,MAAM+F,EAAYtpE,EAAI,EACtB,IAAK+P,EAAck5D,KAAcl5D,EAAcm5D,GAAW,CACtD,MAAMK,EAAqB9rE,KAAKE,IAAIsrE,EAAUC,GACxCM,EAAqB/rE,KAAKC,IAAIurE,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC5DxB,EAAUp0D,KAAK,IACRgU,EAAK6hD,GACRtoE,EAAGqiE,IAGPkG,IAAuBL,GAAcK,IAAuBF,GAC5DxB,EAAUp0D,KAAK,IACRgU,EAAK8hD,GACRvoE,EAAGqiE,GAGf,CACItjE,EAAI,GAAKspE,IAAcH,GACvBrB,EAAUp0D,KAAKgU,EAAK4hD,IAExBxB,EAAUp0D,KAAKuH,GACfmoD,EAAQM,EACRH,EAAS,EACTrsB,EAAOF,EAAO5jC,EACd61D,EAAWC,EAAWC,EAAanpE,CACvC,CACJ,CACA,OAAO8nE,CACX,CAgGgC2B,CAAiB/hD,EAAMpQ,EAAO6C,EAAO+jC,GACjD,MACJ,QACI,UAAUrsB,MAAM,qCAAqCrf,EAAQm1D,cAErEltD,EAAQ69B,WAAawvB,CA1BrB,KA6BR1K,OAAAA,CAAS39C,GACLgoD,GAAmBhoD,EACvB,IAyCJ,SAASiqD,GAAW1zD,EAAUkwC,EAAO5tC,EAAMmM,GACvC,GAAIA,EACA,OAEJ,IAAInN,EAAQ4uC,EAAMlwC,GACduB,EAAMe,EAAKtC,GAKf,MAJiB,UAAbA,IACAsB,EAAQF,GAAgBE,GACxBC,EAAMH,GAAgBG,IAEnB,CACHvB,WACAsB,QACAC,MAER,CA+BA,SAASoyD,GAAgBryD,EAAOC,EAAKyC,GACjC,KAAMzC,EAAMD,EAAOC,IAAM,CACrB,MAAM0D,EAAQjB,EAAOzC,GACrB,IAAK1B,MAAMoF,EAAMha,KAAO4U,MAAMoF,EAAM7H,GAChC,KAER,CACA,OAAOmE,CACX,CACA,SAASqyD,GAASrrE,EAAGC,EAAG+vB,EAAMtd,GAC1B,OAAI1S,GAAKC,EACEyS,EAAG1S,EAAEgwB,GAAO/vB,EAAE+vB,IAElBhwB,EAAIA,EAAEgwB,GAAQ/vB,EAAIA,EAAE+vB,GAAQ,CACvC,CAEA,SAASs7C,GAAoBC,EAAUl+C,GACnC,IAAI5R,EAAS,GACT2nB,GAAQ,EAOZ,OANIthC,EAAQypE,IACRnoC,GAAQ,EACR3nB,EAAS8vD,GAET9vD,EArDR,SAA6B8vD,EAAUl+C,GACnC,MAAM3qB,EAAEA,EAAG,KAAImS,EAAGA,EAAG,MAAU02D,GAAY,CAAA,EACrCC,EAAan+C,EAAK5R,OAClBA,EAAS,GAyBf,OAxBA4R,EAAKiR,SAAS7jB,QAAQ,EAAG1B,QAAQC,UAC7BA,EAAMoyD,GAAgBryD,EAAOC,EAAKwyD,GAClC,MAAM7jB,EAAQ6jB,EAAWzyD,GACnBgB,EAAOyxD,EAAWxyD,GACd,OAANnE,GACA4G,EAAOtG,KAAK,CACRzS,EAAGilD,EAAMjlD,EACTmS,MAEJ4G,EAAOtG,KAAK,CACRzS,EAAGqX,EAAKrX,EACRmS,OAES,OAANnS,IACP+Y,EAAOtG,KAAK,CACRzS,IACAmS,EAAG8yC,EAAM9yC,IAEb4G,EAAOtG,KAAK,CACRzS,IACAmS,EAAGkF,EAAKlF,OAIb4G,CACX,CAwBiBgwD,CAAoBF,EAAUl+C,GAEpC5R,EAAO5N,OAAS,IAAI+3D,GAAY,CACnCnqD,SACAxH,QAAS,CACLwjB,QAAS,GAEb2L,QACAuY,UAAWvY,IACV,IACT,CACA,SAASsoC,GAAiBj4D,GACtB,OAAOA,IAA0B,IAAhBA,EAAOyY,IAC5B,CAEA,SAASy/C,GAAet3D,EAASb,EAAOo4D,GAEpC,IAAI1/C,EADW7X,EAAQb,GACL0Y,KAClB,MAAM2/C,EAAU,CACZr4D,GAEJ,IAAIE,EACJ,IAAKk4D,EACD,OAAO1/C,EAEX,MAAe,IAATA,QAAkB2/C,EAAQ93D,QAAQmY,IAAa,CACjD,IAAKna,EAAema,GAChB,OAAOA,EAGX,GADAxY,EAASW,EAAQ6X,IACZxY,EACD,OAAO,EAEX,GAAIA,EAAO8S,QACP,OAAO0F,EAEX2/C,EAAQ12D,KAAK+W,GACbA,EAAOxY,EAAOwY,IAClB,CACA,OAAO,CACX,CACC,SAAS4/C,GAAYz+C,EAAM7Z,EAAOoI,GAC9B,MAAMsQ,EAmDV,SAAyBmB,GACtB,MAAMpZ,EAAUoZ,EAAKpZ,QACf83D,EAAa93D,EAAQiY,KAC3B,IAAIA,EAAO9Z,EAAe25D,GAAcA,EAAWr4D,OAAQq4D,GAI3D,YAHahrE,IAATmrB,IACAA,IAASjY,EAAQ0O,kBAER,IAATuJ,GAA2B,OAATA,KAGT,IAATA,EACO,SAEJA,EACX,CAjEkB8/C,CAAgB3+C,GAC9B,GAAIvb,EAASoa,GACT,OAAO5U,MAAM4U,EAAKza,QAAiBya,EAEvC,IAAIxY,EAASlB,WAAW0Z,GACxB,OAAIna,EAAe2B,IAAWxU,KAAK8X,MAAMtD,KAAYA,EAWzD,SAA2Bu4D,EAASz4D,EAAOE,EAAQkI,GAI/C,MAHgB,MAAZqwD,GAA+B,MAAZA,IACnBv4D,EAASF,EAAQE,KAEjBA,IAAWF,GAASE,EAAS,GAAKA,GAAUkI,IAGzClI,CACX,CAlBew4D,CAAkBhgD,EAAK,GAAI1Y,EAAOE,EAAQkI,GAE9C,CACH,SACA,QACA,MACA,QACA,SACF7H,QAAQmY,IAAS,GAAKA,CAC5B,CAuFC,SAASigD,GAAe1wD,EAAQ2wD,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAI5+D,EAAI,EAAGA,EAAI2+D,EAAWx+D,OAAQH,IAAI,CACtC,MAAM2f,EAAOg/C,EAAW3+D,IAClBi6C,MAAEA,EAAK5tC,KAAGA,EAAI2C,MAAGA,GAAW6vD,GAAUl/C,EAAM++C,EAAa,KAC/D,MAAK1vD,GAASirC,GAAS5tC,GAGvB,GAAI4tC,EACA2kB,EAAUE,QAAQ9vD,QAGlB,GADAjB,EAAOtG,KAAKuH,IACP3C,EACD,KAGZ,CACA0B,EAAOtG,QAAQm3D,EACnB,CACC,SAASC,GAAUl/C,EAAM++C,EAAa30D,GACnC,MAAMiF,EAAQ2Q,EAAK/c,YAAY87D,EAAa30D,GAC5C,IAAKiF,EACD,MAAO,CAAA,EAEX,MAAM+vD,EAAa/vD,EAAMjF,GACnB6mB,EAAWjR,EAAKiR,SAChBktC,EAAan+C,EAAK5R,OACxB,IAAIksC,GAAQ,EACR5tC,GAAO,EACX,IAAI,IAAItY,EAAI,EAAGA,EAAI68B,EAASzwB,OAAQpM,IAAI,CACpC,MAAMm8B,EAAUU,EAAS78B,GACnBirE,EAAalB,EAAW5tC,EAAQ7kB,OAAOtB,GACvCk1D,EAAYnB,EAAW5tC,EAAQ5kB,KAAKvB,GAC1C,GAAI8B,GAAWkzD,EAAYC,EAAYC,GAAY,CAC/ChlB,EAAQ8kB,IAAeC,EACvB3yD,EAAO0yD,IAAeE,EACtB,KACJ,CACJ,CACA,MAAO,CACHhlB,QACA5tC,OACA2C,QAER,CAEA,MAAMkwD,GACFz9D,WAAAA,CAAYme,GACR/d,KAAK7M,EAAI4qB,EAAK5qB,EACd6M,KAAKsF,EAAIyY,EAAKzY,EACdtF,KAAK+b,OAASgC,EAAKhC,MACvB,CACAk5C,WAAAA,CAAY9gD,EAAKyD,EAAQmG,GACrB,MAAM5qB,EAAEA,EAACmS,EAAGA,EAACyW,OAAGA,GAAY/b,KAM5B,OALA4X,EAASA,GAAU,CACfpO,MAAO,EACPC,IAAKjD,IAET2N,EAAIkI,IAAIlpB,EAAGmS,EAAGyW,EAAQnE,EAAOnO,IAAKmO,EAAOpO,OAAO,IACxCuU,EAAKnG,MACjB,CACA7W,WAAAA,CAAYoM,GACR,MAAMha,EAAEA,EAACmS,EAAGA,EAACyW,OAAGA,GAAY/b,KACtB+I,EAAQoE,EAAMpE,MACpB,MAAO,CACH5V,EAAGA,EAAIxD,KAAKuf,IAAInG,GAASgT,EACzBzW,EAAGA,EAAI3V,KAAKse,IAAIlF,GAASgT,EACzBhT,QAER,EAGJ,SAASmZ,GAAWhe,GAChB,MAAMyN,MAAEA,EAAKgL,KAAGA,EAAImB,KAAGA,GAAU5Z,EACjC,GAAI1B,EAAema,GACf,OAcP,SAAwBhL,EAAO1N,GAC5B,MAAMgI,EAAO0F,EAAMgpB,eAAe12B,GAC5BgT,EAAUhL,GAAQ0F,EAAMo2B,iBAAiB9jC,GAC/C,OAAOgT,EAAUhL,EAAKU,QAAU,IACpC,CAlBe2wD,CAAe3rD,EAAOgL,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyBzY,GACrB,MAAM+Q,MAAEA,EAAKhR,MAAGA,EAAK6Z,KAAGA,GAAU5Z,EAC5BgI,EAAS,GACT6iB,EAAWjR,EAAKiR,SAChBwuC,EAAez/C,EAAK5R,OACpB4wD,EAgBT,SAAuB7nD,EAAOhR,GAC3B,MAAMu5D,EAAQ,GACRriB,EAAQlmC,EAAMkiB,wBAAwB,QAC5C,IAAI,IAAIjlC,EAAI,EAAGA,EAAIipD,EAAM78C,OAAQpM,IAAI,CACjC,MAAM+Z,EAAOkvC,EAAMjpD,GACnB,GAAI+Z,EAAKhI,QAAUA,EACf,MAECgI,EAAKoxB,QACNmgC,EAAMP,QAAQhxD,EAAKU,QAE3B,CACA,OAAO6wD,CACX,CA7BuBC,CAAcxoD,EAAOhR,GACxC64D,EAAWl3D,KAAKm2D,GAAoB,CAChC5oE,EAAG,KACHmS,EAAG2P,EAAMsC,QACVuG,IACH,IAAI,IAAI5rB,EAAI,EAAGA,EAAI68B,EAASzwB,OAAQpM,IAAI,CACpC,MAAMm8B,EAAUU,EAAS78B,GACzB,IAAI,IAAIiM,EAAIkwB,EAAQ7kB,MAAOrL,GAAKkwB,EAAQ5kB,IAAKtL,IACzCy+D,GAAe1wD,EAAQqxD,EAAap/D,GAAI2+D,EAEhD,CACA,OAAO,IAAIzG,GAAY,CACnBnqD,SACAxH,QAAS,CAAA,GAEjB,CA6Feg5D,CAAgBx5D,GAE3B,GAAa,UAATyY,EACA,OAAO,EAEX,MAAMq/C,EAWV,SAAyB93D,GACrB,MAAM+Q,EAAQ/Q,EAAO+Q,OAAS,CAAA,EAC9B,OAAIA,EAAMq3B,yBAiBd,SAAiCpoC,GAC7B,MAAM+Q,MAAEA,EAAK0H,KAAGA,GAAUzY,EACpBQ,EAAUuQ,EAAMvQ,QAChBpG,EAAS2W,EAAMunB,YAAYl+B,OAC3BkL,EAAQ9E,EAAQjB,QAAUwR,EAAMrlB,IAAMqlB,EAAMplB,IAC5CqS,EAtLT,SAAyBya,EAAM1H,EAAO4sB,GACnC,IAAI3/B,EAUJ,OARIA,EADS,UAATya,EACQklB,EACQ,QAATllB,EACC1H,EAAMvQ,QAAQjB,QAAUwR,EAAMplB,IAAMolB,EAAMrlB,IAC3C2S,EAASoa,GACRA,EAAKza,MAEL+S,EAAM8qC,eAEX79C,CACX,CA0KkBy7D,CAAgBhhD,EAAM1H,EAAOzL,GACrCrF,EAAS,GACf,GAAIO,EAAQqT,KAAKozB,SAAU,CACvB,MAAMhH,EAASlvB,EAAMq3B,yBAAyB,EAAG9iC,GACjD,OAAO,IAAI6zD,GAAU,CACjBlqE,EAAGgxC,EAAOhxC,EACVmS,EAAG6+B,EAAO7+B,EACVyW,OAAQ9G,EAAMg3B,8BAA8B/pC,IAEpD,CACA,IAAI,IAAIhQ,EAAI,EAAGA,EAAIoM,IAAUpM,EACzBiS,EAAOyB,KAAKqP,EAAMq3B,yBAAyBp6C,EAAGgQ,IAElD,OAAOiC,CACX,CAnCey5D,CAAwB15D,GAIvC,SAA+BA,GAC3B,MAAM+Q,MAAEA,EAAO,GAAE0H,KAAGA,GAAUzY,EACxB2W,EApLT,SAAyB8B,EAAM1H,GAC5B,IAAI4F,EAAQ,KAUZ,MATa,UAAT8B,EACA9B,EAAQ5F,EAAMsC,OACE,QAAToF,EACP9B,EAAQ5F,EAAMoC,IACP9U,EAASoa,GAChB9B,EAAQ5F,EAAMjI,iBAAiB2P,EAAKza,OAC7B+S,EAAMyuB,eACb7oB,EAAQ5F,EAAMyuB,gBAEX7oB,CACX,CAwKkBgjD,CAAgBlhD,EAAM1H,GACpC,GAAIzS,EAAeqY,GAAQ,CACvB,MAAM4nB,EAAaxtB,EAAM0uB,eACzB,MAAO,CACHxwC,EAAGsvC,EAAa5nB,EAAQ,KACxBvV,EAAGm9B,EAAa,KAAO5nB,EAE/B,CACA,OAAO,IACX,CAbWijD,CAAsB55D,EACjC,CAjBqB65D,CAAgB75D,GACjC,OAAI83D,aAAoBqB,GACbrB,EAEJD,GAAoBC,EAAUl+C,EACzC,CA8CA,SAASkgD,GAAU7pD,EAAKjQ,EAAQ6Y,GAC5B,MAAM5Y,EAAS+d,GAAWhe,IACpByN,MAAEA,EAAK1N,MAAGA,EAAK6Z,KAAGA,EAAI7I,MAAGA,EAAKrI,KAAGA,GAAU1I,EAC3C+5D,EAAWngD,EAAKpZ,QAChB83D,EAAayB,EAASthD,KACtBnc,EAAQy9D,EAAS7qD,iBACjB8qD,MAAEA,EAAO19D,EAAKg9D,MAAGA,EAAOh9D,GAAWg8D,GAAc,CAAA,EACjDvwD,EAAO0F,EAAMgpB,eAAe12B,GAC5B4T,EAAO4Y,GAAmB9e,EAAO1F,GACnC9H,GAAU2Z,EAAK5R,OAAO5N,SACtB2e,GAAS9I,EAAK4I,GActB,SAAgB5I,EAAKqf,GACjB,MAAM1V,KAAEA,EAAI3Z,OAAGA,EAAM+5D,MAAGA,EAAKV,MAAGA,EAAKzgD,KAAGA,EAAI9H,MAAGA,EAAK4C,KAAGA,GAAU2b,EAC3DtrB,EAAW4V,EAAK+V,MAAQ,QAAUL,EAAI5mB,KAC5CuH,EAAImG,OACJ,IAAI6jD,EAAYX,EACZA,IAAUU,IACO,MAAbh2D,GACAk2D,GAAajqD,EAAKhQ,EAAQ4Y,EAAK1F,KAC/BsF,GAAKxI,EAAK,CACN2J,OACA3Z,SACA3D,MAAO09D,EACPjpD,QACA/M,WACA2P,SAEJ1D,EAAIuG,UACJvG,EAAImG,OACJ8jD,GAAajqD,EAAKhQ,EAAQ4Y,EAAKxF,SACX,MAAbrP,IACPm2D,GAAelqD,EAAKhQ,EAAQ4Y,EAAKvF,MACjCmF,GAAKxI,EAAK,CACN2J,OACA3Z,SACA3D,MAAOg9D,EACPvoD,QACA/M,WACA2P,SAEJ1D,EAAIuG,UACJvG,EAAImG,OACJ+jD,GAAelqD,EAAKhQ,EAAQ4Y,EAAKzF,OACjC6mD,EAAYD,IAGpBvhD,GAAKxI,EAAK,CACN2J,OACA3Z,SACA3D,MAAO29D,EACPlpD,QACA/M,WACA2P,SAEJ1D,EAAIuG,SACR,CAzDQ4jD,CAAOnqD,EAAK,CACR2J,OACA3Z,SACA+5D,QACAV,QACAzgD,OACA9H,QACArI,OACAiL,SAEJqF,GAAW/I,GAEnB,CA8CA,SAASiqD,GAAajqD,EAAKhQ,EAAQo6D,GAC/B,MAAMxvC,SAAEA,EAAQ7iB,OAAGA,GAAY/H,EAC/B,IAAIi0C,GAAQ,EACRomB,GAAW,EACfrqD,EAAIgI,YACJ,IAAK,MAAMkS,KAAWU,EAAS,CAC3B,MAAMvlB,MAAEA,EAAKC,IAAGA,GAAS4kB,EACnBpI,EAAa/Z,EAAO1C,GACpBuhC,EAAY7+B,EAAO2vD,GAAgBryD,EAAOC,EAAKyC,IACjDksC,GACAjkC,EAAIoI,OAAO0J,EAAW9yB,EAAG8yB,EAAW3gB,GACpC8yC,GAAQ,IAERjkC,EAAIqI,OAAOyJ,EAAW9yB,EAAGorE,GACzBpqD,EAAIqI,OAAOyJ,EAAW9yB,EAAG8yB,EAAW3gB,IAExCk5D,IAAar6D,EAAO8wD,YAAY9gD,EAAKka,EAAS,CAC1C+R,KAAMo+B,IAENA,EACArqD,EAAImI,YAEJnI,EAAIqI,OAAOuuB,EAAU53C,EAAGorE,EAEhC,CACApqD,EAAIqI,OAAOrY,EAAOi0C,QAAQjlD,EAAGorE,GAC7BpqD,EAAImI,YACJnI,EAAI0D,MACR,CACA,SAASwmD,GAAelqD,EAAKhQ,EAAQs6D,GACjC,MAAM1vC,SAAEA,EAAQ7iB,OAAGA,GAAY/H,EAC/B,IAAIi0C,GAAQ,EACRomB,GAAW,EACfrqD,EAAIgI,YACJ,IAAK,MAAMkS,KAAWU,EAAS,CAC3B,MAAMvlB,MAAEA,EAAKC,IAAGA,GAAS4kB,EACnBpI,EAAa/Z,EAAO1C,GACpBuhC,EAAY7+B,EAAO2vD,GAAgBryD,EAAOC,EAAKyC,IACjDksC,GACAjkC,EAAIoI,OAAO0J,EAAW9yB,EAAG8yB,EAAW3gB,GACpC8yC,GAAQ,IAERjkC,EAAIqI,OAAOiiD,EAAOx4C,EAAW3gB,GAC7B6O,EAAIqI,OAAOyJ,EAAW9yB,EAAG8yB,EAAW3gB,IAExCk5D,IAAar6D,EAAO8wD,YAAY9gD,EAAKka,EAAS,CAC1C+R,KAAMo+B,IAENA,EACArqD,EAAImI,YAEJnI,EAAIqI,OAAOiiD,EAAO1zB,EAAUzlC,EAEpC,CACA6O,EAAIqI,OAAOiiD,EAAOt6D,EAAOi0C,QAAQ9yC,GACjC6O,EAAImI,YACJnI,EAAI0D,MACR,CACA,SAAS8E,GAAKxI,EAAKqf,GACf,MAAM1V,KAAEA,EAAI3Z,OAAGA,EAAM+D,SAAGA,EAAQ1H,MAAGA,EAAKyU,MAAGA,EAAK4C,KAAGA,GAAU2b,EACvDzE,EAlgBV,SAAmBjR,EAAM3Z,EAAQ+D,GAC7B,MAAM6mB,EAAWjR,EAAKiR,SAChB7iB,EAAS4R,EAAK5R,OACdwyD,EAAUv6D,EAAO+H,OACjBzG,EAAQ,GACd,IAAK,MAAM4oB,KAAWU,EAAS,CAC3B,IAAIvlB,MAAEA,EAAKC,IAAGA,GAAS4kB,EACvB5kB,EAAMoyD,GAAgBryD,EAAOC,EAAKyC,GAClC,MAAM0L,EAASgkD,GAAW1zD,EAAUgE,EAAO1C,GAAQ0C,EAAOzC,GAAM4kB,EAAQ1X,MACxE,IAAKxS,EAAO4qB,SAAU,CAClBtpB,EAAMG,KAAK,CACP1B,OAAQmqB,EACRlqB,OAAQyT,EACRpO,MAAO0C,EAAO1C,GACdC,IAAKyC,EAAOzC,KAEhB,QACJ,CACA,MAAMk1D,EAAiB7vC,GAAe3qB,EAAQyT,GAC9C,IAAK,MAAMgnD,KAAOD,EAAe,CAC7B,MAAME,EAAYjD,GAAW1zD,EAAUw2D,EAAQE,EAAIp1D,OAAQk1D,EAAQE,EAAIn1D,KAAMm1D,EAAIjoD,MAC3EmoD,EAAc1wC,GAAcC,EAASniB,EAAQ2yD,GACnD,IAAK,MAAME,KAAcD,EACrBr5D,EAAMG,KAAK,CACP1B,OAAQ66D,EACR56D,OAAQy6D,EACRp1D,MAAO,CACHtB,CAACA,GAAW4zD,GAASlkD,EAAQinD,EAAW,QAASlvE,KAAKC,MAE1D6Z,IAAK,CACDvB,CAACA,GAAW4zD,GAASlkD,EAAQinD,EAAW,MAAOlvE,KAAKE,OAIpE,CACJ,CACA,OAAO4V,CACX,CA6dqB8wD,CAAUz4C,EAAM3Z,EAAQ+D,GACzC,IAAK,MAAQhE,OAAQ86D,EAAM76D,OAAQy6D,EAAGp1D,MAAGA,EAAKC,IAAGA,KAAUslB,EAAS,CAChE,MAAQhb,OAAOX,gBAAEA,EAAiB5S,GAAW,CAAA,GAAQw+D,EAC/CC,GAAsB,IAAX96D,EACjBgQ,EAAImG,OACJnG,EAAIsK,UAAYrL,EAChB8rD,GAAW/qD,EAAKc,EAAO4C,EAAMonD,GAAYrD,GAAW1zD,EAAUsB,EAAOC,IACrE0K,EAAIgI,YACJ,MAAMqiD,IAAa1gD,EAAKm3C,YAAY9gD,EAAK6qD,GACzC,IAAIroD,EACJ,GAAIsoD,EAAU,CACNT,EACArqD,EAAImI,YAEJ6iD,GAAmBhrD,EAAKhQ,EAAQsF,EAAKvB,GAEzC,MAAMk3D,IAAej7D,EAAO8wD,YAAY9gD,EAAKyqD,EAAK,CAC9Cx+B,KAAMo+B,EACN/6D,SAAS,IAEbkT,EAAO6nD,GAAYY,EACdzoD,GACDwoD,GAAmBhrD,EAAKhQ,EAAQqF,EAAOtB,EAE/C,CACAiM,EAAImI,YACJnI,EAAIwI,KAAKhG,EAAO,UAAY,WAC5BxC,EAAIuG,SACR,CACJ,CACA,SAASwkD,GAAW/qD,EAAKc,EAAO4C,EAAMD,GAClC,MAAM2Y,EAAYtb,EAAMtD,MAAM4e,WACxBroB,SAAEA,EAAQsB,MAAGA,EAAKC,IAAGA,GAASmO,GAAU,CAAA,EAC9C,GAAiB,MAAb1P,GAAiC,MAAbA,EAAkB,CACtC,IAAIsP,EAAMH,EAAKC,EAAOC,EACL,MAAbrP,GACAsP,EAAOhO,EACP6N,EAAMkZ,EAAUlZ,IAChBC,EAAQ7N,EACR8N,EAASgZ,EAAUhZ,SAEnBC,EAAO+Y,EAAU/Y,KACjBH,EAAM7N,EACN8N,EAAQiZ,EAAUjZ,MAClBC,EAAS9N,GAEb0K,EAAIgI,YACAtE,IACAL,EAAO7nB,KAAKC,IAAI4nB,EAAMK,EAAKL,MAC3BF,EAAQ3nB,KAAKE,IAAIynB,EAAOO,EAAKP,OAC7BD,EAAM1nB,KAAKC,IAAIynB,EAAKQ,EAAKR,KACzBE,EAAS5nB,KAAKE,IAAI0nB,EAAQM,EAAKN,SAEnCpD,EAAIuI,KAAKlF,EAAMH,EAAKC,EAAQE,EAAMD,EAASF,GAC3ClD,EAAI0D,MACR,CACJ,CACA,SAASsnD,GAAmBhrD,EAAKhQ,EAAQgJ,EAAOjF,GAC5C,MAAMm3D,EAAoBl7D,EAAOpD,YAAYoM,EAAOjF,GAChDm3D,GACAlrD,EAAIqI,OAAO6iD,EAAkBlsE,EAAGksE,EAAkB/5D,EAE1D,CAEG,IAACrB,GAAKwO,EAAA,SAAG,CACRzQ,GAAI,SACJs9D,mBAAAA,CAAqB3tD,EAAO2nD,EAAO50D,GAC/B,MAAM2H,GAASsF,EAAMiI,KAAKtG,UAAY,IAAIhV,OACpCwG,EAAU,GAChB,IAAImH,EAAM/Z,EAAG4rB,EAAM5Z,EACnB,IAAIhS,EAAI,EAAGA,EAAIma,IAASna,EACpB+Z,EAAO0F,EAAMgpB,eAAezoC,GAC5B4rB,EAAO7R,EAAKU,QACZzI,EAAS,KACL4Z,GAAQA,EAAKpZ,SAAWoZ,aAAgBu4C,KACxCnyD,EAAS,CACL+S,QAAStF,EAAMo2B,iBAAiB71C,GAChC+R,MAAO/R,EACPyqB,KAAM4/C,GAAYz+C,EAAM5rB,EAAGma,GAC3BsF,QACA/E,KAAMX,EAAKorB,WAAW3yB,QAAQ4P,UAC9BW,MAAOhJ,EAAKO,OACZsR,SAGR7R,EAAKszD,QAAUr7D,EACfY,EAAQc,KAAK1B,GAEjB,IAAIhS,EAAI,EAAGA,EAAIma,IAASna,EACpBgS,EAASY,EAAQ5S,GACZgS,IAA0B,IAAhBA,EAAOyY,OAGtBzY,EAAOyY,KAAOy/C,GAAet3D,EAAS5S,EAAGwS,EAAQ23D,WAEzD,EACAmD,UAAAA,CAAY7tD,EAAO2nD,EAAO50D,GACtB,MAAMqtB,EAA4B,eAArBrtB,EAAQ+6D,SACfvpC,EAAWvkB,EAAMm8B,+BACjB/wB,EAAOpL,EAAM4e,UACnB,IAAI,IAAIr+B,EAAIgkC,EAAS53B,OAAS,EAAGpM,GAAK,IAAKA,EAAE,CACzC,MAAMgS,EAASgyB,EAAShkC,GAAGqtE,QACtBr7D,IAGLA,EAAO4Z,KAAKktB,oBAAoBjuB,EAAM7Y,EAAO0I,MACzCmlB,GAAQ7tB,EAAOyY,MACfqhD,GAAUrsD,EAAMwC,IAAKjQ,EAAQ6Y,GAErC,CACJ,EACA2iD,kBAAAA,CAAoB/tD,EAAO2nD,EAAO50D,GAC9B,GAAyB,uBAArBA,EAAQ+6D,SACR,OAEJ,MAAMvpC,EAAWvkB,EAAMm8B,+BACvB,IAAI,IAAI57C,EAAIgkC,EAAS53B,OAAS,EAAGpM,GAAK,IAAKA,EAAE,CACzC,MAAMgS,EAASgyB,EAAShkC,GAAGqtE,QACvBpD,GAAiBj4D,IACjB85D,GAAUrsD,EAAMwC,IAAKjQ,EAAQyN,EAAM4e,UAE3C,CACJ,EACAovC,iBAAAA,CAAmBhuD,EAAOvO,EAAMsB,GAC5B,MAAMR,EAASd,EAAK6I,KAAKszD,QACpBpD,GAAiBj4D,IAAgC,sBAArBQ,EAAQ+6D,UAGzCzB,GAAUrsD,EAAMwC,IAAKjQ,EAAQyN,EAAM4e,UACvC,EACApa,SAAU,CACNkmD,WAAW,EACXoD,SAAU,uBAIlB,MAAMG,GAAaA,CAACC,EAAWvc,KAC3B,IAAIwc,UAAEA,EAAWxc,EAAQyc,SAAGA,EAAUzc,GAAcuc,EAKpD,OAJIA,EAAUG,gBACVF,EAAYnwE,KAAKE,IAAIiwE,EAAWxc,GAChCyc,EAAWF,EAAUI,iBAAmBtwE,KAAKE,IAAIkwE,EAAUzc,IAExD,CACHyc,WACAD,YACAI,WAAYvwE,KAAKC,IAAI0zD,EAAUwc,KAIvC,MAAMK,WAAehpB,GACpBv3C,WAAAA,CAAYi1B,GACL2O,QACAxjC,KAAKogE,QAAS,EACdpgE,KAAKqgE,eAAiB,GAC7BrgE,KAAKsgE,aAAe,KACbtgE,KAAKugE,cAAe,EACpBvgE,KAAK2R,MAAQkjB,EAAOljB,MACpB3R,KAAK0E,QAAUmwB,EAAOnwB,QACtB1E,KAAKmU,IAAM0gB,EAAO1gB,IAClBnU,KAAKwgE,iBAAchvE,EACnBwO,KAAKygE,iBAAcjvE,EACnBwO,KAAK0gE,gBAAalvE,EAClBwO,KAAKirB,eAAYz5B,EACjBwO,KAAKwf,cAAWhuB,EAChBwO,KAAKqX,SAAM7lB,EACXwO,KAAKuX,YAAS/lB,EACdwO,KAAKwX,UAAOhmB,EACZwO,KAAKsX,WAAQ9lB,EACbwO,KAAKqb,YAAS7pB,EACdwO,KAAK0Y,WAAQlnB,EACbwO,KAAK+5C,cAAWvoD,EAChBwO,KAAK4tC,cAAWp8C,EAChBwO,KAAKS,YAASjP,EACdwO,KAAKmwC,cAAW3+C,CACpB,CACA2iC,MAAAA,CAAO3U,EAAUyL,EAAWD,GACxBhrB,KAAKwf,SAAWA,EAChBxf,KAAKirB,UAAYA,EACjBjrB,KAAK+5C,SAAW/uB,EAChBhrB,KAAK47C,gBACL57C,KAAK2gE,cACL3gE,KAAK88C,KACT,CACAlB,aAAAA,GACQ57C,KAAK2jC,gBACL3jC,KAAK0Y,MAAQ1Y,KAAKwf,SAClBxf,KAAKwX,KAAOxX,KAAK+5C,SAASviC,KAC1BxX,KAAKsX,MAAQtX,KAAK0Y,QAElB1Y,KAAKqb,OAASrb,KAAKirB,UACnBjrB,KAAKqX,IAAMrX,KAAK+5C,SAAS1iC,IACzBrX,KAAKuX,OAASvX,KAAKqb,OAE3B,CACAslD,WAAAA,GACI,MAAMd,EAAY7/D,KAAK0E,QAAQ63B,QAAU,CAAA,EACzC,IAAIikC,EAAct9D,EAAS28D,EAAUx4B,eAAgB,CACjDrnC,KAAK2R,OACN3R,OAAS,GACR6/D,EAAUv7C,SACVk8C,EAAcA,EAAYl8C,OAAQje,GAAOw5D,EAAUv7C,OAAOje,EAAMrG,KAAK2R,MAAMiI,QAE3EimD,EAAUx+B,OACVm/B,EAAcA,EAAYn/B,KAAK,CAAC5wC,EAAGC,IAAImvE,EAAUx+B,KAAK5wC,EAAGC,EAAGsP,KAAK2R,MAAMiI,QAEvE5Z,KAAK0E,QAAQjB,SACb+8D,EAAY/8D,UAEhBzD,KAAKwgE,YAAcA,CACvB,CACA1jB,GAAAA,GACI,MAAMp4C,QAAEA,EAAOyP,IAAGA,GAASnU,KAC3B,IAAK0E,EAAQ+S,QAET,YADAzX,KAAK0Y,MAAQ1Y,KAAKqb,OAAS,GAG/B,MAAMwkD,EAAYn7D,EAAQ63B,OACpBqkC,EAAY//C,GAAOg/C,EAAUhsD,MAC7ByvC,EAAWsd,EAAUx6D,KACrBi4C,EAAcr+C,KAAK6gE,uBACnBd,SAAEA,EAAQG,WAAGA,GAAgBN,GAAWC,EAAWvc,GACzD,IAAI5qC,EAAO2C,EACXlH,EAAIN,KAAO+sD,EAAU7mD,OACjB/Z,KAAK2jC,gBACLjrB,EAAQ1Y,KAAKwf,SACbnE,EAASrb,KAAK8gE,SAASziB,EAAaiF,EAAUyc,EAAUG,GAAc,KAEtE7kD,EAASrb,KAAKirB,UACdvS,EAAQ1Y,KAAK+gE,SAAS1iB,EAAauiB,EAAWb,EAAUG,GAAc,IAE1ElgE,KAAK0Y,MAAQ/oB,KAAKE,IAAI6oB,EAAOhU,EAAQ8a,UAAYxf,KAAKwf,UACtDxf,KAAKqb,OAAS1rB,KAAKE,IAAIwrB,EAAQ3W,EAAQumB,WAAajrB,KAAKirB,UAC7D,CACH61C,QAAAA,CAASziB,EAAaiF,EAAUyc,EAAUG,GACnC,MAAM/rD,IAAEA,EAAGqL,SAAGA,EAAW9a,SAAW63B,QAAQnlB,QAAEA,KAAmBpX,KAC3DghE,EAAWhhE,KAAKqgE,eAAiB,GACjCK,EAAa1gE,KAAK0gE,WAAa,CACjC,GAEE1sD,EAAaksD,EAAa9oD,EAChC,IAAI6pD,EAAc5iB,EAClBlqC,EAAIgL,UAAY,OAChBhL,EAAIiL,aAAe,SACnB,IAAI8hD,GAAM,EACN7pD,GAAOrD,EAkBX,OAjBAhU,KAAKwgE,YAAYt1D,QAAQ,CAACq8B,EAAYr1C,KAClC,MAAMm7B,EAAY0yC,EAAWzc,EAAW,EAAInvC,EAAI8F,YAAYstB,EAAW3uB,MAAMF,OACnE,IAANxmB,GAAWwuE,EAAWA,EAAWpiE,OAAS,GAAK+uB,EAAY,EAAIjW,EAAUoI,KACzEyhD,GAAejtD,EACf0sD,EAAWA,EAAWpiE,QAAUpM,EAAI,EAAI,EAAI,IAAM,EAClDmlB,GAAOrD,EACPktD,KAEJF,EAAS9uE,GAAK,CACVslB,KAAM,EACNH,MACA6pD,MACAxoD,MAAO2U,EACPhS,OAAQ6kD,GAEZQ,EAAWA,EAAWpiE,OAAS,IAAM+uB,EAAYjW,IAE9C6pD,CACX,CACAF,QAAAA,CAAS1iB,EAAauiB,EAAWb,EAAUoB,GACvC,MAAMhtD,IAAEA,EAAG8W,UAAGA,EAAYvmB,SAAW63B,QAAQnlB,QAAEA,KAAmBpX,KAC5DghE,EAAWhhE,KAAKqgE,eAAiB,GACjCI,EAAczgE,KAAKygE,YAAc,GACjCW,EAAcn2C,EAAYozB,EAChC,IAAIgjB,EAAajqD,EACbkqD,EAAkB,EAClBC,EAAmB,EACnB/pD,EAAO,EACPgqD,EAAM,EA4BV,OA3BAxhE,KAAKwgE,YAAYt1D,QAAQ,CAACq8B,EAAYr1C,KAClC,MAAMm7B,UAAEA,EAAS6yC,WAAGA,GAqRhC,SAA2BH,EAAUa,EAAWzsD,EAAKozB,EAAY45B,GAC7D,MAAM9zC,EAOV,SAA4Bka,EAAYw4B,EAAUa,EAAWzsD,GACzD,IAAIstD,EAAiBl6B,EAAW3uB,KAIhC,OAHI6oD,GAA4C,iBAAnBA,IACzBA,EAAiBA,EAAe/uC,OAAO,CAACjiC,EAAGC,IAAID,EAAE6N,OAAS5N,EAAE4N,OAAS7N,EAAIC,IAEtEqvE,EAAWa,EAAUx6D,KAAO,EAAI+N,EAAI8F,YAAYwnD,GAAgB/oD,KAC3E,CAbsBgpD,CAAmBn6B,EAAYw4B,EAAUa,EAAWzsD,GAChE+rD,EAaV,SAA6BiB,EAAa55B,EAAYo6B,GAClD,IAAIzB,EAAaiB,EAIjB,MAH+B,iBAApB55B,EAAW3uB,OAClBsnD,EAAa0B,GAA0Br6B,EAAYo6B,IAEhDzB,CACX,CAnBuB2B,CAAoBV,EAAa55B,EAAYq5B,EAAU5sD,YAC1E,MAAO,CACHqZ,YACA6yC,aAER,CA5RgD4B,CAAkB/B,EAAUa,EAAWzsD,EAAKozB,EAAY45B,GACxFjvE,EAAI,GAAKqvE,EAAmBrB,EAAa,EAAI9oD,EAAUgqD,IACvDC,GAAcC,EAAkBlqD,EAChCqpD,EAAY76D,KAAK,CACb8S,MAAO4oD,EACPjmD,OAAQkmD,IAEZ/pD,GAAQ8pD,EAAkBlqD,EAC1BoqD,IACAF,EAAkBC,EAAmB,GAEzCP,EAAS9uE,GAAK,CACVslB,OACAH,IAAKkqD,EACLC,MACA9oD,MAAO2U,EACPhS,OAAQ6kD,GAEZoB,EAAkB3xE,KAAKC,IAAI0xE,EAAiBj0C,GAC5Ck0C,GAAoBrB,EAAa9oD,IAErCiqD,GAAcC,EACdb,EAAY76D,KAAK,CACb8S,MAAO4oD,EACPjmD,OAAQkmD,IAELF,CACX,CACAU,cAAAA,GACI,IAAK/hE,KAAK0E,QAAQ+S,QACd,OAEJ,MAAM4mC,EAAcr+C,KAAK6gE,uBACjBR,eAAgBW,EAAWt8D,SAASoH,MAAEA,EAAQywB,QAAQnlB,QAAEA,GAAU4V,IAAGA,IAAYhtB,KACnFgiE,EAAYj1C,GAAcC,EAAKhtB,KAAKwX,KAAMxX,KAAK0Y,OACrD,GAAI1Y,KAAK2jC,eAAgB,CACrB,IAAIu9B,EAAM,EACN1pD,EAAOzL,GAAeD,EAAO9L,KAAKwX,KAAOJ,EAASpX,KAAKsX,MAAQtX,KAAK0gE,WAAWQ,IACnF,IAAK,MAAMe,KAAUjB,EACbE,IAAQe,EAAOf,MACfA,EAAMe,EAAOf,IACb1pD,EAAOzL,GAAeD,EAAO9L,KAAKwX,KAAOJ,EAASpX,KAAKsX,MAAQtX,KAAK0gE,WAAWQ,KAEnFe,EAAO5qD,KAAOrX,KAAKqX,IAAMgnC,EAAcjnC,EACvC6qD,EAAOzqD,KAAOwqD,EAAU50C,WAAW40C,EAAU7uE,EAAEqkB,GAAOyqD,EAAOvpD,OAC7DlB,GAAQyqD,EAAOvpD,MAAQtB,CAE/B,KAAO,CACH,IAAIoqD,EAAM,EACNnqD,EAAMtL,GAAeD,EAAO9L,KAAKqX,IAAMgnC,EAAcjnC,EAASpX,KAAKuX,OAASvX,KAAKygE,YAAYe,GAAKnmD,QACtG,IAAK,MAAM4mD,KAAUjB,EACbiB,EAAOT,MAAQA,IACfA,EAAMS,EAAOT,IACbnqD,EAAMtL,GAAeD,EAAO9L,KAAKqX,IAAMgnC,EAAcjnC,EAASpX,KAAKuX,OAASvX,KAAKygE,YAAYe,GAAKnmD,SAEtG4mD,EAAO5qD,IAAMA,EACb4qD,EAAOzqD,MAAQxX,KAAKwX,KAAOJ,EAC3B6qD,EAAOzqD,KAAOwqD,EAAU50C,WAAW40C,EAAU7uE,EAAE8uE,EAAOzqD,MAAOyqD,EAAOvpD,OACpErB,GAAO4qD,EAAO5mD,OAASjE,CAE/B,CACJ,CACAusB,YAAAA,GACI,MAAiC,QAA1B3jC,KAAK0E,QAAQkpC,UAAgD,WAA1B5tC,KAAK0E,QAAQkpC,QAC3D,CACA7b,IAAAA,GACI,GAAI/xB,KAAK0E,QAAQ+S,QAAS,CACtB,MAAMtD,EAAMnU,KAAKmU,IACjB8I,GAAS9I,EAAKnU,MACdA,KAAKkiE,QACLhlD,GAAW/I,EACf,CACJ,CACH+tD,KAAAA,GACO,MAAQx9D,QAASqZ,EAAI0iD,YAAGA,EAAWC,WAAGA,EAAUvsD,IAAGA,GAASnU,MACtD8L,MAAEA,EAAQywB,OAAQsjC,GAAe9hD,EACjCokD,EAAehsD,GAAS3V,MACxBwhE,EAAYj1C,GAAchP,EAAKiP,IAAKhtB,KAAKwX,KAAMxX,KAAK0Y,OACpDkoD,EAAY//C,GAAOg/C,EAAUhsD,OAC7BuD,QAAEA,GAAayoD,EACfvc,EAAWsd,EAAUx6D,KACrBg8D,EAAe9e,EAAW,EAChC,IAAI+e,EACJriE,KAAK8iD,YACL3uC,EAAIgL,UAAY6iD,EAAU7iD,UAAU,QACpChL,EAAIiL,aAAe,SACnBjL,EAAI6D,UAAY,GAChB7D,EAAIN,KAAO+sD,EAAU7mD,OACrB,MAAMgmD,SAAEA,EAAQD,UAAGA,EAASI,WAAGA,GAAgBN,GAAWC,EAAWvc,GAqD/D3f,EAAe3jC,KAAK2jC,eACpB0a,EAAcr+C,KAAK6gE,sBAErBwB,EADA1+B,EACS,CACLxwC,EAAG4Y,GAAeD,EAAO9L,KAAKwX,KAAOJ,EAASpX,KAAKsX,MAAQopD,EAAW,IACtEp7D,EAAGtF,KAAKqX,IAAMD,EAAUinC,EACxBvgC,KAAM,GAGD,CACL3qB,EAAG6M,KAAKwX,KAAOJ,EACf9R,EAAGyG,GAAeD,EAAO9L,KAAKqX,IAAMgnC,EAAcjnC,EAASpX,KAAKuX,OAASkpD,EAAY,GAAGplD,QACxFyC,KAAM,GAGd0P,GAAsBxtB,KAAKmU,IAAK4J,EAAKukD,eACrC,MAAMtuD,EAAaksD,EAAa9oD,EAChCpX,KAAKwgE,YAAYt1D,QAAQ,CAACq8B,EAAYr1C,KAClCiiB,EAAIqK,YAAc+oB,EAAWD,UAC7BnzB,EAAIsK,UAAY8oB,EAAWD,UAC3B,MAAMttB,EAAY7F,EAAI8F,YAAYstB,EAAW3uB,MAAMF,MAC7CyG,EAAY6iD,EAAU7iD,UAAUooB,EAAWpoB,YAAcooB,EAAWpoB,UAAY0gD,EAAU1gD,YAC1FzG,EAAQqnD,EAAWqC,EAAepoD,EACxC,IAAI7mB,EAAIkvE,EAAOlvE,EACXmS,EAAI+8D,EAAO/8D,EAiBf,GAhBA08D,EAAU90C,SAASltB,KAAK0Y,OACpBirB,EACIzxC,EAAI,GAAKiB,EAAIulB,EAAQtB,EAAUpX,KAAKsX,QACpChS,EAAI+8D,EAAO/8D,GAAK0O,EAChBquD,EAAOvkD,OACP3qB,EAAIkvE,EAAOlvE,EAAI4Y,GAAeD,EAAO9L,KAAKwX,KAAOJ,EAASpX,KAAKsX,MAAQopD,EAAW2B,EAAOvkD,QAEtF5rB,EAAI,GAAKoT,EAAI0O,EAAahU,KAAKuX,SACtCpkB,EAAIkvE,EAAOlvE,EAAIA,EAAIstE,EAAY4B,EAAOvkD,MAAMpF,MAAQtB,EACpDirD,EAAOvkD,OACPxY,EAAI+8D,EAAO/8D,EAAIyG,GAAeD,EAAO9L,KAAKqX,IAAMgnC,EAAcjnC,EAASpX,KAAKuX,OAASkpD,EAAY4B,EAAOvkD,MAAMzC,SAvFhG,SAASloB,EAAGmS,EAAGiiC,GACjC,GAAIx/B,MAAMg4D,IAAaA,GAAY,GAAKh4D,MAAM+3D,IAAcA,EAAY,EACpE,OAEJ3rD,EAAImG,OACJ,MAAMtC,EAAYnV,EAAe0kC,EAAWvvB,UAAW,GAQvD,GAPA7D,EAAIsK,UAAY5b,EAAe0kC,EAAW9oB,UAAW0jD,GACrDhuD,EAAIugD,QAAU7xD,EAAe0kC,EAAWmtB,QAAS,QACjDvgD,EAAIsuC,eAAiB5/C,EAAe0kC,EAAWkb,eAAgB,GAC/DtuC,EAAIm/C,SAAWzwD,EAAe0kC,EAAW+rB,SAAU,SACnDn/C,EAAI6D,UAAYA,EAChB7D,EAAIqK,YAAc3b,EAAe0kC,EAAW/oB,YAAa2jD,GACzDhuD,EAAIquC,YAAY3/C,EAAe0kC,EAAWg7B,SAAU,KAChD1C,EAAUG,cAAe,CACzB,MAAMwC,EAAc,CAChBzmD,OAAQ+jD,EAAYnwE,KAAK8yE,MAAQ,EACjC5mD,WAAY0rB,EAAW1rB,WACvBC,SAAUyrB,EAAWzrB,SACrBc,YAAa5E,GAEX+xB,EAAUi4B,EAAU70C,MAAMh6B,EAAG4sE,EAAW,GAE9CxkD,GAAgBpH,EAAKquD,EAAaz4B,EADlBzkC,EAAI88D,EACgCvC,EAAUI,iBAAmBF,EACrF,KAAO,CACH,MAAM2C,EAAUp9D,EAAI3V,KAAKC,KAAK0zD,EAAWwc,GAAa,EAAG,GACnD6C,EAAWX,EAAU50C,WAAWj6B,EAAG4sE,GACnC7O,EAAevwC,GAAc4mB,EAAW2pB,cAC9C/8C,EAAIgI,YACAle,OAAOsT,OAAO2/C,GAAcrK,KAAMt3D,GAAU,IAANA,GACtCmwB,GAAmBvL,EAAK,CACpBhhB,EAAGwvE,EACHr9D,EAAGo9D,EACH1wE,EAAG+tE,EACHrwE,EAAGowE,EACH/jD,OAAQm1C,IAGZ/8C,EAAIuI,KAAKimD,EAAUD,EAAS3C,EAAUD,GAE1C3rD,EAAIwI,OACc,IAAd3E,GACA7D,EAAI0I,QAEZ,CACA1I,EAAIuG,SACR,CA6CIkoD,CADcZ,EAAU7uE,EAAEA,GACLmS,EAAGiiC,GACxBp0C,ED9yPO0vE,EAAC/2D,EAAO0L,EAAMF,EAAO0V,IAE7BlhB,KADOkhB,EAAM,OAAS,SACJ1V,EAAkB,WAAVxL,GAAsB0L,EAAOF,GAAS,EAAIE,EC4yP/DqrD,CAAO1jD,EAAWhsB,EAAI4sE,EAAWqC,EAAcz+B,EAAexwC,EAAIulB,EAAQ1Y,KAAKsX,MAAOyG,EAAKiP,KA7ClF,SAAS75B,EAAGmS,EAAGiiC,GAC5BzoB,GAAW3K,EAAKozB,EAAW3uB,KAAMzlB,EAAGmS,EAAI46D,EAAa,EAAGU,EAAW,CAC/D5iD,cAAeupB,EAAWlK,OAC1Ble,UAAW6iD,EAAU7iD,UAAUooB,EAAWpoB,YAElD,CAyCIM,CAASuiD,EAAU7uE,EAAEA,GAAImS,EAAGiiC,GACxB5D,EACA0+B,EAAOlvE,GAAKulB,EAAQtB,OACjB,GAA+B,iBAApBmwB,EAAW3uB,KAAmB,CAC5C,MAAM+oD,EAAiBf,EAAU5sD,WACjCquD,EAAO/8D,GAAKs8D,GAA0Br6B,EAAYo6B,GAAkBvqD,CACxE,MACIirD,EAAO/8D,GAAK0O,IAGpB8Z,GAAqB9tB,KAAKmU,IAAK4J,EAAKukD,cACxC,CACHxf,SAAAA,GACO,MAAM/kC,EAAO/d,KAAK0E,QACZy5C,EAAYpgC,EAAKpF,MACjBmqD,EAAYjiD,GAAOs9B,EAAUtqC,MAC7BkvD,EAAeniD,GAAUu9B,EAAU/mC,SACzC,IAAK+mC,EAAU1mC,QACX,OAEJ,MAAMuqD,EAAYj1C,GAAchP,EAAKiP,IAAKhtB,KAAKwX,KAAMxX,KAAK0Y,OACpDvE,EAAMnU,KAAKmU,IACXy5B,EAAWuQ,EAAUvQ,SACrBw0B,EAAeU,EAAU18D,KAAO,EAChC48D,EAA6BD,EAAa1rD,IAAM+qD,EACtD,IAAI98D,EACAkS,EAAOxX,KAAKwX,KACZgI,EAAWxf,KAAK0Y,MACpB,GAAI1Y,KAAK2jC,eACLnkB,EAAW7vB,KAAKC,OAAOoQ,KAAK0gE,YAC5Bp7D,EAAItF,KAAKqX,IAAM2rD,EACfxrD,EAAOzL,GAAegS,EAAKjS,MAAO0L,EAAMxX,KAAKsX,MAAQkI,OAClD,CACH,MAAMyL,EAAYjrB,KAAKygE,YAAY/tC,OAAO,CAACC,EAAKvsB,IAAOzW,KAAKC,IAAI+iC,EAAKvsB,EAAKiV,QAAS,GACnF/V,EAAI09D,EAA6Bj3D,GAAegS,EAAKjS,MAAO9L,KAAKqX,IAAKrX,KAAKuX,OAAS0T,EAAYlN,EAAKwe,OAAOnlB,QAAUpX,KAAK6gE,sBAC/H,CACA,MAAM1tE,EAAI4Y,GAAe6hC,EAAUp2B,EAAMA,EAAOgI,GAChDrL,EAAIgL,UAAY6iD,EAAU7iD,UAAUtT,GAAmB+hC,IACvDz5B,EAAIiL,aAAe,SACnBjL,EAAIqK,YAAc2/B,EAAU39C,MAC5B2T,EAAIsK,UAAY0/B,EAAU39C,MAC1B2T,EAAIN,KAAOivD,EAAU/oD,OACrB+E,GAAW3K,EAAKgqC,EAAUvlC,KAAMzlB,EAAGmS,EAAGw9D,EAC1C,CACHjC,mBAAAA,GACO,MAAM1iB,EAAYn+C,KAAK0E,QAAQiU,MACzBmqD,EAAYjiD,GAAOs9B,EAAUtqC,MAC7BkvD,EAAeniD,GAAUu9B,EAAU/mC,SACzC,OAAO+mC,EAAU1mC,QAAUqrD,EAAU9uD,WAAa+uD,EAAa1nD,OAAS,CAC5E,CACH4nD,gBAAAA,CAAiB9vE,EAAGmS,GACb,IAAIpT,EAAGgxE,EAAQC,EACf,GAAIn5D,GAAW7W,EAAG6M,KAAKwX,KAAMxX,KAAKsX,QAAUtN,GAAW1E,EAAGtF,KAAKqX,IAAKrX,KAAKuX,QAErE,IADA4rD,EAAKnjE,KAAKqgE,eACNnuE,EAAI,EAAGA,EAAIixE,EAAG7kE,SAAUpM,EAExB,GADAgxE,EAASC,EAAGjxE,GACR8X,GAAW7W,EAAG+vE,EAAO1rD,KAAM0rD,EAAO1rD,KAAO0rD,EAAOxqD,QAAU1O,GAAW1E,EAAG49D,EAAO7rD,IAAK6rD,EAAO7rD,IAAM6rD,EAAO7nD,QACxG,OAAOrb,KAAKwgE,YAAYtuE,GAIpC,OAAO,IACX,CACHkxE,WAAAA,CAAYvyE,GACL,MAAMktB,EAAO/d,KAAK0E,QAClB,IAyDR,SAAoB7E,EAAMke,GACtB,QAAc,cAATle,GAAiC,aAATA,IAAyBke,EAAKnJ,UAAWmJ,EAAKslD,aAGvEtlD,EAAKlJ,SAAqB,UAAThV,GAA6B,YAATA,EAI7C,CAjEayjE,CAAWzyE,EAAEgP,KAAMke,GACpB,OAEJ,MAAMwlD,EAAcvjE,KAAKijE,iBAAiBpyE,EAAEsC,EAAGtC,EAAEyU,GACjD,GAAe,cAAXzU,EAAEgP,MAAmC,aAAXhP,EAAEgP,KAAqB,CACjD,MAAMud,EAAWpd,KAAKsgE,aAChBkD,GA3XK9yE,EA2X2B6yE,EA3XjB,QAAb9yE,EA2XoB2sB,IA3XO,OAAN1sB,GAAcD,EAAEuT,eAAiBtT,EAAEsT,cAAgBvT,EAAEwT,QAAUvT,EAAEuT,OA4X1FmZ,IAAaomD,GACbtgE,EAAS6a,EAAKslD,QAAS,CACnBxyE,EACAusB,EACApd,MACDA,MAEPA,KAAKsgE,aAAeiD,EAChBA,IAAgBC,GAChBtgE,EAAS6a,EAAKnJ,QAAS,CACnB/jB,EACA0yE,EACAvjE,MACDA,KAEX,MAAWujE,GACPrgE,EAAS6a,EAAKlJ,QAAS,CACnBhkB,EACA0yE,EACAvjE,MACDA,MAhZIyjE,IAAChzE,EAAGC,CAkZnB,EAwBJ,SAASkxE,GAA0Br6B,EAAYo6B,GAE3C,OAAOA,GADap6B,EAAW3uB,KAAO2uB,EAAW3uB,KAAKta,OAAS,EAEnE,CAUG,IAAColE,GAAajxD,EAAA,SAAG,CAChBzQ,GAAI,SACP2hE,SAAUxD,GACP32D,KAAAA,CAAOmI,EAAO2nD,EAAO50D,GACjB,MAAM0iC,EAASz1B,EAAMy1B,OAAS,IAAI+4B,GAAO,CACrChsD,IAAKxC,EAAMwC,IACXzP,UACAiN,UAEJ+9B,GAAQ3a,UAAUpjB,EAAOy1B,EAAQ1iC,GACjCgrC,GAAQmC,OAAOlgC,EAAOy1B,EAC1B,EACAtU,IAAAA,CAAMnhB,GACF+9B,GAAQsC,UAAUrgC,EAAOA,EAAMy1B,eACxBz1B,EAAMy1B,MACjB,EACAqU,YAAAA,CAAc9pC,EAAO2nD,EAAO50D,GACxB,MAAM0iC,EAASz1B,EAAMy1B,OACrBsI,GAAQ3a,UAAUpjB,EAAOy1B,EAAQ1iC,GACjC0iC,EAAO1iC,QAAUA,CACrB,EACAs4C,WAAAA,CAAarrC,GACT,MAAMy1B,EAASz1B,EAAMy1B,OACrBA,EAAOu5B,cACPv5B,EAAO26B,gBACX,EACA6B,UAAAA,CAAYjyD,EAAOvO,GACVA,EAAKgtD,QACNz+C,EAAMy1B,OAAOg8B,YAAYhgE,EAAKwmB,MAEtC,EACAzT,SAAU,CACNsB,SAAS,EACTm2B,SAAU,MACV9hC,MAAO,SACPqkC,UAAU,EACV1sC,SAAS,EACThD,OAAQ,IACRoU,OAAAA,CAAShkB,EAAG02C,EAAYH,GACpB,MAAMnjC,EAAQsjC,EAAWvjC,aACnB6/D,EAAKz8B,EAAOz1B,MACdkyD,EAAG97B,iBAAiB9jC,IACpB4/D,EAAG3sD,KAAKjT,GACRsjC,EAAWlK,QAAS,IAEpBwmC,EAAG9sD,KAAK9S,GACRsjC,EAAWlK,QAAS,EAE5B,EACAzoB,QAAS,KACTyuD,QAAS,KACT9mC,OAAQ,CACJ/7B,MAAQ2T,GAAMA,EAAIxC,MAAMjN,QAAQlE,MAChCu/D,SAAU,GACV3oD,QAAS,GACTiwB,cAAAA,CAAgB11B,GACZ,MAAM2B,EAAW3B,EAAMiI,KAAKtG,UACpBipB,QAAQyjC,cAAEA,EAAankD,WAAGA,EAAUsD,UAAGA,EAAS3e,MAAGA,EAAKsjE,gBAAGA,EAAe5S,aAAGA,IAAqBv/C,EAAMy1B,OAAO1iC,QACvH,OAAOiN,EAAMwkB,yBAAyB3jC,IAAKyZ,IACvC,MAAM8H,EAAQ9H,EAAKorB,WAAW5K,SAASuzC,EAAgB,OAAIxuE,GACrDorB,EAAcgE,GAAU7M,EAAM6I,aACpC,MAAO,CACHhE,KAAMtF,EAASrH,EAAKhI,OAAO45B,MAC3Bpf,UAAW1K,EAAMX,gBACjBk0B,UAAW9mC,EACX68B,QAASpxB,EAAKgL,QACdy9C,QAAS3gD,EAAMkc,eACfsyC,SAAUxuD,EAAMmc,WAChBuyB,eAAgB1uC,EAAMoc,iBACtBmjC,SAAUv/C,EAAMqc,gBAChBpY,WAAY4E,EAAYlE,MAAQkE,EAAYvB,QAAU,EACtDmD,YAAazK,EAAMV,YACnBwI,WAAYA,GAAc9H,EAAM8H,WAChCC,SAAU/H,EAAM+H,SAChBqD,UAAWA,GAAapL,EAAMoL,UAC9B+xC,aAAc4S,IAAoB5S,GAAgBn9C,EAAMm9C,cACxDltD,aAAciI,EAAKhI,QAExBjE,KACP,GAEJ2Y,MAAO,CACHnY,MAAQ2T,GAAMA,EAAIxC,MAAMjN,QAAQlE,MAChCiX,SAAS,EACTm2B,SAAU,SACVh1B,KAAM,KAGdjG,YAAa,CACTyD,YAAcZ,IAAQA,EAAKa,WAAW,MACtCkmB,OAAQ,CACJnmB,YAAcZ,IAAQ,CACd,iBACA,SACA,QACFjD,SAASiD,OAK3B,MAAMuuD,WAAc5sB,GACnBv3C,WAAAA,CAAYi1B,GACL2O,QACAxjC,KAAK2R,MAAQkjB,EAAOljB,MACpB3R,KAAK0E,QAAUmwB,EAAOnwB,QACtB1E,KAAKmU,IAAM0gB,EAAO1gB,IAClBnU,KAAKgkE,cAAWxyE,EAChBwO,KAAKqX,SAAM7lB,EACXwO,KAAKuX,YAAS/lB,EACdwO,KAAKwX,UAAOhmB,EACZwO,KAAKsX,WAAQ9lB,EACbwO,KAAK0Y,WAAQlnB,EACbwO,KAAKqb,YAAS7pB,EACdwO,KAAK4tC,cAAWp8C,EAChBwO,KAAKS,YAASjP,EACdwO,KAAKmwC,cAAW3+C,CACpB,CACA2iC,MAAAA,CAAO3U,EAAUyL,GACb,MAAMlN,EAAO/d,KAAK0E,QAGlB,GAFA1E,KAAKwX,KAAO,EACZxX,KAAKqX,IAAM,GACN0G,EAAKtG,QAEN,YADAzX,KAAK0Y,MAAQ1Y,KAAKqb,OAASrb,KAAKsX,MAAQtX,KAAKuX,OAAS,GAG1DvX,KAAK0Y,MAAQ1Y,KAAKsX,MAAQkI,EAC1Bxf,KAAKqb,OAASrb,KAAKuX,OAAS0T,EAC5B,MAAM42B,EAAYtvD,EAAQwrB,EAAKnF,MAAQmF,EAAKnF,KAAKta,OAAS,EAC1D0B,KAAKgkE,SAAWpjD,GAAU7C,EAAK3G,SAC/B,MAAM6sD,EAAWpiB,EAAYhhC,GAAO9C,EAAKlK,MAAMG,WAAahU,KAAKgkE,SAAS3oD,OACtErb,KAAK2jC,eACL3jC,KAAKqb,OAAS4oD,EAEdjkE,KAAK0Y,MAAQurD,CAErB,CACAtgC,YAAAA,GACI,MAAMja,EAAM1pB,KAAK0E,QAAQkpC,SACzB,MAAe,QAARlkB,GAAyB,WAARA,CAC5B,CACAw6C,SAAAA,CAAUxsD,GACN,MAAML,IAAEA,EAAGG,KAAGA,EAAID,OAAGA,EAAMD,MAAGA,EAAK5S,QAAGA,GAAa1E,KAC7C8L,EAAQpH,EAAQoH,MACtB,IACI0T,EAAUujC,EAAQC,EADlBlnC,EAAW,EAkBf,OAhBI9b,KAAK2jC,gBACLof,EAASh3C,GAAeD,EAAO0L,EAAMF,GACrC0rC,EAAS3rC,EAAMK,EACf8H,EAAWlI,EAAQE,IAEM,SAArB9S,EAAQkpC,UACRmV,EAASvrC,EAAOE,EAChBsrC,EAASj3C,GAAeD,EAAOyL,EAAQF,GACvCyE,GAAgB,GAALvV,KAEXw8C,EAASzrC,EAAQI,EACjBsrC,EAASj3C,GAAeD,EAAOuL,EAAKE,GACpCuE,EAAgB,GAALvV,IAEfiZ,EAAWjI,EAASF,GAEjB,CACH0rC,SACAC,SACAxjC,WACA1D,WAER,CACAiW,IAAAA,GACI,MAAM5d,EAAMnU,KAAKmU,IACX4J,EAAO/d,KAAK0E,QAClB,IAAKqZ,EAAKtG,QACN,OAEJ,MAAM0sD,EAAWtjD,GAAO9C,EAAKlK,MAEvB6D,EADaysD,EAASnwD,WACA,EAAIhU,KAAKgkE,SAAS3sD,KACxC0rC,OAAEA,EAAMC,OAAGA,EAAMxjC,SAAGA,EAAQ1D,SAAGA,GAAc9b,KAAKkkE,UAAUxsD,GAClEoH,GAAW3K,EAAK4J,EAAKnF,KAAM,EAAG,EAAGurD,EAAU,CACvC3jE,MAAOud,EAAKvd,MACZgf,WACA1D,WACAqD,UAAWtT,GAAmBkS,EAAKjS,OACnCsT,aAAc,SACdF,YAAa,CACT6jC,EACAC,IAGZ,EAYD,IAACohB,GAAY3xD,EAAA,QAAG,CACfzQ,GAAI,QACP2hE,SAAUI,GACPv6D,KAAAA,CAAOmI,EAAO2nD,EAAO50D,IAbzB,SAAqBiN,EAAOwsC,GACxB,MAAMxlC,EAAQ,IAAIorD,GAAM,CACpB5vD,IAAKxC,EAAMwC,IACXzP,QAASy5C,EACTxsC,UAEJ+9B,GAAQ3a,UAAUpjB,EAAOgH,EAAOwlC,GAChCzO,GAAQmC,OAAOlgC,EAAOgH,GACtBhH,EAAM0yD,WAAa1rD,CACvB,CAKQ2rD,CAAY3yD,EAAOjN,EACvB,EACAouB,IAAAA,CAAMnhB,GACF,MAAM0yD,EAAa1yD,EAAM0yD,WACzB30B,GAAQsC,UAAUrgC,EAAO0yD,UAClB1yD,EAAM0yD,UACjB,EACA5oB,YAAAA,CAAc9pC,EAAO2nD,EAAO50D,GACxB,MAAMiU,EAAQhH,EAAM0yD,WACpB30B,GAAQ3a,UAAUpjB,EAAOgH,EAAOjU,GAChCiU,EAAMjU,QAAUA,CACpB,EACAyR,SAAU,CACNrK,MAAO,SACP2L,SAAS,EACT5D,KAAM,CACFpT,OAAQ,QAEZ0vC,UAAU,EACV/4B,QAAS,GACTw2B,SAAU,MACVh1B,KAAM,GACNnY,OAAQ,KAEZqjD,cAAe,CACXtjD,MAAO,SAEXmS,YAAa,CACTyD,aAAa,EACbE,YAAY,KAIpB,MAAM9jB,GAAM,IAAI+xE,QACb,IAACC,GAAe/xD,EAAA,WAAG,CAClBzQ,GAAI,WACJwH,KAAAA,CAAOmI,EAAO2nD,EAAO50D,GACjB,MAAMiU,EAAQ,IAAIorD,GAAM,CACpB5vD,IAAKxC,EAAMwC,IACXzP,UACAiN,UAEJ+9B,GAAQ3a,UAAUpjB,EAAOgH,EAAOjU,GAChCgrC,GAAQmC,OAAOlgC,EAAOgH,GACtBnmB,GAAI6Y,IAAIsG,EAAOgH,EACnB,EACAma,IAAAA,CAAMnhB,GACF+9B,GAAQsC,UAAUrgC,EAAOnf,GAAIye,IAAIU,IACjCnf,GAAI0xB,OAAOvS,EACf,EACA8pC,YAAAA,CAAc9pC,EAAO2nD,EAAO50D,GACxB,MAAMiU,EAAQnmB,GAAIye,IAAIU,GACtB+9B,GAAQ3a,UAAUpjB,EAAOgH,EAAOjU,GAChCiU,EAAMjU,QAAUA,CACpB,EACAyR,SAAU,CACNrK,MAAO,SACP2L,SAAS,EACT5D,KAAM,CACFpT,OAAQ,UAEZ0vC,UAAU,EACV/4B,QAAS,EACTw2B,SAAU,MACVh1B,KAAM,GACNnY,OAAQ,MAEZqjD,cAAe,CACXtjD,MAAO,SAEXmS,YAAa,CACTyD,aAAa,EACbE,YAAY,KAIpB,MAAMmuD,GAAc,CACnBC,OAAAA,CAASt5D,GACF,IAAKA,EAAM9M,OACP,OAAO,EAEX,IAAIpM,EAAG6N,EACH4kE,EAAO,IAAIr5D,IACXhG,EAAI,EACJ+G,EAAQ,EACZ,IAAIna,EAAI,EAAG6N,EAAMqL,EAAM9M,OAAQpM,EAAI6N,IAAO7N,EAAE,CACxC,MAAMq6B,EAAKnhB,EAAMlZ,GAAGg3B,QACpB,GAAIqD,GAAMA,EAAG8qB,WAAY,CACrB,MAAM3tB,EAAM6C,EAAG6qB,kBACfutB,EAAK1gD,IAAIyF,EAAIv2B,GACbmS,GAAKokB,EAAIpkB,IACP+G,CACN,CACJ,CACA,OAAc,IAAVA,GAA6B,IAAds4D,EAAKv+D,MAMjB,CACHjT,EAJa,IACVwxE,GACLjyC,OAAO,CAACjiC,EAAGC,IAAID,EAAIC,GAAKi0E,EAAKv+D,KAG3Bd,EAAGA,EAAI+G,EAEf,EACH+iC,OAAAA,CAAShkC,EAAOw5D,GACT,IAAKx5D,EAAM9M,OACP,SAEJ,IAGIpM,EAAG6N,EAAK8kE,EAHR1xE,EAAIyxE,EAAczxE,EAClBmS,EAAIs/D,EAAct/D,EAClBopC,EAAcjsC,OAAOkE,kBAEzB,IAAIzU,EAAI,EAAG6N,EAAMqL,EAAM9M,OAAQpM,EAAI6N,IAAO7N,EAAE,CACxC,MAAMq6B,EAAKnhB,EAAMlZ,GAAGg3B,QACpB,GAAIqD,GAAMA,EAAG8qB,WAAY,CACrB,MACMzmD,EAAIsY,GAAsB07D,EADjBr4C,EAAGoiB,kBAEd/9C,EAAI89C,IACJA,EAAc99C,EACdi0E,EAAiBt4C,EAEzB,CACJ,CACA,GAAIs4C,EAAgB,CAChB,MAAMC,EAAKD,EAAeztB,kBAC1BjkD,EAAI2xE,EAAG3xE,EACPmS,EAAIw/D,EAAGx/D,CACX,CACA,MAAO,CACHnS,IACAmS,IAER,GAEJ,SAASy/D,GAAaxpC,EAAMypC,GAQxB,OAPIA,IACIzyE,EAAQyyE,GACR1yE,MAAM6P,UAAUyD,KAAKtC,MAAMi4B,EAAMypC,GAEjCzpC,EAAK31B,KAAKo/D,IAGXzpC,CACX,CACC,SAAS0pC,GAAcryE,GACpB,OAAoB,iBAARA,GAAoBA,aAAesyE,SAAWtyE,EAAI4R,QAAQ,SAC3D5R,EAAI8S,MAAM,MAEd9S,CACX,CACC,SAASuyE,GAAkBxzD,EAAOtL,GAC/B,MAAM6iB,QAAEA,EAAOllB,aAAGA,EAAYC,MAAGA,GAAWoC,EACtCgxB,EAAa1lB,EAAMgpB,eAAe32B,GAAcqzB,YAChDwG,MAAEA,EAAK37B,MAAGA,GAAWm1B,EAAWuG,iBAAiB35B,GACvD,MAAO,CACH0N,QACAksB,QACAnY,OAAQ2R,EAAWuF,UAAU34B,GAC7Bm6B,IAAKzsB,EAAMiI,KAAKtG,SAAStP,GAAc4V,KAAK3V,GAC5CmhE,eAAgBljE,EAChByK,QAAS0qB,EAAWwC,aACpBsE,UAAWl6B,EACXD,eACAklB,UAER,CACC,SAASm8C,GAAeC,EAAS5gE,GAC9B,MAAMyP,EAAMmxD,EAAQ3zD,MAAMwC,KACpBoxD,KAAEA,EAAIC,OAAGA,EAAM7sD,MAAGA,GAAW2sD,GAC7BvF,SAAEA,EAAQD,UAAGA,GAAep7D,EAC5B+gE,EAAW5kD,GAAOnc,EAAQ+gE,UAC1B3C,EAAYjiD,GAAOnc,EAAQo+D,WAC3B4C,EAAa7kD,GAAOnc,EAAQghE,YAC5BC,EAAiBhtD,EAAMra,OACvBsnE,EAAkBJ,EAAOlnE,OACzBunE,EAAoBN,EAAKjnE,OACzB8Y,EAAUwJ,GAAUlc,EAAQ0S,SAClC,IAAIiE,EAASjE,EAAQiE,OACjB3C,EAAQ,EACRotD,EAAqBP,EAAK7yC,OAAO,CAACrmB,EAAO05D,IAAW15D,EAAQ05D,EAASC,OAAO1nE,OAASynE,EAAShnD,MAAMzgB,OAASynE,EAASE,MAAM3nE,OAAQ,GACxIwnE,GAAsBR,EAAQY,WAAW5nE,OAASgnE,EAAQa,UAAU7nE,OAChEqnE,IACAtqD,GAAUsqD,EAAiB7C,EAAU9uD,YAAc2xD,EAAiB,GAAKjhE,EAAQ0hE,aAAe1hE,EAAQ2hE,mBAExGP,IAEAzqD,GAAUwqD,GADanhE,EAAQ4hE,cAAgB32E,KAAKC,IAAIkwE,EAAW2F,EAASzxD,YAAcyxD,EAASzxD,aACnD8xD,EAAqBD,GAAqBJ,EAASzxD,YAAc8xD,EAAqB,GAAKphE,EAAQ6hE,aAEnJX,IACAvqD,GAAU3W,EAAQ8hE,gBAAkBZ,EAAkBF,EAAW1xD,YAAc4xD,EAAkB,GAAKlhE,EAAQ+hE,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS7oD,GAC1BpF,EAAQ/oB,KAAKC,IAAI8oB,EAAOvE,EAAI8F,YAAY6D,GAAMpF,MAAQguD,EAC1D,EAiBA,OAhBAvyD,EAAImG,OACJnG,EAAIN,KAAOivD,EAAU/oD,OACrBxW,EAAK+hE,EAAQ3sD,MAAOguD,GACpBxyD,EAAIN,KAAO4xD,EAAS1rD,OACpBxW,EAAK+hE,EAAQY,WAAW9kC,OAAOkkC,EAAQa,WAAYQ,GACnDD,EAAehiE,EAAQ4hE,cAAgBvG,EAAW,EAAIr7D,EAAQ+rC,WAAa,EAC3EltC,EAAKgiE,EAAOQ,IACRxiE,EAAKwiE,EAASC,OAAQW,GACtBpjE,EAAKwiE,EAAShnD,MAAO4nD,GACrBpjE,EAAKwiE,EAASE,MAAOU,KAEzBD,EAAe,EACfvyD,EAAIN,KAAO6xD,EAAW3rD,OACtBxW,EAAK+hE,EAAQE,OAAQmB,GACrBxyD,EAAIuG,UACJhC,GAAStB,EAAQsB,MACV,CACHA,QACA2C,SAER,CAoBA,SAASurD,GAAgBj1D,EAAOjN,EAAS0B,EAAMygE,GAC3C,MAAM1zE,EAAEA,EAACulB,MAAGA,GAAWtS,GACfsS,MAAOouD,EAAav2C,WAAW/Y,KAAEA,EAAIF,MAAGA,IAAc3F,EAC9D,IAAIo1D,EAAS,SAWb,MAVe,WAAXF,EACAE,EAAS5zE,IAAMqkB,EAAOF,GAAS,EAAI,OAAS,QACrCnkB,GAAKulB,EAAQ,EACpBquD,EAAS,OACF5zE,GAAK2zE,EAAapuD,EAAQ,IACjCquD,EAAS,SAnBjB,SAA6BA,EAAQp1D,EAAOjN,EAAS0B,GACjD,MAAMjT,EAAEA,EAACulB,MAAGA,GAAWtS,EACjB4gE,EAAQtiE,EAAQuiE,UAAYviE,EAAQwiE,aAC1C,MAAe,SAAXH,GAAqB5zE,EAAIulB,EAAQsuD,EAAQr1D,EAAM+G,OAGpC,UAAXquD,GAAsB5zE,EAAIulB,EAAQsuD,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQp1D,EAAOjN,EAAS0B,KAC5C2gE,EAAS,UAENA,CACX,CACC,SAASK,GAAmBz1D,EAAOjN,EAAS0B,GACzC,MAAMygE,EAASzgE,EAAKygE,QAAUniE,EAAQmiE,QApC1C,SAAyBl1D,EAAOvL,GAC5B,MAAMd,EAAEA,EAAC+V,OAAGA,GAAYjV,EACxB,OAAId,EAAI+V,EAAS,EACN,MACA/V,EAAIqM,EAAM0J,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoDgsD,CAAgB11D,EAAOvL,GACvE,MAAO,CACH2gE,OAAQ3gE,EAAK2gE,QAAUriE,EAAQqiE,QAAUH,GAAgBj1D,EAAOjN,EAAS0B,EAAMygE,GAC/EA,SAER,CAqBC,SAASS,GAAmB5iE,EAAS0B,EAAMmhE,EAAW51D,GACnD,MAAMs1D,UAAEA,EAASC,aAAGA,EAAYxrD,aAAGA,GAAkBhX,GAC/CqiE,OAAEA,EAAMF,OAAGA,GAAYU,EACvBC,EAAiBP,EAAYC,GAC7BvnD,QAAEA,EAAOG,SAAGA,EAAQF,WAAGA,EAAUC,YAAGA,GAAiBc,GAAcjF,GACzE,IAAIvoB,EAzBR,SAAgBiT,EAAM2gE,GAClB,IAAI5zE,EAAEA,EAACulB,MAAGA,GAAWtS,EAMrB,MALe,UAAX2gE,EACA5zE,GAAKulB,EACa,WAAXquD,IACP5zE,GAAKulB,EAAQ,GAEVvlB,CACX,CAiBYs0E,CAAOrhE,EAAM2gE,GACrB,MAAMzhE,EAjBV,SAAgBc,EAAMygE,EAAQW,GAC1B,IAAIliE,EAAEA,EAAC+V,OAAGA,GAAYjV,EAQtB,MAPe,QAAXygE,EACAvhE,GAAKkiE,EAELliE,GADkB,WAAXuhE,EACFxrD,EAASmsD,EAETnsD,EAAS,EAEX/V,CACX,CAOcoiE,CAAOthE,EAAMygE,EAAQW,GAY/B,MAXe,WAAXX,EACe,SAAXE,EACA5zE,GAAKq0E,EACa,UAAXT,IACP5zE,GAAKq0E,GAES,SAAXT,EACP5zE,GAAKxD,KAAKC,IAAI+vB,EAASC,GAAcqnD,EACnB,UAAXF,IACP5zE,GAAKxD,KAAKC,IAAIkwB,EAAUD,GAAeonD,GAEpC,CACH9zE,EAAG4W,GAAY5W,EAAG,EAAGwe,EAAM+G,MAAQtS,EAAKsS,OACxCpT,EAAGyE,GAAYzE,EAAG,EAAGqM,EAAM0J,OAASjV,EAAKiV,QAEjD,CACA,SAASssD,GAAYrC,EAASx5D,EAAOpH,GACjC,MAAM0S,EAAUwJ,GAAUlc,EAAQ0S,SAClC,MAAiB,WAAVtL,EAAqBw5D,EAAQnyE,EAAImyE,EAAQ5sD,MAAQ,EAAc,UAAV5M,EAAoBw5D,EAAQnyE,EAAImyE,EAAQ5sD,MAAQtB,EAAQE,MAAQguD,EAAQnyE,EAAIikB,EAAQI,IACpJ,CACC,SAASowD,GAAwB1kE,GAC9B,OAAO6hE,GAAa,GAAIE,GAAc/hE,GAC1C,CAQA,SAAS2kE,GAAkBx2C,EAAW7d,GAClC,MAAM8B,EAAW9B,GAAWA,EAAQ7G,SAAW6G,EAAQ7G,QAAQ24D,SAAW9xD,EAAQ7G,QAAQ24D,QAAQj0C,UAClG,OAAO/b,EAAW+b,EAAU/b,SAASA,GAAY+b,CACrD,CACA,MAAMy2C,GAAmB,CACrBC,YAAajmE,EACb6W,KAAAA,CAAOqvD,GACH,GAAIA,EAAa1pE,OAAS,EAAG,CACzB,MAAM+H,EAAO2hE,EAAa,GACpBzrC,EAASl2B,EAAKsL,MAAMiI,KAAK2iB,OACzB0rC,EAAa1rC,EAASA,EAAOj+B,OAAS,EAC5C,GAAI0B,MAAQA,KAAK0E,SAAiC,YAAtB1E,KAAK0E,QAAQ8P,KACrC,OAAOnO,EAAKsG,QAAQkxB,OAAS,GAC1B,GAAIx3B,EAAKw3B,MACZ,OAAOx3B,EAAKw3B,MACT,GAAIoqC,EAAa,GAAK5hE,EAAK83B,UAAY8pC,EAC1C,OAAO1rC,EAAOl2B,EAAK83B,UAE3B,CACA,MAAO,EACX,EACA+pC,WAAYpmE,EACZokE,WAAYpkE,EACZqmE,YAAarmE,EACb+7B,KAAAA,CAAOuqC,GACH,GAAIpoE,MAAQA,KAAK0E,SAAiC,YAAtB1E,KAAK0E,QAAQ8P,KACrC,OAAO4zD,EAAYvqC,MAAQ,KAAOuqC,EAAYhD,gBAAkBgD,EAAYhD,eAEhF,IAAIvnC,EAAQuqC,EAAYz7D,QAAQkxB,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAM37B,EAAQkmE,EAAYhD,eAI1B,OAHKnjE,EAAcC,KACf27B,GAAS37B,GAEN27B,CACX,EACAwqC,UAAAA,CAAYD,GACR,MACM1jE,EADO0jE,EAAYz2D,MAAMgpB,eAAeytC,EAAYpkE,cACrCqzB,WAAW5K,SAAS27C,EAAYjqC,WACrD,MAAO,CACH9qB,YAAa3O,EAAQ2O,YACrBD,gBAAiB1O,EAAQ0O,gBACzBwJ,YAAalY,EAAQkY,YACrBsT,WAAYxrB,EAAQwrB,WACpBC,iBAAkBzrB,EAAQyrB,iBAC1B+gC,aAAc,EAEtB,EACAoX,cAAAA,GACI,OAAOtoE,KAAK0E,QAAQ6jE,SACxB,EACAC,eAAAA,CAAiBJ,GACb,MACM1jE,EADO0jE,EAAYz2D,MAAMgpB,eAAeytC,EAAYpkE,cACrCqzB,WAAW5K,SAAS27C,EAAYjqC,WACrD,MAAO,CACHtiB,WAAYnX,EAAQmX,WACpBC,SAAUpX,EAAQoX,SAE1B,EACA2sD,WAAY3mE,EACZqkE,UAAWrkE,EACX4mE,aAAc5mE,EACd0jE,OAAQ1jE,EACR6mE,YAAa7mE,GAEhB,SAAS8mE,GAA2Bv3C,EAAW7b,EAAMrB,EAAKkxC,GACvD,MAAM57B,EAAS4H,EAAU7b,GAAMnT,KAAK8R,EAAKkxC,GACzC,YAAsB,IAAX57B,EACAq+C,GAAiBtyD,GAAMnT,KAAK8R,EAAKkxC,GAErC57B,CACX,CACA,MAAMo/C,WAAgB1xB,GACrB3e,mBAAqBisC,GAClB7kE,WAAAA,CAAYi1B,GACR2O,QACAxjC,KAAK8oE,QAAU,EACf9oE,KAAKgyB,QAAU,GACfhyB,KAAK+oE,oBAAiBv3E,EACtBwO,KAAKgpE,WAAQx3E,EACbwO,KAAKipE,uBAAoBz3E,EACzBwO,KAAKkpE,cAAgB,GACrBlpE,KAAKu1B,iBAAc/jC,EACnBwO,KAAKm5B,cAAW3nC,EAChBwO,KAAK2R,MAAQkjB,EAAOljB,MACpB3R,KAAK0E,QAAUmwB,EAAOnwB,QACtB1E,KAAKmpE,gBAAa33E,EAClBwO,KAAK2Y,WAAQnnB,EACbwO,KAAKkmE,gBAAa10E,EAClBwO,KAAKulE,UAAO/zE,EACZwO,KAAKmmE,eAAY30E,EACjBwO,KAAKwlE,YAASh0E,EACdwO,KAAK+mE,YAASv1E,EACdwO,KAAK6mE,YAASr1E,EACdwO,KAAK7M,OAAI3B,EACTwO,KAAKsF,OAAI9T,EACTwO,KAAKqb,YAAS7pB,EACdwO,KAAK0Y,WAAQlnB,EACbwO,KAAKopE,YAAS53E,EACdwO,KAAKqpE,YAAS73E,EACdwO,KAAKspE,iBAAc93E,EACnBwO,KAAKupE,sBAAmB/3E,EACxBwO,KAAKwpE,qBAAkBh4E,CAC3B,CACA+nC,UAAAA,CAAW70B,GACP1E,KAAK0E,QAAUA,EACf1E,KAAKipE,uBAAoBz3E,EACzBwO,KAAKm5B,cAAW3nC,CACpB,CACHqtC,kBAAAA,GACO,MAAMxG,EAASr4B,KAAKipE,kBACpB,GAAI5wC,EACA,OAAOA,EAEX,MAAM1mB,EAAQ3R,KAAK2R,MACbjN,EAAU1E,KAAK0E,QAAQif,WAAW3jB,KAAKkb,cACvC6C,EAAOrZ,EAAQuzC,SAAWtmC,EAAMjN,QAAQyO,WAAazO,EAAQsS,WAC7DA,EAAa,IAAI4d,GAAW50B,KAAK2R,MAAOoM,GAI9C,OAHIA,EAAKgE,aACL/hB,KAAKipE,kBAAoBhrE,OAAO2gC,OAAO5nB,IAEpCA,CACX,CACHkE,UAAAA,GACO,OAAOlb,KAAKm5B,WAAan5B,KAAKm5B,UArIRnU,EAqIwChlB,KAAK2R,MAAMuJ,aArI3CoqD,EAqIyDtlE,KArIhDgoE,EAqIsDhoE,KAAKkpE,cApI/F7nD,GAAc2D,EAAQ,CACzBsgD,UACA0C,eACAnoE,KAAM,cAJd,IAA8BmlB,EAAQsgD,EAAS0C,CAsI3C,CACAyB,QAAAA,CAASj2D,EAAS9O,GACd,MAAM2sB,UAAEA,GAAe3sB,EACjBqjE,EAAca,GAA2Bv3C,EAAW,cAAerxB,KAAMwT,GACzEmF,EAAQiwD,GAA2Bv3C,EAAW,QAASrxB,KAAMwT,GAC7D00D,EAAaU,GAA2Bv3C,EAAW,aAAcrxB,KAAMwT,GAC7E,IAAIuL,EAAQ,GAIZ,OAHAA,EAAQgmD,GAAahmD,EAAOkmD,GAAc8C,IAC1ChpD,EAAQgmD,GAAahmD,EAAOkmD,GAActsD,IAC1CoG,EAAQgmD,GAAahmD,EAAOkmD,GAAciD,IACnCnpD,CACX,CACA2qD,aAAAA,CAAc1B,EAActjE,GACxB,OAAOkjE,GAAwBgB,GAA2BlkE,EAAQ2sB,UAAW,aAAcrxB,KAAMgoE,GACrG,CACA2B,OAAAA,CAAQ3B,EAActjE,GAClB,MAAM2sB,UAAEA,GAAe3sB,EACjBklE,EAAY,GAalB,OAZArmE,EAAKykE,EAAex0D,IAChB,MAAMuyD,EAAW,CACbC,OAAQ,GACRjnD,MAAO,GACPknD,MAAO,IAEL4D,EAAShC,GAAkBx2C,EAAW7d,GAC5CuxD,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAe7pE,KAAMwT,KACpGuxD,GAAagB,EAAShnD,MAAO6pD,GAA2BiB,EAAQ,QAAS7pE,KAAMwT,IAC/EuxD,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAc7pE,KAAMwT,KAClGo2D,EAAUhkE,KAAKmgE,KAEZ6D,CACX,CACAE,YAAAA,CAAa9B,EAActjE,GACvB,OAAOkjE,GAAwBgB,GAA2BlkE,EAAQ2sB,UAAW,YAAarxB,KAAMgoE,GACpG,CACA+B,SAAAA,CAAU/B,EAActjE,GACpB,MAAM2sB,UAAEA,GAAe3sB,EACjBgkE,EAAeE,GAA2Bv3C,EAAW,eAAgBrxB,KAAMgoE,GAC3ExC,EAASoD,GAA2Bv3C,EAAW,SAAUrxB,KAAMgoE,GAC/DW,EAAcC,GAA2Bv3C,EAAW,cAAerxB,KAAMgoE,GAC/E,IAAIjpD,EAAQ,GAIZ,OAHAA,EAAQgmD,GAAahmD,EAAOkmD,GAAcyD,IAC1C3pD,EAAQgmD,GAAahmD,EAAOkmD,GAAcO,IAC1CzmD,EAAQgmD,GAAahmD,EAAOkmD,GAAc0D,IACnC5pD,CACX,CACHirD,YAAAA,CAAatlE,GACN,MAAMmS,EAAS7W,KAAKgyB,QACdpY,EAAO5Z,KAAK2R,MAAMiI,KAClB0vD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIt3E,EAAG6N,EADHioE,EAAe,GAEnB,IAAI91E,EAAI,EAAG6N,EAAM8W,EAAOvY,OAAQpM,EAAI6N,IAAO7N,EACvC81E,EAAapiE,KAAKu/D,GAAkBnlE,KAAK2R,MAAOkF,EAAO3kB,KAkB3D,OAhBIwS,EAAQ4f,SACR0jD,EAAeA,EAAa1jD,OAAO,CAAC4E,EAASjlB,EAAOgE,IAAQvD,EAAQ4f,OAAO4E,EAASjlB,EAAOgE,EAAO2R,KAElGlV,EAAQulE,WACRjC,EAAeA,EAAa3mC,KAAK,CAAC5wC,EAAGC,IAAIgU,EAAQulE,SAASx5E,EAAGC,EAAGkpB,KAEpErW,EAAKykE,EAAex0D,IAChB,MAAMq2D,EAAShC,GAAkBnjE,EAAQ2sB,UAAW7d,GACpD81D,EAAY1jE,KAAKgjE,GAA2BiB,EAAQ,aAAc7pE,KAAMwT,IACxE+1D,EAAiB3jE,KAAKgjE,GAA2BiB,EAAQ,kBAAmB7pE,KAAMwT,IAClFg2D,EAAgB5jE,KAAKgjE,GAA2BiB,EAAQ,iBAAkB7pE,KAAMwT,MAEpFxT,KAAKspE,YAAcA,EACnBtpE,KAAKupE,iBAAmBA,EACxBvpE,KAAKwpE,gBAAkBA,EACvBxpE,KAAKmpE,WAAanB,EACXA,CACX,CACA7zC,MAAAA,CAAOrmB,EAASsiD,GACZ,MAAM1rD,EAAU1E,KAAK0E,QAAQif,WAAW3jB,KAAKkb,cACvCrE,EAAS7W,KAAKgyB,QACpB,IAAIpb,EACAoxD,EAAe,GACnB,GAAKnxD,EAAOvY,OAML,CACH,MAAMsvC,EAAW62B,GAAY//D,EAAQkpC,UAAUvrC,KAAKrC,KAAM6W,EAAQ7W,KAAK+oE,gBACvEf,EAAehoE,KAAKgqE,aAAatlE,GACjC1E,KAAK2Y,MAAQ3Y,KAAKypE,SAASzB,EAActjE,GACzC1E,KAAKkmE,WAAalmE,KAAK0pE,cAAc1B,EAActjE,GACnD1E,KAAKulE,KAAOvlE,KAAK2pE,QAAQ3B,EAActjE,GACvC1E,KAAKmmE,UAAYnmE,KAAK8pE,aAAa9B,EAActjE,GACjD1E,KAAKwlE,OAASxlE,KAAK+pE,UAAU/B,EAActjE,GAC3C,MAAM0B,EAAOpG,KAAKgpE,MAAQ3D,GAAerlE,KAAM0E,GACzCwlE,EAAkBjsE,OAAOoB,OAAO,CAAA,EAAIuuC,EAAUxnC,GAC9CmhE,EAAYH,GAAmBpnE,KAAK2R,MAAOjN,EAASwlE,GACpDC,EAAkB7C,GAAmB5iE,EAASwlE,EAAiB3C,EAAWvnE,KAAK2R,OACrF3R,KAAK+mE,OAASQ,EAAUR,OACxB/mE,KAAK6mE,OAASU,EAAUV,OACxBjwD,EAAa,CACTkyD,QAAS,EACT31E,EAAGg3E,EAAgBh3E,EACnBmS,EAAG6kE,EAAgB7kE,EACnBoT,MAAOtS,EAAKsS,MACZ2C,OAAQjV,EAAKiV,OACb+tD,OAAQx7B,EAASz6C,EACjBk2E,OAAQz7B,EAAStoC,EAEzB,MA5ByB,IAAjBtF,KAAK8oE,UACLlyD,EAAa,CACTkyD,QAAS,IA2BrB9oE,KAAKkpE,cAAgBlB,EACrBhoE,KAAKm5B,cAAW3nC,EACZolB,GACA5W,KAAK6+B,qBAAqB1K,OAAOn0B,KAAM4W,GAEvC9I,GAAWpJ,EAAQ0lE,UACnB1lE,EAAQ0lE,SAAS/nE,KAAKrC,KAAM,CACxB2R,MAAO3R,KAAK2R,MACZ2zD,QAAStlE,KACTowD,UAGZ,CACAia,SAAAA,CAAUC,EAAcn2D,EAAK/N,EAAM1B,GAC/B,MAAM6lE,EAAgBvqE,KAAKwqE,iBAAiBF,EAAclkE,EAAM1B,GAChEyP,EAAIqI,OAAO+tD,EAAcxpB,GAAIwpB,EAAcvpB,IAC3C7sC,EAAIqI,OAAO+tD,EAActpB,GAAIspB,EAAcrpB,IAC3C/sC,EAAIqI,OAAO+tD,EAAcE,GAAIF,EAAcG,GAC/C,CACAF,gBAAAA,CAAiBF,EAAclkE,EAAM1B,GACjC,MAAMqiE,OAAEA,EAAMF,OAAGA,GAAY7mE,MACvBinE,UAAEA,EAASvrD,aAAGA,GAAkBhX,GAChCib,QAAEA,EAAOG,SAAGA,EAAQF,WAAGA,EAAUC,YAAGA,GAAiBc,GAAcjF,IACjEvoB,EAAGw3E,EAAMrlE,EAAGslE,GAASN,GACvB5xD,MAAEA,EAAK2C,OAAGA,GAAYjV,EAC5B,IAAI26C,EAAIE,EAAIwpB,EAAIzpB,EAAIE,EAAIwpB,EAoCxB,MAnCe,WAAX7D,GACA3lB,EAAK0pB,EAAMvvD,EAAS,EACL,SAAX0rD,GACAhmB,EAAK4pB,EACL1pB,EAAKF,EAAKkmB,EACVjmB,EAAKE,EAAK+lB,EACVyD,EAAKxpB,EAAK+lB,IAEVlmB,EAAK4pB,EAAMjyD,EACXuoC,EAAKF,EAAKkmB,EACVjmB,EAAKE,EAAK+lB,EACVyD,EAAKxpB,EAAK+lB,GAEdwD,EAAK1pB,IAGDE,EADW,SAAX8lB,EACK4D,EAAMh7E,KAAKC,IAAI+vB,EAASC,GAAcqnD,EACzB,UAAXF,EACF4D,EAAMjyD,EAAQ/oB,KAAKC,IAAIkwB,EAAUD,GAAeonD,EAEhDjnE,KAAKopE,OAEC,QAAXvC,GACA7lB,EAAK4pB,EACL1pB,EAAKF,EAAKimB,EACVlmB,EAAKE,EAAKgmB,EACVwD,EAAKxpB,EAAKgmB,IAEVjmB,EAAK4pB,EAAMvvD,EACX6lC,EAAKF,EAAKimB,EACVlmB,EAAKE,EAAKgmB,EACVwD,EAAKxpB,EAAKgmB,GAEdyD,EAAK1pB,GAEF,CACHD,KACAE,KACAwpB,KACAzpB,KACAE,KACAwpB,KAER,CACA5nB,SAAAA,CAAUj7B,EAAI1T,EAAKzP,GACf,MAAMiU,EAAQ3Y,KAAK2Y,MACbra,EAASqa,EAAMra,OACrB,IAAIwkE,EAAWsD,EAAcl0E,EAC7B,GAAIoM,EAAQ,CACR,MAAM0jE,EAAYj1C,GAAcroB,EAAQsoB,IAAKhtB,KAAK7M,EAAG6M,KAAK0Y,OAQ1D,IAPAmP,EAAG10B,EAAIw0E,GAAY3nE,KAAM0E,EAAQk1C,WAAYl1C,GAC7CyP,EAAIgL,UAAY6iD,EAAU7iD,UAAUza,EAAQk1C,YAC5CzlC,EAAIiL,aAAe,SACnB0jD,EAAYjiD,GAAOnc,EAAQo+D,WAC3BsD,EAAe1hE,EAAQ0hE,aACvBjyD,EAAIsK,UAAY/Z,EAAQmmE,WACxB12D,EAAIN,KAAOivD,EAAU/oD,OACjB7nB,EAAI,EAAGA,EAAIoM,IAAUpM,EACrBiiB,EAAIsL,SAAS9G,EAAMzmB,GAAI8vE,EAAU7uE,EAAE00B,EAAG10B,GAAI00B,EAAGviB,EAAIw9D,EAAU9uD,WAAa,GACxE6T,EAAGviB,GAAKw9D,EAAU9uD,WAAaoyD,EAC3Bl0E,EAAI,IAAMoM,IACVupB,EAAGviB,GAAKZ,EAAQ2hE,kBAAoBD,EAGhD,CACJ,CACH0E,aAAAA,CAAc32D,EAAK0T,EAAI31B,EAAG8vE,EAAWt9D,GAC9B,MAAM2jE,EAAaroE,KAAKspE,YAAYp3E,GAC9Bs2E,EAAkBxoE,KAAKupE,iBAAiBr3E,IACxC4tE,UAAEA,EAASC,SAAGA,GAAcr7D,EAC5B+gE,EAAW5kD,GAAOnc,EAAQ+gE,UAC1BsF,EAASpD,GAAY3nE,KAAM,OAAQ0E,GACnCsmE,EAAYhJ,EAAU7uE,EAAE43E,GACxBE,EAAUnL,EAAY2F,EAASzxD,YAAcyxD,EAASzxD,WAAa8rD,GAAa,EAAI,EACpFoL,EAASrjD,EAAGviB,EAAI2lE,EACtB,GAAIvmE,EAAQs7D,cAAe,CACvB,MAAMwC,EAAc,CAChBzmD,OAAQpsB,KAAKE,IAAIkwE,EAAUD,GAAa,EACxCjkD,WAAY2sD,EAAgB3sD,WAC5BC,SAAU0sD,EAAgB1sD,SAC1Bc,YAAa,GAEXmtB,EAAUi4B,EAAU50C,WAAW49C,EAAWjL,GAAYA,EAAW,EACjE/1B,EAAUkhC,EAASpL,EAAY,EACrC3rD,EAAIqK,YAAc9Z,EAAQymE,mBAC1Bh3D,EAAIsK,UAAY/Z,EAAQymE,mBACxB7vD,GAAUnH,EAAKquD,EAAaz4B,EAASC,GACrC71B,EAAIqK,YAAc6pD,EAAWh1D,YAC7Bc,EAAIsK,UAAY4pD,EAAWj1D,gBAC3BkI,GAAUnH,EAAKquD,EAAaz4B,EAASC,EACzC,KAAO,CACH71B,EAAI6D,UAAYzV,EAAS8lE,EAAWzrD,aAAejtB,KAAKC,OAAOqO,OAAOsT,OAAO82D,EAAWzrD,cAAgByrD,EAAWzrD,aAAe,EAClIzI,EAAIqK,YAAc6pD,EAAWh1D,YAC7Bc,EAAIquC,YAAY6lB,EAAWn4C,YAAc,IACzC/b,EAAIsuC,eAAiB4lB,EAAWl4C,kBAAoB,EACpD,MAAMi7C,EAASpJ,EAAU50C,WAAW49C,EAAWjL,GACzCsL,EAASrJ,EAAU50C,WAAW40C,EAAU70C,MAAM69C,EAAW,GAAIjL,EAAW,GACxE7O,EAAevwC,GAAc0nD,EAAWnX,cAC1CjzD,OAAOsT,OAAO2/C,GAAcrK,KAAMt3D,GAAU,IAANA,IACtC4kB,EAAIgI,YACJhI,EAAIsK,UAAY/Z,EAAQymE,mBACxBzrD,GAAmBvL,EAAK,CACpBhhB,EAAGi4E,EACH9lE,EAAG4lE,EACHl5E,EAAG+tE,EACHrwE,EAAGowE,EACH/jD,OAAQm1C,IAEZ/8C,EAAIwI,OACJxI,EAAI0I,SACJ1I,EAAIsK,UAAY4pD,EAAWj1D,gBAC3Be,EAAIgI,YACJuD,GAAmBvL,EAAK,CACpBhhB,EAAGk4E,EACH/lE,EAAG4lE,EAAS,EACZl5E,EAAG+tE,EAAW,EACdrwE,EAAGowE,EAAY,EACf/jD,OAAQm1C,IAEZ/8C,EAAIwI,SAEJxI,EAAIsK,UAAY/Z,EAAQymE,mBACxBh3D,EAAI0K,SAASusD,EAAQF,EAAQnL,EAAUD,GACvC3rD,EAAIm3D,WAAWF,EAAQF,EAAQnL,EAAUD,GACzC3rD,EAAIsK,UAAY4pD,EAAWj1D,gBAC3Be,EAAI0K,SAASwsD,EAAQH,EAAS,EAAGnL,EAAW,EAAGD,EAAY,GAEnE,CACA3rD,EAAIsK,UAAYze,KAAKwpE,gBAAgBt3E,EACzC,CACAq5E,QAAAA,CAAS1jD,EAAI1T,EAAKzP,GACd,MAAM6gE,KAAEA,GAAUvlE,MACZumE,YAAEA,EAAWiF,UAAGA,EAASlF,cAAGA,EAAaxG,UAAGA,EAASC,SAAGA,EAAQtvB,WAAGA,GAAgB/rC,EACnF+gE,EAAW5kD,GAAOnc,EAAQ+gE,UAChC,IAAIgG,EAAiBhG,EAASzxD,WAC1B03D,EAAe,EACnB,MAAM1J,EAAYj1C,GAAcroB,EAAQsoB,IAAKhtB,KAAK7M,EAAG6M,KAAK0Y,OACpDizD,EAAiB,SAAS7tD,GAC5B3J,EAAIsL,SAAS3B,EAAMkkD,EAAU7uE,EAAE00B,EAAG10B,EAAIu4E,GAAe7jD,EAAGviB,EAAImmE,EAAiB,GAC7E5jD,EAAGviB,GAAKmmE,EAAiBlF,CAC7B,EACMqF,EAA0B5J,EAAU7iD,UAAUqsD,GACpD,IAAIzF,EAAU8F,EAAW9sD,EAAO7sB,EAAGiM,EAAG0F,EAAM0W,EAQ5C,IAPApG,EAAIgL,UAAYqsD,EAChBr3D,EAAIiL,aAAe,SACnBjL,EAAIN,KAAO4xD,EAAS1rD,OACpB8N,EAAG10B,EAAIw0E,GAAY3nE,KAAM4rE,EAAyBlnE,GAClDyP,EAAIsK,UAAY/Z,EAAQ6jE,UACxBhlE,EAAKvD,KAAKkmE,WAAYyF,GACtBD,EAAepF,GAA6C,UAA5BsF,EAAoD,WAAdJ,EAAyBzL,EAAW,EAAItvB,EAAasvB,EAAW,EAAItvB,EAAa,EACnJv+C,EAAI,EAAG2R,EAAO0hE,EAAKjnE,OAAQpM,EAAI2R,IAAQ3R,EAAE,CAUzC,IATA6zE,EAAWR,EAAKrzE,GAChB25E,EAAY7rE,KAAKwpE,gBAAgBt3E,GACjCiiB,EAAIsK,UAAYotD,EAChBtoE,EAAKwiE,EAASC,OAAQ2F,GACtB5sD,EAAQgnD,EAAShnD,MACbunD,GAAiBvnD,EAAMzgB,SACvB0B,KAAK8qE,cAAc32D,EAAK0T,EAAI31B,EAAG8vE,EAAWt9D,GAC1C+mE,EAAiB97E,KAAKC,IAAI61E,EAASzxD,WAAY8rD,IAE/C3hE,EAAI,EAAGoc,EAAOwE,EAAMzgB,OAAQH,EAAIoc,IAAQpc,EACxCwtE,EAAe5sD,EAAM5gB,IACrBstE,EAAiBhG,EAASzxD,WAE9BzQ,EAAKwiE,EAASE,MAAO0F,EACzB,CACAD,EAAe,EACfD,EAAiBhG,EAASzxD,WAC1BzQ,EAAKvD,KAAKmmE,UAAWwF,GACrB9jD,EAAGviB,GAAKihE,CACZ,CACAuF,UAAAA,CAAWjkD,EAAI1T,EAAKzP,GAChB,MAAM8gE,EAASxlE,KAAKwlE,OACdlnE,EAASknE,EAAOlnE,OACtB,IAAIonE,EAAYxzE,EAChB,GAAIoM,EAAQ,CACR,MAAM0jE,EAAYj1C,GAAcroB,EAAQsoB,IAAKhtB,KAAK7M,EAAG6M,KAAK0Y,OAQ1D,IAPAmP,EAAG10B,EAAIw0E,GAAY3nE,KAAM0E,EAAQqnE,YAAarnE,GAC9CmjB,EAAGviB,GAAKZ,EAAQ8hE,gBAChBryD,EAAIgL,UAAY6iD,EAAU7iD,UAAUza,EAAQqnE,aAC5C53D,EAAIiL,aAAe,SACnBsmD,EAAa7kD,GAAOnc,EAAQghE,YAC5BvxD,EAAIsK,UAAY/Z,EAAQsnE,YACxB73D,EAAIN,KAAO6xD,EAAW3rD,OAClB7nB,EAAI,EAAGA,EAAIoM,IAAUpM,EACrBiiB,EAAIsL,SAAS+lD,EAAOtzE,GAAI8vE,EAAU7uE,EAAE00B,EAAG10B,GAAI00B,EAAGviB,EAAIogE,EAAW1xD,WAAa,GAC1E6T,EAAGviB,GAAKogE,EAAW1xD,WAAatP,EAAQ+hE,aAEhD,CACJ,CACApkB,cAAAA,CAAex6B,EAAI1T,EAAK83D,EAAavnE,GACjC,MAAMqiE,OAAEA,EAAMF,OAAGA,GAAY7mE,MACvB7M,EAAEA,EAACmS,EAAGA,GAAOuiB,GACbnP,MAAEA,EAAK2C,OAAGA,GAAY4wD,GACtBtsD,QAAEA,EAAOG,SAAGA,EAAQF,WAAGA,EAAUC,YAAGA,GAAiBc,GAAcjc,EAAQgX,cACjFvH,EAAIsK,UAAY/Z,EAAQ0O,gBACxBe,EAAIqK,YAAc9Z,EAAQ2O,YAC1Bc,EAAI6D,UAAYtT,EAAQkY,YACxBzI,EAAIgI,YACJhI,EAAIoI,OAAOppB,EAAIwsB,EAASra,GACT,QAAXuhE,GACA7mE,KAAKqqE,UAAUxiD,EAAI1T,EAAK83D,EAAavnE,GAEzCyP,EAAIqI,OAAOrpB,EAAIulB,EAAQoH,EAAUxa,GACjC6O,EAAI+3D,iBAAiB/4E,EAAIulB,EAAOpT,EAAGnS,EAAIulB,EAAOpT,EAAIwa,GACnC,WAAX+mD,GAAkC,UAAXE,GACvB/mE,KAAKqqE,UAAUxiD,EAAI1T,EAAK83D,EAAavnE,GAEzCyP,EAAIqI,OAAOrpB,EAAIulB,EAAOpT,EAAI+V,EAASwE,GACnC1L,EAAI+3D,iBAAiB/4E,EAAIulB,EAAOpT,EAAI+V,EAAQloB,EAAIulB,EAAQmH,EAAava,EAAI+V,GAC1D,WAAXwrD,GACA7mE,KAAKqqE,UAAUxiD,EAAI1T,EAAK83D,EAAavnE,GAEzCyP,EAAIqI,OAAOrpB,EAAIysB,EAAYta,EAAI+V,GAC/BlH,EAAI+3D,iBAAiB/4E,EAAGmS,EAAI+V,EAAQloB,EAAGmS,EAAI+V,EAASuE,GACrC,WAAXinD,GAAkC,SAAXE,GACvB/mE,KAAKqqE,UAAUxiD,EAAI1T,EAAK83D,EAAavnE,GAEzCyP,EAAIqI,OAAOrpB,EAAGmS,EAAIqa,GAClBxL,EAAI+3D,iBAAiB/4E,EAAGmS,EAAGnS,EAAIwsB,EAASra,GACxC6O,EAAImI,YACJnI,EAAIwI,OACAjY,EAAQkY,YAAc,GACtBzI,EAAI0I,QAEZ,CACHsvD,sBAAAA,CAAuBznE,GAChB,MAAMiN,EAAQ3R,KAAK2R,MACbwf,EAAQnxB,KAAKu1B,YACb62C,EAAQj7C,GAASA,EAAMh+B,EACvBk5E,EAAQl7C,GAASA,EAAM7rB,EAC7B,GAAI8mE,GAASC,EAAO,CAChB,MAAMz+B,EAAW62B,GAAY//D,EAAQkpC,UAAUvrC,KAAKrC,KAAMA,KAAKgyB,QAAShyB,KAAK+oE,gBAC7E,IAAKn7B,EACD,OAEJ,MAAMxnC,EAAOpG,KAAKgpE,MAAQ3D,GAAerlE,KAAM0E,GACzCwlE,EAAkBjsE,OAAOoB,OAAO,CAAA,EAAIuuC,EAAU5tC,KAAKgpE,OACnDzB,EAAYH,GAAmBz1D,EAAOjN,EAASwlE,GAC/C/8D,EAAQm6D,GAAmB5iE,EAASwlE,EAAiB3C,EAAW51D,GAClEy6D,EAAMn4C,MAAQ9mB,EAAMha,GAAKk5E,EAAMp4C,MAAQ9mB,EAAM7H,IAC7CtF,KAAK+mE,OAASQ,EAAUR,OACxB/mE,KAAK6mE,OAASU,EAAUV,OACxB7mE,KAAK0Y,MAAQtS,EAAKsS,MAClB1Y,KAAKqb,OAASjV,EAAKiV,OACnBrb,KAAKopE,OAASx7B,EAASz6C,EACvB6M,KAAKqpE,OAASz7B,EAAStoC,EACvBtF,KAAK6+B,qBAAqB1K,OAAOn0B,KAAMmN,GAE/C,CACJ,CACHm/D,WAAAA,GACO,QAAStsE,KAAK8oE,OAClB,CACA/2C,IAAAA,CAAK5d,GACD,MAAMzP,EAAU1E,KAAK0E,QAAQif,WAAW3jB,KAAKkb,cAC7C,IAAI4tD,EAAU9oE,KAAK8oE,QACnB,IAAKA,EACD,OAEJ9oE,KAAKmsE,uBAAuBznE,GAC5B,MAAMunE,EAAc,CAChBvzD,MAAO1Y,KAAK0Y,MACZ2C,OAAQrb,KAAKqb,QAEXwM,EAAK,CACP10B,EAAG6M,KAAK7M,EACRmS,EAAGtF,KAAKsF,GAEZwjE,EAAUn5E,KAAKyX,IAAI0hE,GAAW,KAAO,EAAIA,EACzC,MAAM1xD,EAAUwJ,GAAUlc,EAAQ0S,SAC5Bm1D,EAAoBvsE,KAAK2Y,MAAMra,QAAU0B,KAAKkmE,WAAW5nE,QAAU0B,KAAKulE,KAAKjnE,QAAU0B,KAAKmmE,UAAU7nE,QAAU0B,KAAKwlE,OAAOlnE,OAC9HoG,EAAQuzC,SAAWs0B,IACnBp4D,EAAImG,OACJnG,EAAIq4D,YAAc1D,EAClB9oE,KAAKqiD,eAAex6B,EAAI1T,EAAK83D,EAAavnE,GAC1C8oB,GAAsBrZ,EAAKzP,EAAQ49D,eACnCz6C,EAAGviB,GAAK8R,EAAQC,IAChBrX,KAAK8iD,UAAUj7B,EAAI1T,EAAKzP,GACxB1E,KAAKurE,SAAS1jD,EAAI1T,EAAKzP,GACvB1E,KAAK8rE,WAAWjkD,EAAI1T,EAAKzP,GACzBopB,GAAqB3Z,EAAKzP,EAAQ49D,eAClCnuD,EAAIuG,UAEZ,CACHq1C,iBAAAA,GACO,OAAO/vD,KAAKgyB,SAAW,EAC3B,CACHg+B,iBAAAA,CAAkBC,EAAgB2U,GAC3B,MAAM1U,EAAalwD,KAAKgyB,QAClBnb,EAASo5C,EAAez9D,IAAI,EAAGwR,eAAeC,YAChD,MAAMgI,EAAOjM,KAAK2R,MAAMgpB,eAAe32B,GACvC,IAAKiI,EACD,MAAM,IAAI8X,MAAM,kCAAoC/f,GAExD,MAAO,CACHA,eACAklB,QAASjd,EAAK2N,KAAK3V,GACnBA,WAGF6J,GAAWpK,EAAewsD,EAAYr5C,GACtC41D,EAAkBzsE,KAAK0sE,iBAAiB71D,EAAQ+tD,IAClD92D,GAAW2+D,KACXzsE,KAAKgyB,QAAUnb,EACf7W,KAAK+oE,eAAiBnE,EACtB5kE,KAAK2sE,qBAAsB,EAC3B3sE,KAAKm0B,QAAO,GAEpB,CACHivC,WAAAA,CAAYvyE,EAAGu/D,EAAQI,GAAc,GAC9B,GAAIJ,GAAUpwD,KAAK2sE,oBACf,SAEJ3sE,KAAK2sE,qBAAsB,EAC3B,MAAMjoE,EAAU1E,KAAK0E,QACfwrD,EAAalwD,KAAKgyB,SAAW,GAC7Bnb,EAAS7W,KAAK2wD,mBAAmB9/D,EAAGq/D,EAAYE,EAAQI,GACxDic,EAAkBzsE,KAAK0sE,iBAAiB71D,EAAQhmB,GAChDid,EAAUsiD,IAAW1sD,EAAemT,EAAQq5C,IAAeuc,EAWjE,OAVI3+D,IACA9N,KAAKgyB,QAAUnb,GACXnS,EAAQuzC,SAAWvzC,EAAQ0lE,YAC3BpqE,KAAK+oE,eAAiB,CAClB51E,EAAGtC,EAAEsC,EACLmS,EAAGzU,EAAEyU,GAETtF,KAAKm0B,QAAO,EAAMi8B,KAGnBtiD,CACX,CACH6iD,kBAAAA,CAAmB9/D,EAAGq/D,EAAYE,EAAQI,GACnC,MAAM9rD,EAAU1E,KAAK0E,QACrB,GAAe,aAAX7T,EAAEgP,KACF,MAAO,GAEX,IAAK2wD,EACD,OAAON,EAAW5rC,OAAQpyB,GAAI8N,KAAK2R,MAAMiI,KAAKtG,SAASphB,EAAE8R,oBAA6FxS,IAA5EwO,KAAK2R,MAAMgpB,eAAezoC,EAAE8R,cAAcqzB,WAAWuF,UAAU1qC,EAAE+R,QAE/I,MAAM4S,EAAS7W,KAAK2R,MAAMu9C,0BAA0Br+D,EAAG6T,EAAQ8P,KAAM9P,EAAS0rD,GAI9E,OAHI1rD,EAAQjB,SACRoT,EAAOpT,UAEJoT,CACX,CACH61D,gBAAAA,CAAiB71D,EAAQhmB,GAClB,MAAMu4E,OAAEA,EAAMC,OAAGA,EAAM3kE,QAAGA,GAAa1E,KACjC4tC,EAAW62B,GAAY//D,EAAQkpC,UAAUvrC,KAAKrC,KAAM6W,EAAQhmB,GAClE,OAAoB,IAAb+8C,IAAuBw7B,IAAWx7B,EAASz6C,GAAKk2E,IAAWz7B,EAAStoC,EAC/E,EAED,IAACsnE,GAAcn6D,EAAA,UAAG,CACjBzQ,GAAI,UACJ2hE,SAAUkF,GACVpE,eACAoI,SAAAA,CAAWl7D,EAAO2nD,EAAO50D,GACjBA,IACAiN,EAAM2zD,QAAU,IAAIuD,GAAQ,CACxBl3D,QACAjN,YAGZ,EACA+2C,YAAAA,CAAc9pC,EAAO2nD,EAAO50D,GACpBiN,EAAM2zD,SACN3zD,EAAM2zD,QAAQ/rC,WAAW70B,EAEjC,EACAo2B,KAAAA,CAAOnpB,EAAO2nD,EAAO50D,GACbiN,EAAM2zD,SACN3zD,EAAM2zD,QAAQ/rC,WAAW70B,EAEjC,EACAooE,SAAAA,CAAWn7D,GACP,MAAM2zD,EAAU3zD,EAAM2zD,QACtB,GAAIA,GAAWA,EAAQgH,cAAe,CAClC,MAAMlpE,EAAO,CACTkiE,WAEJ,IAGO,IAHH3zD,EAAM0rC,cAAc,oBAAqB,IACtCj6C,EACH+iD,YAAY,IAEZ,OAEJmf,EAAQvzC,KAAKpgB,EAAMwC,KACnBxC,EAAM0rC,cAAc,mBAAoBj6C,EAC5C,CACJ,EACAwgE,UAAAA,CAAYjyD,EAAOvO,GACf,GAAIuO,EAAM2zD,QAAS,CACf,MAAMt3B,EAAmB5qC,EAAKgtD,OAC1Bz+C,EAAM2zD,QAAQlC,YAAYhgE,EAAKwmB,MAAOokB,EAAkB5qC,EAAKotD,eAC7DptD,EAAK0K,SAAU,EAEvB,CACJ,EACAqI,SAAU,CACN8hC,SAAS,EACTmyB,SAAU,KACVx8B,SAAU,UACVx6B,gBAAiB,kBACjBy3D,WAAY,OACZ/H,UAAW,CACPriE,OAAQ,QAEZ2lE,aAAc,EACdC,kBAAmB,EACnBzsB,WAAY,OACZ2uB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAA,EACV+F,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACRjlE,OAAQ,QAEZsrE,YAAa,OACb30D,QAAS,EACT8vD,aAAc,EACdD,UAAW,EACXvrD,aAAc,EACdokD,UAAWA,CAAC3rD,EAAK4J,IAAOA,EAAK0nD,SAASr/D,KACtC25D,SAAUA,CAAC5rD,EAAK4J,IAAOA,EAAK0nD,SAASr/D,KACrC+kE,mBAAoB,OACpB7E,eAAe,EACf71B,WAAY,EACZp9B,YAAa,gBACbuJ,YAAa,EACbzJ,UAAW,CACPsD,SAAU,IACVC,OAAQ,gBAEZM,WAAY,CACR1G,QAAS,CACLzQ,KAAM,SACN+W,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRkyD,QAAS,CACLpyD,OAAQ,SACRD,SAAU,MAGlB4a,UAAWy2C,IAEfhkB,cAAe,CACX2hB,SAAU,OACVC,WAAY,OACZ5C,UAAW,QAEfnwD,YAAa,CACTyD,YAAcZ,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjEc,YAAY,EACZ+a,UAAW,CACPjb,aAAa,EACbE,YAAY,GAEhBnD,UAAW,CACPoD,WAAW,GAEfS,WAAY,CACRT,UAAW,cAGnB2yC,uBAAwB,CACpB,iBAIJn0C,GAAOtC,EAAA,UAAgBxU,OAAO2gC,OAAO,CACzC+N,UAAW,KACXogC,OAAQ3T,GACR4T,WAAYpT,GACZqT,OAAQhpE,GACRk8D,OAAQuD,GACRwJ,SAAU1I,GACVT,MAAOK,GACPyE,QAAS+D,MAeT,SAASO,GAAe5wC,EAAQ6B,EAAKn6B,EAAOmpE,GACxC,MAAMh1B,EAAQ7b,EAAO/3B,QAAQ45B,GAC7B,OAAc,IAAVga,EAdYi1B,EAAC9wC,EAAQ6B,EAAKn6B,EAAOmpE,KAClB,iBAARhvC,GACPn6B,EAAQs4B,EAAO32B,KAAKw4B,GAAO,EAC3BgvC,EAAYnQ,QAAQ,CAChBh5D,QACA45B,MAAOO,KAEJr2B,MAAMq2B,KACbn6B,EAAQ,MAELA,GAKIopE,CAAY9wC,EAAQ6B,EAAKn6B,EAAOmpE,GAGpCh1B,IADM7b,EAAO+wC,YAAYlvC,GACRn6B,EAAQm0C,CACpC,CAEA,SAASm1B,GAAkBrrE,GACvB,MAAMq6B,EAASv8B,KAAKw8B,YACpB,OAAIt6B,GAAS,GAAKA,EAAQq6B,EAAOj+B,OACtBi+B,EAAOr6B,GAEXA,CACX,CACA,MAAMsrE,WAAsB1zB,GACxBthB,UAAY,WACfA,gBAAkB,CACX9mB,MAAO,CACHxO,SAAUqqE,KAGlB3tE,WAAAA,CAAY4zB,GACRgQ,MAAMhQ,GACLxzB,KAAKytE,iBAAcj8E,EACpBwO,KAAK0tE,YAAc,EACnB1tE,KAAK2tE,aAAe,EACxB,CACA5gC,IAAAA,CAAKqa,GACD,MAAMwmB,EAAQ5tE,KAAK2tE,aACnB,GAAIC,EAAMtvE,OAAQ,CACd,MAAMi+B,EAASv8B,KAAKw8B,YACpB,IAAK,MAAMv4B,MAAEA,EAAK45B,MAAGA,KAAY+vC,EACzBrxC,EAAOt4B,KAAW45B,GAClBtB,EAAOtxB,OAAOhH,EAAO,GAG7BjE,KAAK2tE,aAAe,EACxB,CACAnqC,MAAMuJ,KAAKqa,EACf,CACAzhC,KAAAA,CAAMyY,EAAKn6B,GACP,GAAIhC,EAAcm8B,GACd,YAEJ,MAAM7B,EAASv8B,KAAKw8B,YAEpB,MAxCWgd,EAACv1C,EAAOrU,IAAgB,OAAVqU,EAAiB,KAAO8F,GAAYpa,KAAKL,MAAM2U,GAAQ,EAAGrU,GAwC5E4pD,CADPv1C,EAAQvB,SAASuB,IAAUs4B,EAAOt4B,KAAWm6B,EAAMn6B,EAAQkpE,GAAe5wC,EAAQ6B,EAAKv7B,EAAeoB,EAAOm6B,GAAMp+B,KAAK2tE,cAC/FpxC,EAAOj+B,OAAS,EAC7C,CACAy9C,mBAAAA,GACI,MAAMlvC,WAAEA,EAAUC,WAAGA,GAAgB9M,KAAK+M,gBAC1C,IAAIld,IAAEA,EAAGD,IAAGA,GAASoQ,KAAKi9B,WAAU,GACR,UAAxBj9B,KAAK0E,QAAQkT,SACR/K,IACDhd,EAAM,GAELid,IACDld,EAAMoQ,KAAKw8B,YAAYl+B,OAAS,IAGxC0B,KAAKnQ,IAAMA,EACXmQ,KAAKpQ,IAAMA,CACf,CACAysD,UAAAA,GACI,MAAMxsD,EAAMmQ,KAAKnQ,IACXD,EAAMoQ,KAAKpQ,IACX8nB,EAAS1X,KAAK0E,QAAQgT,OACtBhG,EAAQ,GACd,IAAI6qB,EAASv8B,KAAKw8B,YAClBD,EAAiB,IAAR1sC,GAAaD,IAAQ2sC,EAAOj+B,OAAS,EAAIi+B,EAASA,EAAOj6B,MAAMzS,EAAKD,EAAM,GACnFoQ,KAAK0tE,YAAc/9E,KAAKC,IAAI2sC,EAAOj+B,QAAUoZ,EAAS,EAAI,GAAI,GAC9D1X,KAAKytE,YAAcztE,KAAKnQ,KAAO6nB,EAAS,GAAM,GAC9C,IAAI,IAAIxV,EAAQrS,EAAKqS,GAAStS,EAAKsS,IAC/BwP,EAAM9L,KAAK,CACP1D,UAGR,OAAOwP,CACX,CACAosB,gBAAAA,CAAiB57B,GACb,OAAOqrE,GAAkBlrE,KAAKrC,KAAMkC,EACxC,CACH6yB,SAAAA,GACOyO,MAAMzO,YACD/0B,KAAK2jC,iBACN3jC,KAAKytC,gBAAkBztC,KAAKytC,eAEpC,CACAzgC,gBAAAA,CAAiB9K,GAIb,MAHqB,iBAAVA,IACPA,EAAQlC,KAAK2lB,MAAMzjB,IAEN,OAAVA,EAAiB86B,IAAMh9B,KAAK4lC,oBAAoB1jC,EAAQlC,KAAKytE,aAAeztE,KAAK0tE,YAC5F,CACAhsC,eAAAA,CAAgBz9B,GACZ,MAAMyN,EAAQ1R,KAAK0R,MACnB,OAAIzN,EAAQ,GAAKA,EAAQyN,EAAMpT,OAAS,EAC7B,KAEJ0B,KAAKgN,iBAAiB0E,EAAMzN,GAAO/B,MAC9C,CACA4jC,gBAAAA,CAAiBjrB,GACb,OAAOlrB,KAAKL,MAAM0Q,KAAKytE,YAAcztE,KAAK8/C,mBAAmBjlC,GAAS7a,KAAK0tE,YAC/E,CACAhqC,YAAAA,GACI,OAAO1jC,KAAKuX,MAChB,EAGJ,SAASs2D,GAAgBC,EAAmBC,GACxC,MAAMr8D,EAAQ,IAERkG,OAAEA,EAAMypC,KAAGA,EAAIxxD,IAAGA,EAAGD,IAAGA,EAAGo+E,UAAGA,EAAS3hE,MAAGA,EAAK4hE,SAAGA,EAAQC,UAAGA,EAASC,cAAGA,GAAmBL,EAC5FM,EAAO/sB,GAAQ,EACfgtB,EAAYJ,EAAW,GACrBp+E,IAAKy+E,EAAO1+E,IAAK2+E,GAAUR,EAC7BlhE,GAAc5K,EAAcpS,GAC5Bid,GAAc7K,EAAcrS,GAC5B4+E,GAAgBvsE,EAAcoK,GAC9BoiE,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IACI96C,EAAQs7C,EAASC,EAASC,EAD1BznC,EAAU9/B,IAASknE,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAIjnC,EAXgB,QAWUt6B,IAAeC,EACzC,MAAO,CACH,CACI5K,MAAOosE,GAEX,CACIpsE,MAAOqsE,IAInBK,EAAYj/E,KAAK2oD,KAAKi2B,EAAOpnC,GAAWx3C,KAAK8X,MAAM6mE,EAAOnnC,GACtDynC,EAAYP,IACZlnC,EAAU9/B,GAAQunE,EAAYznC,EAAUknC,EAAYD,GAAQA,GAE3DnsE,EAAc+rE,KACf56C,EAASzjC,KAAKmP,IAAI,GAAIkvE,GACtB7mC,EAAUx3C,KAAK2oD,KAAKnR,EAAU/T,GAAUA,GAE7B,UAAXxb,GACA82D,EAAU/+E,KAAK8X,MAAM6mE,EAAOnnC,GAAWA,EACvCwnC,EAAUh/E,KAAK2oD,KAAKi2B,EAAOpnC,GAAWA,IAEtCunC,EAAUJ,EACVK,EAAUJ,GAEV1hE,GAAcC,GAAcu0C,GDtmTpC,SAAqBluD,EAAGgU,GACpB,MAAM0nE,EAAUl/E,KAAKL,MAAM6D,GAC3B,OAAO07E,EAAU1nE,GAAWhU,GAAK07E,EAAU1nE,GAAWhU,CAC1D,CCmmT4C27E,EAAal/E,EAAMC,GAAOwxD,EAAMla,EAAU,MAC9EynC,EAAYj/E,KAAKL,MAAMK,KAAKE,KAAKD,EAAMC,GAAOs3C,EAAS8mC,IACvD9mC,GAAWv3C,EAAMC,GAAO++E,EACxBF,EAAU7+E,EACV8+E,EAAU/+E,GACH4+E,GACPE,EAAU7hE,EAAahd,EAAM6+E,EAC7BC,EAAU7hE,EAAald,EAAM++E,EAC7BC,EAAYviE,EAAQ,EACpB86B,GAAWwnC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWvnC,EAE9BynC,EADA1nE,GAAa0nE,EAAWj/E,KAAKL,MAAMs/E,GAAYznC,EAAU,KAC7Cx3C,KAAKL,MAAMs/E,GAEXj/E,KAAK2oD,KAAKs2B,IAG9B,MAAMG,EAAgBp/E,KAAKC,IAAI2Y,GAAe4+B,GAAU5+B,GAAemmE,IACvEt7C,EAASzjC,KAAKmP,IAAI,GAAImD,EAAc+rE,GAAae,EAAgBf,GACjEU,EAAU/+E,KAAKL,MAAMo/E,EAAUt7C,GAAUA,EACzCu7C,EAAUh/E,KAAKL,MAAMq/E,EAAUv7C,GAAUA,EACzC,IAAIj1B,EAAI,EAgBR,IAfI0O,IACIshE,GAAiBO,IAAY7+E,GAC7B6hB,EAAM9L,KAAK,CACP1D,MAAOrS,IAEP6+E,EAAU7+E,GACVsO,IAEA+I,GAAavX,KAAKL,OAAOo/E,EAAUvwE,EAAIgpC,GAAW/T,GAAUA,EAAQvjC,EAAKm/E,GAAkBn/E,EAAK4+E,EAAYX,KAC5G3vE,KAEGuwE,EAAU7+E,GACjBsO,KAGFA,EAAIywE,IAAazwE,EAAE,CACrB,MAAMsT,EAAY9hB,KAAKL,OAAOo/E,EAAUvwE,EAAIgpC,GAAW/T,GAAUA,EACjE,GAAItmB,GAAc2E,EAAY7hB,EAC1B,MAEJ8hB,EAAM9L,KAAK,CACP1D,MAAOuP,GAEf,CAcA,OAbI3E,GAAcqhE,GAAiBQ,IAAY/+E,EACvC8hB,EAAMpT,QAAU4I,GAAawK,EAAMA,EAAMpT,OAAS,GAAG4D,MAAOtS,EAAKo/E,GAAkBp/E,EAAK6+E,EAAYX,IACpGp8D,EAAMA,EAAMpT,OAAS,GAAG4D,MAAQtS,EAEhC8hB,EAAM9L,KAAK,CACP1D,MAAOtS,IAGPkd,GAAc6hE,IAAY/+E,GAClC8hB,EAAM9L,KAAK,CACP1D,MAAOysE,IAGRj9D,CACX,CACA,SAASs9D,GAAkB9sE,EAAOusE,GAAYhsC,WAAEA,EAAU5pB,YAAGA,IACzD,MAAMmD,EAAM7T,GAAU0Q,GAChB5Z,GAASwjC,EAAa9yC,KAAKse,IAAI+N,GAAOrsB,KAAKuf,IAAI8M,KAAS,KACxD1d,EAAS,IAAOmwE,GAAc,GAAKvsE,GAAO5D,OAChD,OAAO3O,KAAKE,IAAI4+E,EAAaxvE,EAAOX,EACxC,CA3GAmU,EAAA,gBAAA+6D,IA4GA,MAAMyB,WAAwBn1B,GAC1Bl6C,WAAAA,CAAY4zB,GACRgQ,MAAMhQ,GACLxzB,KAAKwJ,WAAQhY,EACbwO,KAAKyJ,SAAMjY,EACXwO,KAAKytE,iBAAcj8E,EACnBwO,KAAKkvE,eAAY19E,EAClBwO,KAAK0tE,YAAc,CACvB,CACA/nD,KAAAA,CAAMyY,EAAKn6B,GACP,OAAIhC,EAAcm8B,KAGE,iBAARA,GAAoBA,aAAe37B,UAAYC,UAAU07B,GAF1D,MAKHA,CACZ,CACA+wC,sBAAAA,GACI,MAAMx3D,YAAEA,GAAiB3X,KAAK0E,SACxBmI,WAAEA,EAAUC,WAAGA,GAAgB9M,KAAK+M,gBAC1C,IAAIld,IAAEA,EAAGD,IAAGA,GAASoQ,KACrB,MAAMovE,EAAU7/E,GAAIM,EAAMgd,EAAahd,EAAMN,EACvC8/E,EAAU9/E,GAAIK,EAAMkd,EAAald,EAAML,EAC7C,GAAIooB,EAAa,CACb,MAAM23D,EAAUroE,GAAKpX,GACf0/E,EAAUtoE,GAAKrX,GACjB0/E,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAIv/E,IAAQD,EAAK,CACb,IAAI8nB,EAAiB,IAAR9nB,EAAY,EAAID,KAAKyX,IAAU,IAANxX,GACtCy/E,EAAOz/E,EAAM8nB,GACRC,GACDy3D,EAAOv/E,EAAM6nB,EAErB,CACA1X,KAAKnQ,IAAMA,EACXmQ,KAAKpQ,IAAMA,CACf,CACA4/E,YAAAA,GACI,MAAMj4B,EAAWv3C,KAAK0E,QAAQgN,MAC9B,IACIu8D,GADAl2B,cAAEA,EAAa03B,SAAGA,GAAcl4B,EAepC,OAbIk4B,GACAxB,EAAWt+E,KAAK2oD,KAAKt4C,KAAKpQ,IAAM6/E,GAAY9/E,KAAK8X,MAAMzH,KAAKnQ,IAAM4/E,GAAY,EAC1ExB,EAAW,MACXltD,QAAQC,KAAK,UAAUhhB,KAAKgC,sBAAsBytE,mCAA0CxB,8BAC5FA,EAAW,OAGfA,EAAWjuE,KAAK0vE,mBAChB33B,EAAgBA,GAAiB,IAEjCA,IACAk2B,EAAWt+E,KAAKE,IAAIkoD,EAAek2B,IAEhCA,CACX,CACHyB,gBAAAA,GACO,OAAOjtE,OAAOkE,iBAClB,CACA01C,UAAAA,GACI,MAAMt+B,EAAO/d,KAAK0E,QACZ6yC,EAAWx5B,EAAKrM,MACtB,IAAIu8D,EAAWjuE,KAAKwvE,eACpBvB,EAAWt+E,KAAKC,IAAI,EAAGq+E,GACvB,MAcMv8D,EAAQm8D,GAdkB,CAC5BI,WACAr2D,OAAQmG,EAAKnG,OACb/nB,IAAKkuB,EAAKluB,IACVD,IAAKmuB,EAAKnuB,IACVo+E,UAAWz2B,EAASy2B,UACpB3sB,KAAM9J,EAASk4B,SACfpjE,MAAOkrC,EAASlrC,MAChB6hE,UAAWluE,KAAKqjD,aAChB5gB,WAAYziC,KAAK2jC,eACjB9qB,YAAa0+B,EAAS1+B,aAAe,EACrCs1D,eAA0C,IAA3B52B,EAAS42B,eAEVnuE,KAAKq6C,QAAUr6C,MAajC,MAXoB,UAAhB+d,EAAKnG,QACL5P,GAAmB0J,EAAO1R,KAAM,SAEhC+d,EAAKta,SACLiO,EAAMjO,UACNzD,KAAKwJ,MAAQxJ,KAAKpQ,IAClBoQ,KAAKyJ,IAAMzJ,KAAKnQ,MAEhBmQ,KAAKwJ,MAAQxJ,KAAKnQ,IAClBmQ,KAAKyJ,IAAMzJ,KAAKpQ,KAEb8hB,CACX,CACHqjB,SAAAA,GACO,MAAMrjB,EAAQ1R,KAAK0R,MACnB,IAAIlI,EAAQxJ,KAAKnQ,IACb4Z,EAAMzJ,KAAKpQ,IAEf,GADA4zC,MAAMzO,YACF/0B,KAAK0E,QAAQgT,QAAUhG,EAAMpT,OAAQ,CACrC,MAAMoZ,GAAUjO,EAAMD,GAAS7Z,KAAKC,IAAI8hB,EAAMpT,OAAS,EAAG,GAAK,EAC/DkL,GAASkO,EACTjO,GAAOiO,CACX,CACA1X,KAAKytE,YAAcjkE,EACnBxJ,KAAKkvE,UAAYzlE,EACjBzJ,KAAK0tE,YAAcjkE,EAAMD,CAC7B,CACAs0B,gBAAAA,CAAiB57B,GACb,OAAOwO,GAAaxO,EAAOlC,KAAK2R,MAAMjN,QAAQkM,OAAQ5Q,KAAK0E,QAAQgN,MAAML,OAC7E,EAGJ,MAAMs+D,WAAoBV,GACtBz2C,UAAY,SACfA,gBAAkB,CACX9mB,MAAO,CACHxO,SAAUsP,GAAMlB,WAAWE,UAGnCuqC,mBAAAA,GACI,MAAMlsD,IAAEA,EAAGD,IAAGA,GAASoQ,KAAKi9B,WAAU,GACtCj9B,KAAKnQ,IAAM2S,EAAe3S,GAAOA,EAAM,EACvCmQ,KAAKpQ,IAAM4S,EAAe5S,GAAOA,EAAM,EACvCoQ,KAAKmvE,wBACT,CACHO,gBAAAA,GACO,MAAMjtC,EAAaziC,KAAK2jC,eAClBrlC,EAASmkC,EAAaziC,KAAK0Y,MAAQ1Y,KAAKqb,OACxCxC,EAAc1Q,GAAUnI,KAAK0E,QAAQgN,MAAMmH,aAC3C5Z,GAASwjC,EAAa9yC,KAAKse,IAAI4K,GAAelpB,KAAKuf,IAAI2J,KAAiB,KACxEwmC,EAAWr/C,KAAK0/C,wBAAwB,GAC9C,OAAO/vD,KAAK2oD,KAAKh6C,EAAS3O,KAAKE,IAAI,GAAIwvD,EAASrrC,WAAa/U,GACjE,CACA+N,gBAAAA,CAAiB9K,GACb,OAAiB,OAAVA,EAAiB86B,IAAMh9B,KAAK4lC,oBAAoB1jC,EAAQlC,KAAKytE,aAAeztE,KAAK0tE,YAC5F,CACA5nC,gBAAAA,CAAiBjrB,GACb,OAAO7a,KAAKytE,YAAcztE,KAAK8/C,mBAAmBjlC,GAAS7a,KAAK0tE,WACpE,EACJj7D,EAAA,cAAAk9D,IAEA,MAAMC,GAAcrgF,GAAII,KAAK8X,MAAMT,GAAMzX,IACnCsgF,GAAiBA,CAACtgF,EAAGsD,IAAIlD,KAAKmP,IAAI,GAAI8wE,GAAWrgF,GAAKsD,GAC5D,SAASi9E,GAAQC,GAEb,OAAkB,IADHA,EAAUpgF,KAAKmP,IAAI,GAAI8wE,GAAWG,GAErD,CACA,SAASC,GAAMngF,EAAKD,EAAKqgF,GACrB,MAAMC,EAAYvgF,KAAKmP,IAAI,GAAImxE,GACzBzmE,EAAQ7Z,KAAK8X,MAAM5X,EAAMqgF,GAE/B,OADYvgF,KAAK2oD,KAAK1oD,EAAMsgF,GACf1mE,CACjB,CAYC,SAAS2mE,GAAcrC,GAAmBj+E,IAAEA,EAAGD,IAAGA,IAC/CC,EAAM8S,EAAgBmrE,EAAkBj+E,IAAKA,GAC7C,MAAM6hB,EAAQ,GACR0+D,EAASR,GAAW//E,GAC1B,IAAIwgF,EAfR,SAAkBxgF,EAAKD,GAEnB,IAAIqgF,EAAWL,GADDhgF,EAAMC,GAEpB,KAAMmgF,GAAMngF,EAAKD,EAAKqgF,GAAY,IAC9BA,IAEJ,KAAMD,GAAMngF,EAAKD,EAAKqgF,GAAY,IAC9BA,IAEJ,OAAOtgF,KAAKE,IAAIogF,EAAUL,GAAW//E,GACzC,CAKcygF,CAASzgF,EAAKD,GACpBo+E,EAAYqC,EAAM,EAAI1gF,KAAKmP,IAAI,GAAInP,KAAKyX,IAAIipE,IAAQ,EACxD,MAAMZ,EAAW9/E,KAAKmP,IAAI,GAAIuxE,GACxB90C,EAAO60C,EAASC,EAAM1gF,KAAKmP,IAAI,GAAIsxE,GAAU,EAC7C5mE,EAAQ7Z,KAAKL,OAAOO,EAAM0rC,GAAQyyC,GAAaA,EAC/Ct2D,EAAS/nB,KAAK8X,OAAO5X,EAAM0rC,GAAQk0C,EAAW,IAAMA,EAAW,GACrE,IAAIn9D,EAAc3iB,KAAK8X,OAAO+B,EAAQkO,GAAU/nB,KAAKmP,IAAI,GAAIuxE,IACzDnuE,EAAQS,EAAgBmrE,EAAkBj+E,IAAKF,KAAKL,OAAOisC,EAAO7jB,EAASpF,EAAc3iB,KAAKmP,IAAI,GAAIuxE,IAAQrC,GAAaA,GAC/H,KAAM9rE,EAAQtS,GACV8hB,EAAM9L,KAAK,CACP1D,QACAoX,MAAOw2D,GAAQ5tE,GACfoQ,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACf+9D,IACA/9D,EAAc,EACd07D,EAAYqC,GAAO,EAAI,EAAIrC,GAE/B9rE,EAAQvS,KAAKL,OAAOisC,EAAO7jB,EAASpF,EAAc3iB,KAAKmP,IAAI,GAAIuxE,IAAQrC,GAAaA,EAExF,MAAMuC,EAAW5tE,EAAgBmrE,EAAkBl+E,IAAKsS,GAMxD,OALAwP,EAAM9L,KAAK,CACP1D,MAAOquE,EACPj3D,MAAOw2D,GAAQS,GACfj+D,gBAEGZ,CACX,CACA,MAAM8+D,WAAyB12B,GAC3BthB,UAAY,cACfA,gBAAkB,CACX9mB,MAAO,CACHxO,SAAUsP,GAAMlB,WAAWc,YAC3BkH,MAAO,CACH2+B,SAAS,KAIrBr4C,WAAAA,CAAY4zB,GACRgQ,MAAMhQ,GACLxzB,KAAKwJ,WAAQhY,EACbwO,KAAKyJ,SAAMjY,EACXwO,KAAKytE,iBAAcj8E,EACpBwO,KAAK0tE,YAAc,CACvB,CACA/nD,KAAAA,CAAMyY,EAAKn6B,GACP,MAAM/B,EAAQ+sE,GAAgB9sE,UAAUwjB,MAAMriB,MAAMtD,KAAM,CACtDo+B,EACAn6B,IAEJ,GAAc,IAAV/B,EAIJ,OAAOM,EAAeN,IAAUA,EAAQ,EAAIA,EAAQ,KAHhDlC,KAAKywE,OAAQ,CAIrB,CACA10B,mBAAAA,GACI,MAAMlsD,IAAEA,EAAGD,IAAGA,GAASoQ,KAAKi9B,WAAU,GACtCj9B,KAAKnQ,IAAM2S,EAAe3S,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KACpDmQ,KAAKpQ,IAAM4S,EAAe5S,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAChDoQ,KAAK0E,QAAQiT,cACb3X,KAAKywE,OAAQ,GAEbzwE,KAAKywE,OAASzwE,KAAKnQ,MAAQmQ,KAAK66C,gBAAkBr4C,EAAexC,KAAK26C,YACtE36C,KAAKnQ,IAAMA,IAAQggF,GAAe7vE,KAAKnQ,IAAK,GAAKggF,GAAe7vE,KAAKnQ,QAAWggF,GAAe7vE,KAAKnQ,IAAK,IAE7GmQ,KAAKmvE,wBACT,CACAA,sBAAAA,GACI,MAAMtiE,WAAEA,EAAUC,WAAGA,GAAgB9M,KAAK+M,gBAC1C,IAAIld,EAAMmQ,KAAKnQ,IACXD,EAAMoQ,KAAKpQ,IACf,MAAMw/E,EAAU7/E,GAAIM,EAAMgd,EAAahd,EAAMN,EACvC8/E,EAAU9/E,GAAIK,EAAMkd,EAAald,EAAML,EACzCM,IAAQD,IACJC,GAAO,GACPu/E,EAAO,GACPC,EAAO,MAEPD,EAAOS,GAAehgF,GAAK,IAC3Bw/E,EAAOQ,GAAejgF,EAAK,MAG/BC,GAAO,GACPu/E,EAAOS,GAAejgF,GAAK,IAE3BA,GAAO,GACPy/E,EAAOQ,GAAehgF,EAAK,IAE/BmQ,KAAKnQ,IAAMA,EACXmQ,KAAKpQ,IAAMA,CACf,CACAysD,UAAAA,GACI,MAAMt+B,EAAO/d,KAAK0E,QAKZgN,EAAQy+D,GAJY,CACtBtgF,IAAKmQ,KAAK26C,SACV/qD,IAAKoQ,KAAK06C,UAEiC16C,MAY/C,MAXoB,UAAhB+d,EAAKnG,QACL5P,GAAmB0J,EAAO1R,KAAM,SAEhC+d,EAAKta,SACLiO,EAAMjO,UACNzD,KAAKwJ,MAAQxJ,KAAKpQ,IAClBoQ,KAAKyJ,IAAMzJ,KAAKnQ,MAEhBmQ,KAAKwJ,MAAQxJ,KAAKnQ,IAClBmQ,KAAKyJ,IAAMzJ,KAAKpQ,KAEb8hB,CACX,CACHosB,gBAAAA,CAAiB57B,GACV,YAAiB1Q,IAAV0Q,EAAsB,IAAMwO,GAAaxO,EAAOlC,KAAK2R,MAAMjN,QAAQkM,OAAQ5Q,KAAK0E,QAAQgN,MAAML,OACzG,CACH0jB,SAAAA,GACO,MAAMvrB,EAAQxJ,KAAKnQ,IACnB2zC,MAAMzO,YACN/0B,KAAKytE,YAAczmE,GAAMwC,GACzBxJ,KAAK0tE,YAAc1mE,GAAMhH,KAAKpQ,KAAOoX,GAAMwC,EAC/C,CACAwD,gBAAAA,CAAiB9K,GAIb,YAHc1Q,IAAV0Q,GAAiC,IAAVA,IACvBA,EAAQlC,KAAKnQ,KAEH,OAAVqS,GAAkB6F,MAAM7F,GACjB86B,IAEJh9B,KAAK4lC,mBAAmB1jC,IAAUlC,KAAKnQ,IAAM,GAAKmX,GAAM9E,GAASlC,KAAKytE,aAAeztE,KAAK0tE,YACrG,CACA5nC,gBAAAA,CAAiBjrB,GACb,MAAMglC,EAAU7/C,KAAK8/C,mBAAmBjlC,GACxC,OAAOlrB,KAAKmP,IAAI,GAAIkB,KAAKytE,YAAc5tB,EAAU7/C,KAAK0tE,YAC1D,EAGJ,SAASgD,GAAsB3yD,GAC3B,MAAMw5B,EAAWx5B,EAAKrM,MACtB,GAAI6lC,EAAS9/B,SAAWsG,EAAKtG,QAAS,CAClC,MAAML,EAAUwJ,GAAU22B,EAAS79B,iBACnC,OAAO7W,EAAe00C,EAAS1jC,MAAQ0jC,EAAS1jC,KAAKzN,KAAM+P,GAAStC,KAAKzN,MAAQgR,EAAQiE,MAC7F,CACA,OAAO,CACX,CACA,SAASs1D,GAAiBx8D,EAAKN,EAAMgqB,GAIjC,OAHAA,EAAQtrC,EAAQsrC,GAASA,EAAQ,CAC7BA,GAEG,CACH7rC,EAAGkoB,GAAa/F,EAAKN,EAAKkG,OAAQ8jB,GAClCnuC,EAAGmuC,EAAMv/B,OAASuV,EAAKG,WAE/B,CACA,SAAS48D,GAAgB7nE,EAAO2gB,EAAKtjB,EAAMvW,EAAKD,GAC5C,OAAImZ,IAAUlZ,GAAOkZ,IAAUnZ,EACpB,CACH4Z,MAAOkgB,EAAMtjB,EAAO,EACpBqD,IAAKigB,EAAMtjB,EAAO,GAEf2C,EAAQlZ,GAAOkZ,EAAQnZ,EACvB,CACH4Z,MAAOkgB,EAAMtjB,EACbqD,IAAKigB,GAGN,CACHlgB,MAAOkgB,EACPjgB,IAAKigB,EAAMtjB,EAEnB,CACC,SAASyqE,GAAmB57D,GACzB,MAAM4tB,EAAO,CACTpzC,EAAGwlB,EAAMuC,KAAOvC,EAAM+uD,SAASxsD,KAC/BpmB,EAAG6jB,EAAMqC,MAAQrC,EAAM+uD,SAAS1sD,MAChCtW,EAAGiU,EAAMoC,IAAMpC,EAAM+uD,SAAS3sD,IAC9B3mB,EAAGukB,EAAMsC,OAAStC,EAAM+uD,SAASzsD,QAE/Bu5D,EAAS7yE,OAAOoB,OAAO,CAAA,EAAIwjC,GAC3B+a,EAAa,GACbxmC,EAAU,GACV25D,EAAa97D,EAAM+7D,aAAa1yE,OAChC2yE,EAAiBh8D,EAAMvQ,QAAQ0mC,YAC/B8lC,EAAkBD,EAAeE,kBAAoB5qE,GAAKwqE,EAAa,EAC7E,IAAI,IAAI7+E,EAAI,EAAGA,EAAI6+E,EAAY7+E,IAAI,CAC/B,MAAM6rB,EAAOkzD,EAAettD,WAAW1O,EAAMm8D,qBAAqBl/E,IAClEklB,EAAQllB,GAAK6rB,EAAK3G,QAClB,MAAMi1B,EAAgBp3B,EAAMo8D,iBAAiBn/E,EAAG+iB,EAAMq8D,YAAcl6D,EAAQllB,GAAIg/E,GAC1EK,EAAS1wD,GAAO9C,EAAKlK,MACrBowD,EAAW0M,GAAiB17D,EAAMd,IAAKo9D,EAAQt8D,EAAM+7D,aAAa9+E,IACxE0rD,EAAW1rD,GAAK+xE,EAChB,MAAM1lB,EAAej1C,GAAgB2L,EAAM42B,cAAc35C,GAAKg/E,GACxDnoE,EAAQpZ,KAAKL,MAAM+Y,GAAUk2C,IAGnCizB,GAAaV,EAAQjuC,EAAM0b,EAFXqyB,GAAgB7nE,EAAOsjC,EAAcl5C,EAAG8wE,EAASjyE,EAAG,EAAG,KACvD4+E,GAAgB7nE,EAAOsjC,EAAc/mC,EAAG2+D,EAASv0E,EAAG,GAAI,KAE5E,CACAulB,EAAMw8D,eAAe5uC,EAAKpzC,EAAIqhF,EAAOrhF,EAAGqhF,EAAO1/E,EAAIyxC,EAAKzxC,EAAGyxC,EAAK7hC,EAAI8vE,EAAO9vE,EAAG8vE,EAAOpgF,EAAImyC,EAAKnyC,GAC9FukB,EAAMy8D,iBA6DV,SAA8Bz8D,EAAO2oC,EAAYxmC,GAC7C,MAAMhM,EAAQ,GACR2lE,EAAa97D,EAAM+7D,aAAa1yE,OAChCyf,EAAO9I,EAAMvQ,SACbysE,kBAAEA,EAAiB15D,QAAGA,GAAasG,EAAKqtB,YACxCumC,EAAW,CACbC,MAAOlB,GAAsB3yD,GAAQ,EACrCmzD,gBAAiBC,EAAoB5qE,GAAKwqE,EAAa,GAE3D,IAAIh0D,EACJ,IAAI,IAAI7qB,EAAI,EAAGA,EAAI6+E,EAAY7+E,IAAI,CAC/By/E,EAASv6D,QAAUA,EAAQllB,GAC3By/E,EAASvrE,KAAOw3C,EAAW1rD,GAC3B,MAAMmU,EAAOwrE,GAAqB58D,EAAO/iB,EAAGy/E,GAC5CvmE,EAAMxF,KAAKS,GACK,SAAZoR,IACApR,EAAK4Q,QAAU66D,GAAgBzrE,EAAM0W,GACjC1W,EAAK4Q,UACL8F,EAAO1W,GAGnB,CACA,OAAO+E,CACX,CApF6B2mE,CAAqB98D,EAAO2oC,EAAYxmC,EACrE,CACA,SAASo6D,GAAaV,EAAQjuC,EAAM95B,EAAOipE,EAASC,GAChD,MAAMhkE,EAAMte,KAAKyX,IAAIzX,KAAKse,IAAIlF,IACxBmG,EAAMvf,KAAKyX,IAAIzX,KAAKuf,IAAInG,IAC9B,IAAI5V,EAAI,EACJmS,EAAI,EACJ0sE,EAAQxoE,MAAQq5B,EAAKpzC,GACrB0D,GAAK0vC,EAAKpzC,EAAIuiF,EAAQxoE,OAASyE,EAC/B6iE,EAAOrhF,EAAIE,KAAKE,IAAIihF,EAAOrhF,EAAGozC,EAAKpzC,EAAI0D,IAChC6+E,EAAQvoE,IAAMo5B,EAAKzxC,IAC1B+B,GAAK6+E,EAAQvoE,IAAMo5B,EAAKzxC,GAAK6c,EAC7B6iE,EAAO1/E,EAAIzB,KAAKC,IAAIkhF,EAAO1/E,EAAGyxC,EAAKzxC,EAAI+B,IAEvC8+E,EAAQzoE,MAAQq5B,EAAK7hC,GACrBsE,GAAKu9B,EAAK7hC,EAAIixE,EAAQzoE,OAAS0F,EAC/B4hE,EAAO9vE,EAAIrR,KAAKE,IAAIihF,EAAO9vE,EAAG6hC,EAAK7hC,EAAIsE,IAChC2sE,EAAQxoE,IAAMo5B,EAAKnyC,IAC1B4U,GAAK2sE,EAAQxoE,IAAMo5B,EAAKnyC,GAAKwe,EAC7B4hE,EAAOpgF,EAAIf,KAAKC,IAAIkhF,EAAOpgF,EAAGmyC,EAAKnyC,EAAI4U,GAE/C,CACA,SAASusE,GAAqB58D,EAAOhR,EAAO0tE,GACxC,MAAMO,EAAgBj9D,EAAMq8D,aACtBM,MAAEA,EAAKV,gBAAGA,EAAe95D,QAAGA,EAAOhR,KAAGA,GAAUurE,EAChDQ,EAAqBl9D,EAAMo8D,iBAAiBptE,EAAOiuE,EAAgBN,EAAQx6D,EAAS85D,GACpFnoE,EAAQpZ,KAAKL,MAAM+Y,GAAUiB,GAAgB6oE,EAAmBppE,MAAQlC,MACxEvB,EA0EV,SAAmBA,EAAG5V,EAAGqZ,GAMrB,OALc,KAAVA,GAA0B,MAAVA,EAChBzD,GAAK5V,EAAI,GACFqZ,EAAQ,KAAOA,EAAQ,MAC9BzD,GAAK5V,GAEF4V,CACX,CAjFc8sE,CAAUD,EAAmB7sE,EAAGc,EAAK1W,EAAGqZ,GAC5CoW,EAyDV,SAA8BpW,GAC1B,OAAc,IAAVA,GAAyB,MAAVA,EACR,SACAA,EAAQ,IACR,OAEJ,OACX,CAhEsBspE,CAAqBtpE,GACjCyO,GAgEgBrkB,EAhEQg/E,EAAmBh/E,EAgExBnB,EAhE2BoU,EAAKpU,EAiE3C,WADc8Z,EAhEgCqT,GAkExDhsB,GAAKnB,EACY,WAAV8Z,IACP3Y,GAAKnB,EAAI,GAENmB,GANX,IAA0BA,EAAGnB,EAAG8Z,EA/D5B,MAAO,CACHmL,SAAS,EACT9jB,EAAGg/E,EAAmBh/E,EACtBmS,IACA6Z,YACA3H,OACAH,IAAK/R,EACLgS,MAAOE,EAAOpR,EAAKpU,EACnBulB,OAAQjS,EAAIc,EAAK1W,EAEzB,CACA,SAASoiF,GAAgBzrE,EAAM0W,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAMvF,KAAEA,EAAIH,IAAGA,EAAGC,MAAGA,EAAKC,OAAGA,GAAYlR,EAczC,QAbqByW,GAAe,CAChC3pB,EAAGqkB,EACHlS,EAAG+R,GACJ0F,IAASD,GAAe,CACvB3pB,EAAGqkB,EACHlS,EAAGiS,GACJwF,IAASD,GAAe,CACvB3pB,EAAGmkB,EACHhS,EAAG+R,GACJ0F,IAASD,GAAe,CACvB3pB,EAAGmkB,EACHhS,EAAGiS,GACJwF,GAEP,CAiDA,SAASu1D,GAAkBn+D,EAAK4J,EAAM1X,GAClC,MAAMmR,KAAEA,EAAIH,IAAGA,EAAGC,MAAGA,EAAKC,OAAGA,GAAYlR,GACnCoT,cAAEA,GAAmBsE,EAC3B,IAAK9b,EAAcwX,GAAgB,CAC/B,MAAMy3C,EAAevwC,GAAc5C,EAAKmzC,cAClC95C,EAAUwJ,GAAU7C,EAAKrE,iBAC/BvF,EAAIsK,UAAYhF,EAChB,MAAM84D,EAAe/6D,EAAOJ,EAAQI,KAC9Bg7D,EAAcn7D,EAAMD,EAAQC,IAC5Bo7D,EAAgBn7D,EAAQE,EAAOJ,EAAQsB,MACvCg6D,EAAiBn7D,EAASF,EAAMD,EAAQiE,OAC1Cpd,OAAOsT,OAAO2/C,GAAcrK,KAAMt3D,GAAU,IAANA,IACtC4kB,EAAIgI,YACJuD,GAAmBvL,EAAK,CACpBhhB,EAAGo/E,EACHjtE,EAAGktE,EACHxgF,EAAGygF,EACH/iF,EAAGgjF,EACH32D,OAAQm1C,IAEZ/8C,EAAIwI,QAEJxI,EAAI0K,SAAS0zD,EAAcC,EAAaC,EAAeC,EAE/D,CACJ,CAmBA,SAASC,GAAe19D,EAAO8G,EAAQovB,EAAU88B,GAC7C,MAAM9zD,IAAEA,GAASc,EACjB,GAAIk2B,EACAh3B,EAAIkI,IAAIpH,EAAMy2B,QAASz2B,EAAM02B,QAAS5vB,EAAQ,EAAGvV,QAC9C,CACH,IAAI6lC,EAAgBp3B,EAAMo8D,iBAAiB,EAAGt1D,GAC9C5H,EAAIoI,OAAO8vB,EAAcl5C,EAAGk5C,EAAc/mC,GAC1C,IAAI,IAAIpT,EAAI,EAAGA,EAAI+1E,EAAY/1E,IAC3Bm6C,EAAgBp3B,EAAMo8D,iBAAiBn/E,EAAG6pB,GAC1C5H,EAAIqI,OAAO6vB,EAAcl5C,EAAGk5C,EAAc/mC,EAElD,CACJ,CApOAmN,EAAA,mBAAA+9D,IA8PA,MAAMoC,WAA0B3D,GAC5Bz2C,UAAY,eACfA,gBAAkB,CACX/gB,SAAS,EACTo7D,SAAS,EACTjlC,SAAU,YACV1C,WAAY,CACRzzB,SAAS,EACTO,UAAW,EACXkY,WAAY,GACZC,iBAAkB,GAEtBpY,KAAM,CACFozB,UAAU,GAEd1C,WAAY,EACZ/2B,MAAO,CACH8H,mBAAmB,EACnBtW,SAAUsP,GAAMlB,WAAWE,SAE/B45B,YAAa,CACT3xB,mBAAejoB,EACfkoB,gBAAiB,EACjBjC,SAAS,EACT5D,KAAM,CACFzN,KAAM,IAEVlD,SAAU26B,GACCA,EAEXzmB,QAAS,EACT+5D,mBAAmB,IAG3B34C,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjB0S,WAAY,CACR30B,UAAW,SAGnB3W,WAAAA,CAAY4zB,GACRgQ,MAAMhQ,GACLxzB,KAAK0rC,aAAUl6C,EACfwO,KAAK2rC,aAAUn6C,EACfwO,KAAKsxE,iBAAc9/E,EACnBwO,KAAKgxE,aAAe,GACrBhxE,KAAK0xE,iBAAmB,EAC5B,CACA91B,aAAAA,GACI,MAAMxkC,EAAUpX,KAAKgkE,SAAWpjD,GAAU8vD,GAAsB1wE,KAAK0E,SAAW,GAC1E1S,EAAIgO,KAAK0Y,MAAQ1Y,KAAKwf,SAAWpI,EAAQsB,MACzChpB,EAAIsQ,KAAKqb,OAASrb,KAAKirB,UAAY7T,EAAQiE,OACjDrb,KAAK0rC,QAAU/7C,KAAK8X,MAAMzH,KAAKwX,KAAOxlB,EAAI,EAAIolB,EAAQI,MACtDxX,KAAK2rC,QAAUh8C,KAAK8X,MAAMzH,KAAKqX,IAAM3nB,EAAI,EAAI0nB,EAAQC,KACrDrX,KAAKsxE,YAAc3hF,KAAK8X,MAAM9X,KAAKE,IAAImC,EAAGtC,GAAK,EACnD,CACAqsD,mBAAAA,GACI,MAAMlsD,IAAEA,EAAGD,IAAGA,GAASoQ,KAAKi9B,WAAU,GACtCj9B,KAAKnQ,IAAM2S,EAAe3S,KAASkY,MAAMlY,GAAOA,EAAM,EACtDmQ,KAAKpQ,IAAM4S,EAAe5S,KAASmY,MAAMnY,GAAOA,EAAM,EACtDoQ,KAAKmvE,wBACT,CACHO,gBAAAA,GACO,OAAO//E,KAAK2oD,KAAKt4C,KAAKsxE,YAAcZ,GAAsB1wE,KAAK0E,SACnE,CACA64C,kBAAAA,CAAmB7rC,GACfu9D,GAAgB9sE,UAAUo7C,mBAAmBl7C,KAAKrC,KAAM0R,GACxD1R,KAAKgxE,aAAehxE,KAAKw8B,YAAYhqC,IAAI,CAAC0P,EAAO+B,KAC7C,MAAM45B,EAAQ36B,EAASlD,KAAK0E,QAAQ0mC,YAAYloC,SAAU,CACtDhB,EACA+B,GACDjE,MACH,OAAO69B,GAAmB,IAAVA,EAAcA,EAAQ,KACvCvZ,OAAO,CAAC/0B,EAAG2C,IAAI8N,KAAK2R,MAAM8zB,kBAAkBvzC,GACnD,CACA4qD,GAAAA,GACI,MAAM/+B,EAAO/d,KAAK0E,QACdqZ,EAAKtG,SAAWsG,EAAKqtB,YAAY3zB,QACjCo5D,GAAmB7wE,MAEnBA,KAAKyxE,eAAe,EAAG,EAAG,EAAG,EAErC,CACAA,cAAAA,CAAeqB,EAAcC,EAAeC,EAAaC,GACrDjzE,KAAK0rC,SAAW/7C,KAAK8X,OAAOqrE,EAAeC,GAAiB,GAC5D/yE,KAAK2rC,SAAWh8C,KAAK8X,OAAOurE,EAAcC,GAAkB,GAC5DjzE,KAAKsxE,aAAe3hF,KAAKE,IAAImQ,KAAKsxE,YAAc,EAAG3hF,KAAKC,IAAIkjF,EAAcC,EAAeC,EAAaC,GAC1G,CACApnC,aAAAA,CAAc5nC,GAGV,OAAOqF,GAAgBrF,GAFCuC,IAAOxG,KAAKgxE,aAAa1yE,QAAU,IAEV6J,GAD9BnI,KAAK0E,QAAQ+jC,YAAc,GAElD,CACAwD,6BAAAA,CAA8B/pC,GAC1B,GAAID,EAAcC,GACd,OAAO86B,IAEX,MAAMk2C,EAAgBlzE,KAAKsxE,aAAetxE,KAAKpQ,IAAMoQ,KAAKnQ,KAC1D,OAAImQ,KAAK0E,QAAQjB,SACLzD,KAAKpQ,IAAMsS,GAASgxE,GAExBhxE,EAAQlC,KAAKnQ,KAAOqjF,CAChC,CACAC,6BAAAA,CAA8BlqE,GAC1B,GAAIhH,EAAcgH,GACd,OAAO+zB,IAEX,MAAMo2C,EAAiBnqE,GAAYjJ,KAAKsxE,aAAetxE,KAAKpQ,IAAMoQ,KAAKnQ,MACvE,OAAOmQ,KAAK0E,QAAQjB,QAAUzD,KAAKpQ,IAAMwjF,EAAiBpzE,KAAKnQ,IAAMujF,CACzE,CACAhC,oBAAAA,CAAqBntE,GACjB,MAAMmnC,EAAcprC,KAAKgxE,cAAgB,GACzC,GAAI/sE,GAAS,GAAKA,EAAQmnC,EAAY9sC,OAAQ,CAC1C,MAAM+0E,EAAajoC,EAAYnnC,GAC/B,OA7HZ,SAAiC+gB,EAAQ/gB,EAAO45B,GAC5C,OAAOxc,GAAc2D,EAAQ,CACzB6Y,QACA55B,QACApE,KAAM,cAEd,CAuHmByzE,CAAwBtzE,KAAKkb,aAAcjX,EAAOovE,EAC7D,CACJ,CACAhC,gBAAAA,CAAiBptE,EAAOsvE,EAAoBrC,EAAkB,GAC1D,MAAMnoE,EAAQ/I,KAAK6rC,cAAc5nC,GAAS4C,GAAUqqE,EACpD,MAAO,CACH/9E,EAAGxD,KAAKuf,IAAInG,GAASwqE,EAAqBvzE,KAAK0rC,QAC/CpmC,EAAG3V,KAAKse,IAAIlF,GAASwqE,EAAqBvzE,KAAK2rC,QAC/C5iC,QAER,CACAujC,wBAAAA,CAAyBroC,EAAO/B,GAC5B,OAAOlC,KAAKqxE,iBAAiBptE,EAAOjE,KAAKisC,8BAA8B/pC,GAC3E,CACAsxE,eAAAA,CAAgBvvE,GACZ,YAAYqoC,yBAAyBroC,GAAS,EAAGjE,KAAK+/C,eAC1D,CACA0zB,qBAAAA,CAAsBxvE,GAClB,MAAMuT,KAAEA,EAAIH,IAAGA,EAAGC,MAAGA,EAAKC,OAAGA,GAAYvX,KAAK0xE,iBAAiBztE,GAC/D,MAAO,CACHuT,OACAH,MACAC,QACAC,SAER,CACH8qC,cAAAA,GACO,MAAMjvC,gBAAEA,EAAkB2E,MAAMozB,SAAEA,IAAiBnrC,KAAK0E,QACxD,GAAI0O,EAAiB,CACjB,MAAMe,EAAMnU,KAAKmU,IACjBA,EAAImG,OACJnG,EAAIgI,YACJw2D,GAAe3yE,KAAMA,KAAKisC,8BAA8BjsC,KAAKkvE,WAAY/jC,EAAUnrC,KAAKgxE,aAAa1yE,QACrG6V,EAAImI,YACJnI,EAAIsK,UAAYrL,EAChBe,EAAIwI,OACJxI,EAAIuG,SACR,CACJ,CACH4nC,QAAAA,GACO,MAAMnuC,EAAMnU,KAAKmU,IACX4J,EAAO/d,KAAK0E,SACZwmC,WAAEA,EAAUnzB,KAAGA,EAAIQ,OAAGA,GAAYwF,EAClCkqD,EAAajoE,KAAKgxE,aAAa1yE,OACrC,IAAIpM,EAAGwlB,EAAQk2B,EAef,GAdI7vB,EAAKqtB,YAAY3zB,SA3N7B,SAAyBxC,EAAOgzD,GAC5B,MAAM9zD,IAAEA,EAAMzP,SAAS0mC,YAAEA,IAAoBn2B,EAC7C,IAAI,IAAI/iB,EAAI+1E,EAAa,EAAG/1E,GAAK,EAAGA,IAAI,CACpC,MAAMmU,EAAO4O,EAAMy8D,iBAAiBx/E,GACpC,IAAKmU,EAAK4Q,QACN,SAEJ,MAAMqqC,EAAclW,EAAYznB,WAAW1O,EAAMm8D,qBAAqBl/E,IACtEogF,GAAkBn+D,EAAKmtC,EAAaj7C,GACpC,MAAMkrE,EAAS1wD,GAAOygC,EAAYztC,OAC5B1gB,EAAEA,EAACmS,EAAGA,EAAC6Z,UAAGA,GAAe9Y,EAC/ByY,GAAW3K,EAAKc,EAAM+7D,aAAa9+E,GAAIiB,EAAGmS,EAAIisE,EAAOv9D,WAAa,EAAGu9D,EAAQ,CACzE/wE,MAAO8gD,EAAY9gD,MACnB2e,UAAWA,EACXC,aAAc,UAEtB,CACJ,CA2MYs0D,CAAgB1zE,KAAMioE,GAEtBlwD,EAAKN,SACLzX,KAAK0R,MAAMxG,QAAQ,CAACgnB,EAAMjuB,KACtB,GAAc,IAAVA,GAAyB,IAAVA,GAAejE,KAAKnQ,IAAM,EAAG,CAC5C6nB,EAAS1X,KAAKisC,8BAA8B/Z,EAAKhwB,OACjD,MAAMsR,EAAUxT,KAAKkb,WAAWjX,GAC1Bq9C,EAAcvpC,EAAK4L,WAAWnQ,GAC9B+tC,EAAoBhpC,EAAOoL,WAAWnQ,IArMhE,SAAwByB,EAAO0+D,EAAc53D,EAAQksD,EAAY5nB,GAC7D,MAAMlsC,EAAMc,EAAMd,IACZg3B,EAAWwoC,EAAaxoC,UACxB3qC,MAAEA,EAAKwX,UAAGA,GAAe27D,GAC1BxoC,IAAa88B,IAAeznE,IAAUwX,GAAa+D,EAAS,IAGjE5H,EAAImG,OACJnG,EAAIqK,YAAche,EAClB2T,EAAI6D,UAAYA,EAChB7D,EAAIquC,YAAYnC,EAAW7nC,MAAQ,IACnCrE,EAAIsuC,eAAiBpC,EAAW5nC,WAChCtE,EAAIgI,YACJw2D,GAAe19D,EAAO8G,EAAQovB,EAAU88B,GACxC9zD,EAAImI,YACJnI,EAAI0I,SACJ1I,EAAIuG,UACR,CAqLoBk5D,CAAe5zE,KAAMshD,EAAa5pC,EAAQuwD,EAAY1mB,EAC1D,IAGJrW,EAAWzzB,QAAS,CAEpB,IADAtD,EAAImG,OACApoB,EAAI+1E,EAAa,EAAG/1E,GAAK,EAAGA,IAAI,CAChC,MAAMovD,EAAcpW,EAAWvnB,WAAW3jB,KAAKoxE,qBAAqBl/E,KAC9DsO,MAAEA,EAAKwX,UAAGA,GAAespC,EAC1BtpC,GAAcxX,IAGnB2T,EAAI6D,UAAYA,EAChB7D,EAAIqK,YAAche,EAClB2T,EAAIquC,YAAYlB,EAAYpxB,YAC5B/b,EAAIsuC,eAAiBnB,EAAYnxB,iBACjCzY,EAAS1X,KAAKisC,8BAA8BluB,EAAKta,QAAUzD,KAAKnQ,IAAMmQ,KAAKpQ,KAC3Eg+C,EAAW5tC,KAAKqxE,iBAAiBn/E,EAAGwlB,GACpCvD,EAAIgI,YACJhI,EAAIoI,OAAOvc,KAAK0rC,QAAS1rC,KAAK2rC,SAC9Bx3B,EAAIqI,OAAOoxB,EAASz6C,EAAGy6C,EAAStoC,GAChC6O,EAAI0I,SACR,CACA1I,EAAIuG,SACR,CACJ,CACHgoC,UAAAA,GAAc,CACdE,UAAAA,GACO,MAAMzuC,EAAMnU,KAAKmU,IACX4J,EAAO/d,KAAK0E,QACZ6yC,EAAWx5B,EAAKrM,MACtB,IAAK6lC,EAAS9/B,QACV,OAEJ,MAAMgxB,EAAazoC,KAAK6rC,cAAc,GACtC,IAAIn0B,EAAQgB,EACZvE,EAAImG,OACJnG,EAAI8H,UAAUjc,KAAK0rC,QAAS1rC,KAAK2rC,SACjCx3B,EAAIvS,OAAO6mC,GACXt0B,EAAIgL,UAAY,SAChBhL,EAAIiL,aAAe,SACnBpf,KAAK0R,MAAMxG,QAAQ,CAACgnB,EAAMjuB,KACtB,GAAc,IAAVA,GAAejE,KAAKnQ,KAAO,IAAMkuB,EAAKta,QACtC,OAEJ,MAAM69C,EAAc/J,EAAS5zB,WAAW3jB,KAAKkb,WAAWjX,IAClDo7C,EAAWx+B,GAAOygC,EAAYztC,MAEpC,GADA6D,EAAS1X,KAAKisC,8BAA8BjsC,KAAK0R,MAAMzN,GAAO/B,OAC1Do/C,EAAY9nC,kBAAmB,CAC/BrF,EAAIN,KAAOwrC,EAAStlC,OACpBrB,EAAQvE,EAAI8F,YAAYiY,EAAK2L,OAAOnlB,MACpCvE,EAAIsK,UAAY6iC,EAAY7nC,cAC5B,MAAMrC,EAAUwJ,GAAU0gC,EAAY5nC,iBACtCvF,EAAI0K,UAAUnG,EAAQ,EAAItB,EAAQI,MAAOE,EAAS2nC,EAASj5C,KAAO,EAAIgR,EAAQC,IAAKqB,EAAQtB,EAAQsB,MAAO2mC,EAASj5C,KAAOgR,EAAQiE,OACtI,CACAyD,GAAW3K,EAAK+d,EAAK2L,MAAO,GAAInmB,EAAQ2nC,EAAU,CAC9C7+C,MAAO8gD,EAAY9gD,MACnBye,YAAaqiC,EAAYroC,gBACzB+F,YAAasiC,EAAYtoC,oBAGjC7E,EAAIuG,SACR,CACHooC,SAAAA,GAAa,EACdrwC,EAAA,oBAAAmgE,IAEA,MAAMiB,GAAY,CACdC,YAAa,CACTC,QAAQ,EACR3tE,KAAM,EACN4pE,MAAO,KAEXgE,OAAQ,CACJD,QAAQ,EACR3tE,KAAM,IACN4pE,MAAO,IAEXiE,OAAQ,CACJF,QAAQ,EACR3tE,KAAM,IACN4pE,MAAO,IAEXkE,KAAM,CACFH,QAAQ,EACR3tE,KAAM,KACN4pE,MAAO,IAEXmE,IAAK,CACDJ,QAAQ,EACR3tE,KAAM,MACN4pE,MAAO,IAEXoE,KAAM,CACFL,QAAQ,EACR3tE,KAAM,OACN4pE,MAAO,GAEXqE,MAAO,CACHN,QAAQ,EACR3tE,KAAM,OACN4pE,MAAO,IAEXsE,QAAS,CACLP,QAAQ,EACR3tE,KAAM,OACN4pE,MAAO,GAEXuE,KAAM,CACFR,QAAQ,EACR3tE,KAAM,SAGPouE,GAAyBv2E,OAAOD,KAAK61E,IAC3C,SAASY,GAAOhkF,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAASi1B,GAAM1Q,EAAO1V,GACnB,GAAI0C,EAAc1C,GACd,OAAO,KAEX,MAAMm1E,EAAUz/D,EAAM0/D,UAChBC,OAAEA,EAAMtlF,MAAGA,EAAKulF,WAAGA,GAAgB5/D,EAAM6/D,WAC/C,IAAI5yE,EAAQ3C,EAOZ,MANsB,mBAAXq1E,IACP1yE,EAAQ0yE,EAAO1yE,IAEdM,EAAeN,KAChBA,EAA0B,iBAAX0yE,EAAsBF,EAAQ/uD,MAAMzjB,EAAO0yE,GAAUF,EAAQ/uD,MAAMzjB,IAExE,OAAVA,EACO,MAEP5S,IACA4S,EAAkB,SAAV5S,IAAqBqY,GAASktE,KAA8B,IAAfA,EAAuEH,EAAQxnC,QAAQhrC,EAAO5S,GAAvEolF,EAAQxnC,QAAQhrC,EAAO,UAAW2yE,KAE1G3yE,EACZ,CACC,SAAS6yE,GAA0BC,EAASnlF,EAAKD,EAAKqlF,GACnD,MAAMpxE,EAAO2wE,GAAMl2E,OACnB,IAAI,IAAIpM,EAAIsiF,GAAMhwE,QAAQwwE,GAAU9iF,EAAI2R,EAAO,IAAK3R,EAAE,CAClD,MAAMgjF,EAAWrB,GAAUW,GAAMtiF,IAC3BkhC,EAAS8hD,EAASlF,MAAQkF,EAASlF,MAAQvtE,OAAO0yE,iBACxD,GAAID,EAASnB,QAAUpkF,KAAK2oD,MAAM1oD,EAAMC,IAAQujC,EAAS8hD,EAAS9uE,QAAU6uE,EACxE,OAAOT,GAAMtiF,EAErB,CACA,OAAOsiF,GAAM3wE,EAAO,EACxB,CAiBC,SAASuxE,GAAQ1jE,EAAO2jE,EAAMC,GAC3B,GAAKA,GAEE,GAAIA,EAAWh3E,OAAQ,CAC1B,MAAMgM,GAAEA,EAAED,GAAGA,GAAQJ,GAAQqrE,EAAYD,GAEzC3jE,EADkB4jE,EAAWhrE,IAAO+qE,EAAOC,EAAWhrE,GAAMgrE,EAAWjrE,KACpD,CACvB,OALIqH,EAAM2jE,IAAQ,CAMtB,CAcC,SAASE,GAAoBtgE,EAAO1D,EAAQikE,GACzC,MAAM9jE,EAAQ,GACPlf,EAAM,CAAA,EACPqR,EAAO0N,EAAOjT,OACpB,IAAIpM,EAAGgQ,EACP,IAAIhQ,EAAI,EAAGA,EAAI2R,IAAQ3R,EACnBgQ,EAAQqP,EAAOrf,GACfM,EAAI0P,GAAShQ,EACbwf,EAAM9L,KAAK,CACP1D,QACAoX,OAAO,IAGf,OAAgB,IAATzV,GAAe2xE,EA1BzB,SAAuBvgE,EAAOvD,EAAOlf,EAAKgjF,GACvC,MAAMd,EAAUz/D,EAAM0/D,SAChBv8B,GAASs8B,EAAQxnC,QAAQx7B,EAAM,GAAGxP,MAAOszE,GACzChrE,EAAOkH,EAAMA,EAAMpT,OAAS,GAAG4D,MACrC,IAAIoX,EAAOrV,EACX,IAAIqV,EAAQ8+B,EAAO9+B,GAAS9O,EAAM8O,GAASo7D,EAAQzwD,IAAI3K,EAAO,EAAGk8D,GAC7DvxE,EAAQzR,EAAI8mB,GACRrV,GAAS,IACTyN,EAAMzN,GAAOqV,OAAQ,GAG7B,OAAO5H,CACX,CAc8C+jE,CAAcxgE,EAAOvD,EAAOlf,EAAKgjF,GAAzC9jE,CACtC,CACA,MAAMgkE,WAAkB57B,GACpBthB,UAAY,OACfA,gBAAkB,CAClB5gB,OAAQ,OACDw1B,SAAU,CAAA,EACVioC,KAAM,CACFT,QAAQ,EACRxG,MAAM,EACN9+E,OAAO,EACPulF,YAAY,EACZG,QAAS,cACTW,eAAgB,CAAA,GAEpBjkE,MAAO,CACdxN,OAAQ,OACGhB,UAAU,EACVoW,MAAO,CACH2+B,SAAS,KAIxBr4C,WAAAA,CAAY0gB,GACLkjB,MAAMljB,GACLtgB,KAAKihC,OAAS,CACXrnB,KAAM,GACN2iB,OAAQ,GACR5G,IAAK,IAER31B,KAAK41E,MAAQ,MACb51E,KAAK61E,gBAAarkF,EACnBwO,KAAK81E,SAAW,CAAA,EAChB91E,KAAK+1E,aAAc,EACnB/1E,KAAK80E,gBAAatjF,CACtB,CACAu7C,IAAAA,CAAK6f,EAAW7uC,EAAO,IACnB,MAAMs3D,EAAOzoB,EAAUyoB,OAASzoB,EAAUyoB,KAAO,CAAA,GAC1CX,EAAU10E,KAAK20E,SAAW,IAAIvnC,GAASC,MAAMuf,EAAUxf,SAAShc,MACvEsjD,EAAQ3nC,KAAKhvB,GACb9Y,EAAQowE,EAAKM,eAAgBjB,EAAQ1nC,WACrChtC,KAAK80E,WAAa,CACdF,OAAQS,EAAKT,OACbtlF,MAAO+lF,EAAK/lF,MACZulF,WAAYQ,EAAKR,YAErBrxC,MAAMuJ,KAAK6f,GACX5sD,KAAK+1E,YAAch4D,EAAKi4D,UAC5B,CACHrwD,KAAAA,CAAMyY,EAAKn6B,GACJ,YAAYzS,IAAR4sC,EACO,KAEJzY,GAAM3lB,KAAMo+B,EACvB,CACAyU,YAAAA,GACIrP,MAAMqP,eACN7yC,KAAKihC,OAAS,CACVrnB,KAAM,GACN2iB,OAAQ,GACR5G,IAAK,GAEb,CACAomB,mBAAAA,GACI,MAAMr3C,EAAU1E,KAAK0E,QACfgwE,EAAU10E,KAAK20E,SACfvG,EAAO1pE,EAAQ2wE,KAAKjH,MAAQ,MAClC,IAAIv+E,IAAEA,EAAGD,IAAGA,EAAGid,WAAGA,EAAUC,WAAGA,GAAgB9M,KAAK+M,gBAC3D,SAASkpE,EAAar+D,GACN/K,GAAe9E,MAAM6P,EAAO/nB,OAC7BA,EAAMF,KAAKE,IAAIA,EAAK+nB,EAAO/nB,MAE1Bid,GAAe/E,MAAM6P,EAAOhoB,OAC7BA,EAAMD,KAAKC,IAAIA,EAAKgoB,EAAOhoB,KAEnC,CACKid,GAAeC,IAChBmpE,EAAaj2E,KAAKk2E,mBACK,UAAnBxxE,EAAQkT,QAA+C,WAAzBlT,EAAQgN,MAAMxN,QAC5C+xE,EAAaj2E,KAAKi9B,WAAU,KAGpCptC,EAAM2S,EAAe3S,KAASkY,MAAMlY,GAAOA,GAAO6kF,EAAQxnC,QAAQvb,KAAKC,MAAOw8C,GAC9Ex+E,EAAM4S,EAAe5S,KAASmY,MAAMnY,GAAOA,GAAO8kF,EAAQvnC,MAAMxb,KAAKC,MAAOw8C,GAAQ,EACpFpuE,KAAKnQ,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/BoQ,KAAKpQ,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EACjC,CACHsmF,eAAAA,GACO,MAAM7xD,EAAMrkB,KAAKm2E,qBACjB,IAAItmF,EAAM4S,OAAOkE,kBACb/W,EAAM6S,OAAO66B,kBAKjB,OAJIjZ,EAAI/lB,SACJzO,EAAMw0B,EAAI,GACVz0B,EAAMy0B,EAAIA,EAAI/lB,OAAS,IAEpB,CACHzO,MACAD,MAER,CACHysD,UAAAA,GACO,MAAM33C,EAAU1E,KAAK0E,QACf0xE,EAAW1xE,EAAQ2wE,KACnB99B,EAAW7yC,EAAQgN,MACnB4jE,EAAiC,WAApB/9B,EAASrzC,OAAsBlE,KAAKm2E,qBAAuBn2E,KAAKq2E,YAC5D,UAAnB3xE,EAAQkT,QAAsB09D,EAAWh3E,SACzC0B,KAAKnQ,IAAMmQ,KAAK26C,UAAY26B,EAAW,GACvCt1E,KAAKpQ,IAAMoQ,KAAK06C,UAAY46B,EAAWA,EAAWh3E,OAAS,IAE/D,MAAMzO,EAAMmQ,KAAKnQ,IAEX6hB,EDhjVV,SAAwBH,EAAQ1hB,EAAKD,GACrC,IAAI4Z,EAAQ,EACRC,EAAM8H,EAAOjT,OACjB,KAAMkL,EAAQC,GAAO8H,EAAO/H,GAAS3Z,GACjC2Z,IAEJ,KAAMC,EAAMD,GAAS+H,EAAO9H,EAAM,GAAK7Z,GACnC6Z,IAEJ,OAAOD,EAAQ,GAAKC,EAAM8H,EAAOjT,OAASiT,EAAOjP,MAAMkH,EAAOC,GAAO8H,CACzE,CCsiVsB+kE,CAAehB,EAAYzlF,EAD7BmQ,KAAKpQ,KAQjB,OANAoQ,KAAK41E,MAAQQ,EAAShI,OAAS72B,EAASr+B,SAAW67D,GAA0BqB,EAASpB,QAASh1E,KAAKnQ,IAAKmQ,KAAKpQ,IAAKoQ,KAAKu2E,kBAAkB1mF,IAnKjJ,SAAoColB,EAAOwoC,EAAUu3B,EAASnlF,EAAKD,GAChE,IAAI,IAAIsC,EAAIsiF,GAAMl2E,OAAS,EAAGpM,GAAKsiF,GAAMhwE,QAAQwwE,GAAU9iF,IAAI,CAC3D,MAAMk8E,EAAOoG,GAAMtiF,GACnB,GAAI2hF,GAAUzF,GAAM2F,QAAU9+D,EAAM0/D,SAAS1nC,KAAKr9C,EAAKC,EAAKu+E,IAAS3wB,EAAW,EAC5E,OAAO2wB,CAEf,CACA,OAAOoG,GAAMQ,EAAUR,GAAMhwE,QAAQwwE,GAAW,EACpD,CA2J0JwB,CAA2Bx2E,KAAM0R,EAAMpT,OAAQ83E,EAASpB,QAASh1E,KAAKnQ,IAAKmQ,KAAKpQ,MAClOoQ,KAAK61E,WAAct+B,EAASj+B,MAAM2+B,SAA0B,SAAfj4C,KAAK41E,MA3JzD,SAA4BxH,GACzB,IAAI,IAAIl8E,EAAIsiF,GAAMhwE,QAAQ4pE,GAAQ,EAAGvqE,EAAO2wE,GAAMl2E,OAAQpM,EAAI2R,IAAQ3R,EAClE,GAAI2hF,GAAUW,GAAMtiF,IAAI6hF,OACpB,OAAOS,GAAMtiF,EAGzB,CAqJyFukF,CAAmBz2E,KAAK41E,YAApCpkF,EACrEwO,KAAK02E,YAAYpB,GACb5wE,EAAQjB,SACRiO,EAAMjO,UAEH8xE,GAAoBv1E,KAAM0R,EAAO1R,KAAK61E,WACjD,CACAj5B,aAAAA,GACQ58C,KAAK0E,QAAQiyE,qBACb32E,KAAK02E,YAAY12E,KAAK0R,MAAMlf,IAAK0/B,IAAQA,EAAKhwB,OAEtD,CACHw0E,WAAAA,CAAYpB,EAAa,IAClB,IAEIl9B,EAAO5tC,EAFPhB,EAAQ,EACRC,EAAM,EAENzJ,KAAK0E,QAAQgT,QAAU49D,EAAWh3E,SAClC85C,EAAQp4C,KAAK42E,mBAAmBtB,EAAW,IAEvC9rE,EADsB,IAAtB8rE,EAAWh3E,OACH,EAAI85C,GAEHp4C,KAAK42E,mBAAmBtB,EAAW,IAAMl9B,GAAS,EAE/D5tC,EAAOxK,KAAK42E,mBAAmBtB,EAAWA,EAAWh3E,OAAS,IAE1DmL,EADsB,IAAtB6rE,EAAWh3E,OACLkM,GAECA,EAAOxK,KAAK42E,mBAAmBtB,EAAWA,EAAWh3E,OAAS,KAAO,GAGpF,MAAM8iD,EAAQk0B,EAAWh3E,OAAS,EAAI,GAAM,IAC5CkL,EAAQO,GAAYP,EAAO,EAAG43C,GAC9B33C,EAAMM,GAAYN,EAAK,EAAG23C,GAC1BphD,KAAK81E,SAAW,CACZtsE,QACAC,MACA2pB,OAAQ,GAAK5pB,EAAQ,EAAIC,GAEjC,CACH4sE,SAAAA,GACO,MAAM3B,EAAU10E,KAAK20E,SACf9kF,EAAMmQ,KAAKnQ,IACXD,EAAMoQ,KAAKpQ,IACX8U,EAAU1E,KAAK0E,QACf0xE,EAAW1xE,EAAQ2wE,KACnBh8D,EAAQ+8D,EAAShI,MAAQ2G,GAA0BqB,EAASpB,QAASnlF,EAAKD,EAAKoQ,KAAKu2E,kBAAkB1mF,IACtG4/E,EAAW5sE,EAAe6B,EAAQgN,MAAM+9D,SAAU,GAClDoH,EAAoB,SAAVx9D,GAAmB+8D,EAASvB,WACtCiC,EAAanvE,GAASkvE,KAAwB,IAAZA,EAClCnlE,EAAQ,CAAA,EACd,IACI2jE,EAAMhpE,EADN+rC,EAAQvoD,EAMZ,GAJIinF,IACA1+B,GAASs8B,EAAQxnC,QAAQkL,EAAO,UAAWy+B,IAE/Cz+B,GAASs8B,EAAQxnC,QAAQkL,EAAO0+B,EAAa,MAAQz9D,GACjDq7D,EAAQznC,KAAKr9C,EAAKC,EAAKwpB,GAAS,IAASo2D,EACzC,MAAM,IAAI1rD,MAAMl0B,EAAM,QAAUD,EAAM,uCAAyC6/E,EAAW,IAAMp2D,GAEpG,MAAMi8D,EAAsC,SAAzB5wE,EAAQgN,MAAMxN,QAAqBlE,KAAK+2E,oBAC3D,IAAI1B,EAAOj9B,EAAO/rC,EAAQ,EAAGgpE,EAAOzlF,EAAKylF,GAAQX,EAAQzwD,IAAIoxD,EAAM5F,EAAUp2D,GAAQhN,IACjF+oE,GAAQ1jE,EAAO2jE,EAAMC,GAKzB,OAHID,IAASzlF,GAA0B,UAAnB8U,EAAQkT,QAAgC,IAAVvL,GAC9C+oE,GAAQ1jE,EAAO2jE,EAAMC,GAElBr3E,OAAOD,KAAK0T,GAAO2vB,KAAKozC,IAAQjiF,IAAKW,IAAKA,EACrD,CACH2qC,gBAAAA,CAAiB57B,GACV,MAAMwyE,EAAU10E,KAAK20E,SACfyB,EAAWp2E,KAAK0E,QAAQ2wE,KAC9B,OAAIe,EAASY,cACFtC,EAAQrjE,OAAOnP,EAAOk0E,EAASY,eAEnCtC,EAAQrjE,OAAOnP,EAAOk0E,EAAST,eAAesB,SACzD,CACH5lE,MAAAA,CAAOnP,EAAOmP,GACP,MACM27B,EADUhtC,KAAK0E,QACG2wE,KAAKM,eACvBvH,EAAOpuE,KAAK41E,MACZsB,EAAM7lE,GAAU27B,EAAQohC,GAC9B,OAAOpuE,KAAK20E,SAAStjE,OAAOnP,EAAOg1E,EACvC,CACHC,mBAAAA,CAAoB9B,EAAMpxE,EAAOyN,EAAOL,GACjC,MAAM3M,EAAU1E,KAAK0E,QACfsM,EAAYtM,EAAQgN,MAAMxO,SAChC,GAAI8N,EACA,OAAO9N,EAAS8N,EAAW,CACvBqkE,EACApxE,EACAyN,GACD1R,MAEP,MAAMgtC,EAAUtoC,EAAQ2wE,KAAKM,eACvBvH,EAAOpuE,KAAK41E,MACZJ,EAAYx1E,KAAK61E,WACjBuB,EAAchJ,GAAQphC,EAAQohC,GAC9BiJ,EAAc7B,GAAaxoC,EAAQwoC,GACnCtjD,EAAOxgB,EAAMzN,GACbqV,EAAQk8D,GAAa6B,GAAenlD,GAAQA,EAAK5Y,MACvD,OAAOtZ,KAAK20E,SAAStjE,OAAOgkE,EAAMhkE,IAAWiI,EAAQ+9D,EAAcD,GACvE,CACH75B,kBAAAA,CAAmB7rC,GACZ,IAAIxf,EAAG2R,EAAMquB,EACb,IAAIhgC,EAAI,EAAG2R,EAAO6N,EAAMpT,OAAQpM,EAAI2R,IAAQ3R,EACxCggC,EAAOxgB,EAAMxf,GACbggC,EAAK2L,MAAQ79B,KAAKm3E,oBAAoBjlD,EAAKhwB,MAAOhQ,EAAGwf,EAE7D,CACHklE,kBAAAA,CAAmB10E,GACZ,OAAiB,OAAVA,EAAiB86B,KAAO96B,EAAQlC,KAAKnQ,MAAQmQ,KAAKpQ,IAAMoQ,KAAKnQ,IACxE,CACHmd,gBAAAA,CAAiB9K,GACV,MAAMo1E,EAAUt3E,KAAK81E,SACfpsD,EAAM1pB,KAAK42E,mBAAmB10E,GACpC,OAAOlC,KAAK4lC,oBAAoB0xC,EAAQ9tE,MAAQkgB,GAAO4tD,EAAQlkD,OACnE,CACH0S,gBAAAA,CAAiBjrB,GACV,MAAMy8D,EAAUt3E,KAAK81E,SACfpsD,EAAM1pB,KAAK8/C,mBAAmBjlC,GAASy8D,EAAQlkD,OAASkkD,EAAQ7tE,IACtE,OAAOzJ,KAAKnQ,IAAM65B,GAAO1pB,KAAKpQ,IAAMoQ,KAAKnQ,IAC7C,CACH0nF,aAAAA,CAAc15C,GACP,MAAM25C,EAAYx3E,KAAK0E,QAAQgN,MACzB+lE,EAAiBz3E,KAAKmU,IAAI8F,YAAY4jB,GAAOnlB,MAC7C3P,EAAQZ,GAAUnI,KAAK2jC,eAAiB6zC,EAAU1+D,YAAc0+D,EAAU3+D,aAC1E6+D,EAAc/nF,KAAKuf,IAAInG,GACvB4uE,EAAchoF,KAAKse,IAAIlF,GACvB6uE,EAAe53E,KAAK0/C,wBAAwB,GAAGt5C,KACrD,MAAO,CACHpU,EAAGylF,EAAiBC,EAAcE,EAAeD,EACjDjoF,EAAG+nF,EAAiBE,EAAcC,EAAeF,EAEzD,CACHnB,iBAAAA,CAAkBsB,GACX,MAAMzB,EAAWp2E,KAAK0E,QAAQ2wE,KACxBM,EAAiBS,EAAST,eAC1BtkE,EAASskE,EAAeS,EAAShI,OAASuH,EAAe7B,YACzDgE,EAAe93E,KAAKm3E,oBAAoBU,EAAa,EAAGtC,GAAoBv1E,KAAM,CACpF63E,GACD73E,KAAK61E,YAAaxkE,GACfjL,EAAOpG,KAAKu3E,cAAcO,GAC1B7C,EAAWtlF,KAAK8X,MAAMzH,KAAK2jC,eAAiB3jC,KAAK0Y,MAAQtS,EAAKpU,EAAIgO,KAAKqb,OAASjV,EAAK1W,GAAK,EAChG,OAAOulF,EAAW,EAAIA,EAAW,CACrC,CACH8B,iBAAAA,GACO,IACI7kF,EAAG2R,EADHyxE,EAAat1E,KAAKihC,OAAOrnB,MAAQ,GAErC,GAAI07D,EAAWh3E,OACX,OAAOg3E,EAEX,MAAMn6B,EAAQn7C,KAAKm3B,0BACnB,GAAIn3B,KAAK+1E,aAAe56B,EAAM78C,OAC1B,YAAY2iC,OAAOrnB,KAAOuhC,EAAM,GAAG9jB,WAAWqG,mBAAmB19B,MAErE,IAAI9N,EAAI,EAAG2R,EAAOs3C,EAAM78C,OAAQpM,EAAI2R,IAAQ3R,EACxCojF,EAAaA,EAAWl0C,OAAO+Z,EAAMjpD,GAAGmlC,WAAWqG,mBAAmB19B,OAE1E,OAAOA,KAAKihC,OAAOrnB,KAAO5Z,KAAKkuB,UAAUonD,EAC7C,CACHa,kBAAAA,GACO,MAAMb,EAAat1E,KAAKihC,OAAO1E,QAAU,GACzC,IAAIrqC,EAAG2R,EACP,GAAIyxE,EAAWh3E,OACX,OAAOg3E,EAEX,MAAM/4C,EAASv8B,KAAKw8B,YACpB,IAAItqC,EAAI,EAAG2R,EAAO04B,EAAOj+B,OAAQpM,EAAI2R,IAAQ3R,EACzCojF,EAAW1vE,KAAK+f,GAAM3lB,KAAMu8B,EAAOrqC,KAEvC,OAAO8N,KAAKihC,OAAO1E,OAASv8B,KAAK+1E,YAAcT,EAAat1E,KAAKkuB,UAAUonD,EAC/E,CACHpnD,SAAAA,CAAU3c,GACH,OAAOpG,GAAaoG,EAAO8vB,KAAKozC,IACpC,EAGJ,SAAS1zE,GAAYmJ,EAAO7I,EAAKoC,GAC7B,IAEIs0E,EAAYC,EAAYC,EAAYC,EAFpC5tE,EAAK,EACLD,EAAKH,EAAM5L,OAAS,EAEpBmF,GACIpC,GAAO6I,EAAMI,GAAIof,KAAOroB,GAAO6I,EAAMG,GAAIqf,OACtCpf,KAAKD,MAAQE,GAAaL,EAAO,MAAO7I,MAE5CqoB,IAAKquD,EAAa1C,KAAM4C,GAAgB/tE,EAAMI,MAC9Cof,IAAKsuD,EAAa3C,KAAM6C,GAAgBhuE,EAAMG,MAE7ChJ,GAAO6I,EAAMI,GAAI+qE,MAAQh0E,GAAO6I,EAAMG,GAAIgrE,QACvC/qE,KAAKD,MAAQE,GAAaL,EAAO,OAAQ7I,MAE7Cg0E,KAAM0C,EAAaruD,IAAKuuD,GAAgB/tE,EAAMI,MAC9C+qE,KAAM2C,EAAatuD,IAAKwuD,GAAgBhuE,EAAMG,KAErD,MAAM8tE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe52E,EAAM02E,GAAcI,EAAOF,CACvF,CArBAxlE,EAAA,YAAAijE,IAsBA,MAAM0C,WAAwB1C,GAC1Bl9C,UAAY,aACfA,gBAAkBk9C,GAAUv/D,SAC5BvW,WAAAA,CAAY0gB,GACLkjB,MAAMljB,GACLtgB,KAAKq4E,OAAS,GACdr4E,KAAKs4E,aAAU9mF,EACfwO,KAAKu4E,iBAAc/mF,CACxB,CACHklF,WAAAA,GACO,MAAMpB,EAAat1E,KAAKw4E,yBAClBtuE,EAAQlK,KAAKq4E,OAASr4E,KAAKy4E,iBAAiBnD,GAClDt1E,KAAKs4E,QAAUv3E,GAAYmJ,EAAOlK,KAAKnQ,KACvCmQ,KAAKu4E,YAAcx3E,GAAYmJ,EAAOlK,KAAKpQ,KAAOoQ,KAAKs4E,QACvD90C,MAAMkzC,YAAYpB,EACtB,CACHmD,gBAAAA,CAAiBnD,GACV,MAAMzlF,IAAEA,EAAGD,IAAGA,GAASoQ,KACjBoL,EAAQ,GACRlB,EAAQ,GACd,IAAIhY,EAAG2R,EAAMokB,EAAMsZ,EAAMnb,EACzB,IAAIl0B,EAAI,EAAG2R,EAAOyxE,EAAWh3E,OAAQpM,EAAI2R,IAAQ3R,EAC7CqvC,EAAO+zC,EAAWpjF,GACdqvC,GAAQ1xC,GAAO0xC,GAAQ3xC,GACvBwb,EAAMxF,KAAK27B,GAGnB,GAAIn2B,EAAM9M,OAAS,EACf,MAAO,CACH,CACI+2E,KAAMxlF,EACN65B,IAAK,GAET,CACI2rD,KAAMzlF,EACN85B,IAAK,IAIjB,IAAIx3B,EAAI,EAAG2R,EAAOuH,EAAM9M,OAAQpM,EAAI2R,IAAQ3R,EACxCk0B,EAAOhb,EAAMlZ,EAAI,GACjB+1B,EAAO7c,EAAMlZ,EAAI,GACjBqvC,EAAOn2B,EAAMlZ,GACTvC,KAAKL,OAAO82B,EAAO6B,GAAQ,KAAOsZ,GAClCr3B,EAAMtE,KAAK,CACPyvE,KAAM9zC,EACN7X,IAAKx3B,GAAK2R,EAAO,KAI7B,OAAOqG,CACX,CACHmsE,SAAAA,GACO,MAAMxmF,EAAMmQ,KAAKnQ,IACXD,EAAMoQ,KAAKpQ,IACjB,IAAI0lF,EAAa9xC,MAAMuzC,oBAOvB,OANKzB,EAAW/iE,SAAS1iB,IAASylF,EAAWh3E,QACzCg3E,EAAWrqE,OAAO,EAAG,EAAGpb,GAEvBylF,EAAW/iE,SAAS3iB,IAA8B,IAAtB0lF,EAAWh3E,QACxCg3E,EAAW1vE,KAAKhW,GAEb0lF,EAAWj0C,KAAK,CAAC5wC,EAAGC,IAAID,EAAIC,EACvC,CACH8nF,sBAAAA,GACO,IAAIlD,EAAat1E,KAAKihC,OAAOtL,KAAO,GACpC,GAAI2/C,EAAWh3E,OACX,OAAOg3E,EAEX,MAAM17D,EAAO5Z,KAAK+2E,oBACZl5C,EAAQ79B,KAAKm2E,qBAOnB,OALIb,EADA17D,EAAKtb,QAAUu/B,EAAMv/B,OACR0B,KAAKkuB,UAAUtU,EAAKwnB,OAAOvD,IAE3BjkB,EAAKtb,OAASsb,EAAOikB,EAEtCy3C,EAAat1E,KAAKihC,OAAOtL,IAAM2/C,EACxBA,CACX,CACHsB,kBAAAA,CAAmB10E,GACZ,OAAQnB,GAAYf,KAAKq4E,OAAQn2E,GAASlC,KAAKs4E,SAAWt4E,KAAKu4E,WACnE,CACHzyC,gBAAAA,CAAiBjrB,GACV,MAAMy8D,EAAUt3E,KAAK81E,SACfj2B,EAAU7/C,KAAK8/C,mBAAmBjlC,GAASy8D,EAAQlkD,OAASkkD,EAAQ7tE,IAC1E,OAAO1I,GAAYf,KAAKq4E,OAAQx4B,EAAU7/C,KAAKu4E,YAAcv4E,KAAKs4E,SAAS,EAC/E,EACJ7lE,EAAA,kBAAA2lE,IAEG,IAACljE,GAAMzC,EAAA,SAAgBxU,OAAO2gC,OAAO,CACxC+N,UAAW,KACX6gC,cAAeA,GACfmC,YAAaA,GACba,iBAAkBA,GAClBoC,kBAAmBA,GACnB8C,UAAWA,GACX0C,gBAAiBA,MAGE3lE,EAAA,gBAAG,CAClBi6B,GACA/4B,GACAoB,GACAG","x_google_ignoreList":[0,1,2]}